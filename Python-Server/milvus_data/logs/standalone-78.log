[2025/05/12 00:30:35.715 +02:00] [INFO] [logutil/logutil.go:165] ["Log directory"] [configDir="D:\\Human Centered NLP\\conversation-ai\\Python-Server\\milvus_data\\logs"]
[2025/05/12 00:30:35.715 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:35.716 +02:00] [INFO] [logutil/logutil.go:166] ["Set log file to "] [path="D:\\Human Centered NLP\\conversation-ai\\Python-Server\\milvus_data\\logs/standalone-78.log"]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [indexnode/indexnode.go:204] ["IndexNode init session successful"] [serverID=80]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [indexnode/indexnode.go:212] ["IndexNode NewMinIOKV succeeded"]
[2025/05/12 00:30:35.716 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=datacoord] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:35.716 +02:00] [INFO] [querynode/query_node.go:211] ["QueryNode init session"] [nodeID=78] ["node address"=192.168.0.100:40002]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=datacoord] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=rootcoord] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=datacoord] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=rootcoord] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:35.716 +02:00] [INFO] [indexcoord/index_coord.go:207] ["IndexCoord init"] [stateCode=Initializing]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=rootcoord] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=datacoord] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=rootcoord] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=rootcoord] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:35.716 +02:00] [INFO] [indexcoord/index_coord.go:214] ["IndexCoord try to connect etcd"]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=rootcoord] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=rootcoord] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=datacoord] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=rootcoord] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=datacoord] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=datacoord] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:35.716 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=datacoord] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:35.717 +02:00] [INFO] [rootcoord/service.go:213] ["RootCoord start to create IndexCoord client"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:35.716 +02:00] [INFO] [indexcoord/meta_table.go:98] ["IndexCoord metaTable reloadFromKV load indexes"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [querynode/query_node.go:327] ["QueryNode init rateCollector done"] [nodeID=78]
[2025/05/12 00:30:35.717 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [proxy/service.go:533] ["create RootCoord client for Proxy done"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [proxy/service.go:536] ["init RootCoord client for Proxy"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [proxy/service.go:541] ["init RootCoord client for Proxy done"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [proxy/service.go:543] ["Proxy wait for RootCoord to be healthy"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [querynode/query_node.go:337] ["queryNode try to connect etcd success"] [MetaRootPath=by-dev/meta]
[2025/05/12 00:30:35.717 +02:00] [INFO] [querycoord/service.go:167] ["QueryCoord try to wait for RootCoord ready"]
[2025/05/12 00:30:35.717 +02:00] [INFO] [querynode/segment_loader.go:978] ["SegmentLoader created"] [ioPoolSize=128] [cpuPoolSize=16]
[2025/05/12 00:30:35.717 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.717 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.717 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.717 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:544\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.717 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:279\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:191\ngithub.com/milvus-io/milvus/cmd/components.(*DataNode).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/data_node.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.719 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:30:35.717 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:168\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:102\ngithub.com/milvus-io/milvus/cmd/components.(*QueryCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/query_coord.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.719 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:30:35.719 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:30:35.719 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:30:35.719 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.719 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:544\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexcoord/meta_table.go:118] ["IndexCoord metaTable reloadFromKV success"]
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexcoord/index_coord.go:221] ["IndexCoord try to connect etcd success"]
[2025/05/12 00:30:35.720 +02:00] [DEBUG] [indexnode/indexnode.go:218] ["Init IndexNode finished"] []
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexnode/service.go:78] ["IndexNode init done ..."]
[2025/05/12 00:30:35.720 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexnode] [key=indexnode-71] [address=192.168.0.100:40004]
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexcoord/index_coord.go:225] [IndexCoord] ["session number"=1] [revision=9511]
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexcoord/index_coord.go:230] ["IndexCoord get node sessions from etcd"] ["bind mode"=false] ["node address"=localhost:22930]
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexcoord/node_manager.go:95] ["IndexCoord addNode"] [nodeID=71] ["node address"=192.168.0.100:40004]
[2025/05/12 00:30:35.720 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.720 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.720 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:168\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:102\ngithub.com/milvus-io/milvus/cmd/components.(*QueryCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/query_coord.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.720 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:30:35.720 +02:00] [DEBUG] [indexnode/indexnode.go:233] [IndexNode] [State=Healthy]
[2025/05/12 00:30:35.720 +02:00] [DEBUG] [indexnode/indexnode.go:236] ["IndexNode start finished"] []
[2025/05/12 00:30:35.720 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=indexnode] [ServerID=80]
[2025/05/12 00:30:35.720 +02:00] [INFO] [indexnode/task_scheduler.go:240] ["IndexNode TaskScheduler start build loop ..."]
[2025/05/12 00:30:35.720 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:279\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:191\ngithub.com/milvus-io/milvus/cmd/components.(*DataNode).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/data_node.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.720 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:30:35.720 +02:00] [INFO] [gc/gc_tuner.go:130] ["GC Helper initialized."] ["Initial GoGC"=100] [minimumGOGC=30] [maximumGOGC=200] [memoryThreshold=13301803008]
[2025/05/12 00:30:35.721 +02:00] [INFO] [querynode/query_node.go:382] ["query node init successfully"] [queryNodeID=78] [IP=192.168.0.100] [Port=40002]
[2025/05/12 00:30:35.721 +02:00] [INFO] [querynode/service.go:235] ["QueryNode init done ..."]
[2025/05/12 00:30:35.721 +02:00] [INFO] [querynode/query_node.go:411] ["query node start successfully"] [queryNodeID=78] [IP=192.168.0.100] [Port=40002]
[2025/05/12 00:30:35.721 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=querynode] [ServerID=78]
[2025/05/12 00:30:35.721 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:35.721 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/indexnode-80] [value="{\"ServerID\":80,\"ServerName\":\"indexnode\",\"Address\":\"192.168.0.100:40004\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:35.721 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=indexnode] [serverID=80]
[2025/05/12 00:30:35.722 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/querynode-78] [value="{\"ServerID\":78,\"ServerName\":\"querynode\",\"Address\":\"192.168.0.100:40002\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:35.722 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=querynode] [serverID=78]
[2025/05/12 00:30:35.722 +02:00] [INFO] [indexnode/indexnode.go:133] ["IndexNode Register Finished"]
[2025/05/12 00:30:35.722 +02:00] [INFO] [querynode/query_node.go:219] ["QueryNode Register Finished"]
[2025/05/12 00:30:35.722 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:35.722 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:35.724 +02:00] [INFO] [querynode/service.go:240] ["QueryNode start done ..."]
[2025/05/12 00:30:35.724 +02:00] [DEBUG] [components/query_node.go:57] ["QueryNode successfully started"]
[2025/05/12 00:30:35.725 +02:00] [INFO] [indexnode/service.go:214] ["IndexNode Register etcd success"]
[2025/05/12 00:30:35.725 +02:00] [INFO] [indexnode/service.go:82] ["IndexNode start done ..."]
[2025/05/12 00:30:35.725 +02:00] [DEBUG] [components/index_node.go:55] ["IndexNode successfully started"]
[2025/05/12 00:30:35.725 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:35.726 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=100] ["heapuse "=30] ["total memory"=12879] ["next GC"=36] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002635725588600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=indexcoord] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=indexcoord] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=indexcoord] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=indexcoord] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=indexcoord] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=indexcoord] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=indexcoord] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:35.726 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=indexcoord] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:35.726 +02:00] [INFO] [rootcoord/service.go:221] ["RootCoord start to create QueryCoord client"]
[2025/05/12 00:30:35.726 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:35.726 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=indexnode] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=indexnode] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=indexnode] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=indexnode] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=indexnode] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=indexnode] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=indexnode] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=indexnode] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:35.728 +02:00] [DEBUG] [indexcoord/node_manager.go:59] ["IndexCoord NodeManager setClient"] [nodeID=71]
[2025/05/12 00:30:35.728 +02:00] [INFO] [indexcoord/node_manager.go:69] ["IndexNode NodeManager setClient success"] [nodeID=71] ["IndexNode num"=1]
[2025/05/12 00:30:35.728 +02:00] [INFO] [indexcoord/index_coord.go:253] [IndexCoord] ["IndexNode number"=1]
[2025/05/12 00:30:35.729 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [indexcoord/index_coord.go:264] ["IndexCoord new minio chunkManager success"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [indexcoord/flush_segment_watcher.go:87] ["flushSegmentWatcher reloadFromKV"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [indexcoord/flush_segment_watcher.go:109] ["flushSegmentWatcher reloadFromKV success"] [etcdRevision=9513]
[2025/05/12 00:30:35.729 +02:00] [INFO] [indexcoord/index_coord.go:278] ["IndexCoord new task scheduler success"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [indexcoord/index_coord.go:281] ["IndexCoord init finished"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:35.729 +02:00] [INFO] [indexcoord/service.go:151] ["IndexCoord try to wait for RootCoord ready"]
[2025/05/12 00:30:35.729 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.729 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:152\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:85\ngithub.com/milvus-io/milvus/cmd/components.(*IndexCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/index_coord.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.729 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:30:35.729 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:30:35.729 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:30:35.729 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:152\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:85\ngithub.com/milvus-io/milvus/cmd/components.(*IndexCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/index_coord.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:35.729 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=querycoord] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=querycoord] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=querycoord] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=querycoord] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=querycoord] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=querycoord] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=querycoord] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:35.731 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=querycoord] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:35.731 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:35.731 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:35.732 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=81]
[2025/05/12 00:30:35.732 +02:00] [INFO] [rootcoord/root_coord.go:173] ["update rootcoord state"] [state=Initializing]
[2025/05/12 00:30:35.733 +02:00] [INFO] [tso/tso.go:121] ["sync and save timestamp"] [last=2025/05/12 00:17:31.208 +02:00] [save=2025/05/12 00:30:38.732 +02:00] [next=2025/05/12 00:30:35.732 +02:00]
[2025/05/12 00:30:35.733 +02:00] [INFO] [rootcoord/root_coord.go:385] ["id allocator initialized"] [root_path=by-dev/kv] [sub_path=gid] [key=idTimestamp]
[2025/05/12 00:30:35.733 +02:00] [INFO] [tso/tso.go:121] ["sync and save timestamp"] [last=2025/05/12 00:30:02.538 +02:00] [save=2025/05/12 00:30:38.733 +02:00] [next=2025/05/12 00:30:35.733 +02:00]
[2025/05/12 00:30:35.733 +02:00] [INFO] [rootcoord/root_coord.go:401] ["tso allocator initialized"] [root_path=by-dev/kv] [sub_path=gid] [key=idTimestamp]
[2025/05/12 00:30:35.733 +02:00] [DEBUG] [rootcoord/suffix_snapshot.go:558] ["suffix snapshot GC goroutine start!"]
[2025/05/12 00:30:35.734 +02:00] [INFO] [rootcoord/meta_table.go:148] ["recover databases"] ["num of dbs"=1]
[2025/05/12 00:30:35.736 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=26] ["total memory"=12879] ["next GC"=23] ["new GOGC"=30] [gc-pause=524.8µs] [gc-pause-end=1747002635736565000]
[2025/05/12 00:30:35.736 +02:00] [INFO] [rootcoord/meta_table.go:186] ["recover collections from db"] [collection_num=1] [partition_num=1]
[2025/05/12 00:30:35.736 +02:00] [INFO] [rootcoord/meta_table.go:203] ["meta table recovery finished"]
[2025/05/12 00:30:35.738 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:35.738 +02:00] [INFO] [paramtable/quota_param.go:787] ["init disk quota"] [diskQuota(MB)=+inf]
[2025/05/12 00:30:35.738 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_0]
[2025/05/12 00:30:35.738 +02:00] [INFO] [paramtable/quota_param.go:802] ["init disk quota per DB"] [diskQuotaPerCollection(MB)=1.7976931348623157e+308]
[2025/05/12 00:30:35.738 +02:00] [INFO] [paramtable/component_param.go:1578] ["init segment max idle time"] [value=10m0s]
[2025/05/12 00:30:35.738 +02:00] [INFO] [paramtable/component_param.go:1583] ["init segment min size from idle to sealed"] [value=16]
[2025/05/12 00:30:35.738 +02:00] [INFO] [paramtable/component_param.go:1593] ["init segment max binlog file to sealed"] [value=32]
[2025/05/12 00:30:35.739 +02:00] [INFO] [paramtable/component_param.go:1588] ["init segment expansion rate"] [value=1.25]
[2025/05/12 00:30:35.739 +02:00] [INFO] [paramtable/base_table.go:145] ["cannot find etcd.endpoints"]
[2025/05/12 00:30:35.739 +02:00] [INFO] [paramtable/hook_config.go:19] ["hook config"] [hook={}]
[2025/05/12 00:30:35.738 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_1]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_2]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_3]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_4]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_5]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_6]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_7]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_8]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_9]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_10]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_11]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_12]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_13]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_14]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_15]
[2025/05/12 00:30:35.739 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:35.739 +02:00] [INFO] [rootcoord/dml_channels.go:178] ["init dml channels"] [prefix=by-dev-rootcoord-dml] [num=16]
[2025/05/12 00:30:35.739 +02:00] [INFO] [rootcoord/timeticksync.go:121] ["recover physical channels"] [collID=457665900034916433] ["physical channels"="[by-dev-rootcoord-dml_2]"]
[2025/05/12 00:30:35.740 +02:00] [INFO] [rootcoord/timeticksync.go:226] ["Add session for timeticksync"] [serverID=81]
[2025/05/12 00:30:35.740 +02:00] [INFO] [rootcoord/root_coord.go:470] ["RootCoord init QuotaCenter done"]
[2025/05/12 00:30:35.742 +02:00] [DEBUG] [rootcoord/kv_catalog.go:727] ["the key has existed"] [key=root-coord/credential/roles/admin]
[2025/05/12 00:30:35.742 +02:00] [DEBUG] [rootcoord/kv_catalog.go:727] ["the key has existed"] [key=root-coord/credential/roles/public]
[2025/05/12 00:30:35.742 +02:00] [INFO] [rootcoord/service.go:162] ["RootCoord init done ..."]
[2025/05/12 00:30:35.742 +02:00] [INFO] [rootcoord/service.go:299] ["RootCoord Core start ..."]
[2025/05/12 00:30:35.742 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=rootcoord] [ServerID=81]
[2025/05/12 00:30:35.743 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/rootcoord] [value="{\"ServerID\":81,\"ServerName\":\"rootcoord\",\"Address\":\"192.168.0.100:40000\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:35.743 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=rootcoord] [serverID=81]
[2025/05/12 00:30:35.743 +02:00] [INFO] [rootcoord/root_coord.go:302] ["RootCoord Register Finished"]
[2025/05/12 00:30:35.743 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:35.743 +02:00] [INFO] [rootcoord/proxy_manager.go:85] ["succeed to init sessions on etcd"] [sessions="[{\"ServerID\":77,\"ServerName\":\"proxy\",\"Address\":\"192.168.0.100:19529\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}]"] [revision=9517]
[2025/05/12 00:30:35.743 +02:00] [INFO] [rootcoord/timeticksync.go:246] ["Init proxy sessions for timeticksync"] [serverID=77]
[2025/05/12 00:30:35.748 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=26] ["total memory"=12879] ["next GC"=24] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002635747154800]
[2025/05/12 00:30:35.749 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=proxy] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=proxy] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=proxy] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=proxy] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=proxy] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=proxy] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=proxy] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=proxy] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:35.752 +02:00] [INFO] [rootcoord/proxy_client_manager.go:110] ["succeed to create proxy client"] [address=192.168.0.100:19529] [serverID=77]
[2025/05/12 00:30:35.752 +02:00] [INFO] [rootcoord/root_coord.go:173] ["update rootcoord state"] [state=Healthy]
[2025/05/12 00:30:35.752 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:35.752 +02:00] [INFO] [rootcoord/root_coord.go:676] ["rootcoord startup successfully"]
[2025/05/12 00:30:35.752 +02:00] [INFO] [rootcoord/service.go:167] ["RootCoord start done ..."]
[2025/05/12 00:30:35.752 +02:00] [DEBUG] [components/root_coord.go:60] ["RootCoord successfully started"]
[2025/05/12 00:30:35.752 +02:00] [INFO] [rootcoord/proxy_manager.go:104] ["start to watch etcd"]
[2025/05/12 00:30:35.752 +02:00] [INFO] [rootcoord/quota_center.go:132] ["Start QuotaCenter"] [collectInterval/s=3]
[2025/05/12 00:30:35.757 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:30:35.769 +02:00] [INFO] [sessionutil/session_util.go:690] ["watch services"] ["add kv"="key:\"by-dev/meta/session/indexnode-80\" create_revision:9512 mod_revision:9512 version:1 value:\"{\\\"ServerID\\\":80,\\\"ServerName\\\":\\\"indexnode\\\",\\\"Address\\\":\\\"192.168.0.100:40004\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704886694172 "]
[2025/05/12 00:30:35.769 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionAddEvent]
[2025/05/12 00:30:35.769 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=rootcoord] [key=by-dev/meta/session/rootcoord]
[2025/05/12 00:30:35.769 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=querynode] [key=by-dev/meta/session/querynode-78]
[2025/05/12 00:30:35.794 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:35.794 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:35.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:35.794 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:35.794 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:35.794 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:35.896 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:35.896 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:35.896 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:35.896 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:35.896 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:35.896 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:35.923 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:35.923 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:35.923 +02:00] [INFO] [datacoord/service.go:123] ["create IndexCoord client for DataCoord done"]
[2025/05/12 00:30:35.923 +02:00] [INFO] [datacoord/service.go:126] ["init IndexCoord client for DataCoord"]
[2025/05/12 00:30:35.923 +02:00] [INFO] [datacoord/service.go:131] ["init IndexCoord client for DataCoord done"]
[2025/05/12 00:30:35.923 +02:00] [INFO] [datacoord/service.go:159] ["network port"] [port=40005]
[2025/05/12 00:30:35.954 +02:00] [WARN] [rootcoord/root_coord.go:208] ["zero ts was met, this should be only occurred in starting state"] [minBgDdlTs=457966258987466753] [minNormalDdlTs=0]
[2025/05/12 00:30:35.997 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:35.997 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:35.997 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:35.997 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:35.997 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:35.997 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.032 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:36.032 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:36.034 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=82]
[2025/05/12 00:30:36.034 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:36.034 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:36.036 +02:00] [INFO] [datacoord/channel_store.go:165] ["channel store reload channel"] [nodeID=75] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:36.036 +02:00] [INFO] [sessionutil/session_util.go:561] ["SessionUtil GetSessions "] [prefix=datanode] [key=datanode-75] [address=192.168.0.100:40006]
[2025/05/12 00:30:36.036 +02:00] [INFO] [datacoord/server.go:439] ["DataCoord success to get DataNode sessions"] [sessions="{\"datanode-75\":{\"ServerID\":75,\"ServerName\":\"datanode\",\"Address\":\"192.168.0.100:40006\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:30:36.036 +02:00] [INFO] [datacoord/channel_manager.go:211] ["processing watch info"] ["watch state"=WatchSuccess] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:36.036 +02:00] [INFO] [datacoord/channel_manager.go:171] ["starting etcd states checker"]
[2025/05/12 00:30:36.036 +02:00] [INFO] [datacoord/channel_manager.go:176] ["starting background balance checker"]
[2025/05/12 00:30:36.036 +02:00] [INFO] [datacoord/channel_manager.go:179] ["cluster start up"] [nodes="[75]"] [oNodes="[75]"] ["old onlines"="[75]"] ["new onlines"="[]"] [offLines="[]"]
[2025/05/12 00:30:36.037 +02:00] [INFO] [datacoord/segment_reference_manager.go:41] ["create a new segment reference manager"]
[2025/05/12 00:30:36.037 +02:00] [INFO] [datacoord/segment_reference_manager.go:184] ["recovery reference lock on segments by online nodes"] ["online nodeIDs"="[]"]
[2025/05/12 00:30:36.037 +02:00] [INFO] [datacoord/segment_reference_manager.go:204] ["recovery reference lock on segments by online nodes successfully"] ["online nodeIDs"="[]"] ["offline nodeIDs"={}]
[2025/05/12 00:30:36.037 +02:00] [INFO] [datacoord/segment_reference_manager.go:75] ["create new segment reference manager successfully"]
[2025/05/12 00:30:36.037 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.037 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.040 +02:00] [WARN] [datacoord/segment_manager.go:236] ["failed to get ts from rootCoord for globalLastExpire"] []
[2025/05/12 00:30:36.040 +02:00] [INFO] [datacoord/garbage_collector.go:71] ["GC with option"] [enabled=true] [interval=1h0m0s] [missingTolerance=1h0m0s] [dropTolerance=3h0m0s]
[2025/05/12 00:30:36.040 +02:00] [INFO] [datacoord/service.go:264] ["DataCoord init done ..."]
[2025/05/12 00:30:36.041 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=datacoord] [ServerID=82]
[2025/05/12 00:30:36.042 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/datacoord] [value="{\"ServerID\":82,\"ServerName\":\"datacoord\",\"Address\":\"192.168.0.100:40005\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:36.042 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=datacoord] [serverID=82]
[2025/05/12 00:30:36.042 +02:00] [INFO] [datacoord/server.go:242] ["DataCoord Register Finished"]
[2025/05/12 00:30:36.042 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:36.042 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:36.043 +02:00] [INFO] [datacoord/server.go:351] ["DataCoord startup successfully"]
[2025/05/12 00:30:36.043 +02:00] [INFO] [datacoord/service.go:269] ["DataCoord start done ..."]
[2025/05/12 00:30:36.043 +02:00] [DEBUG] [components/data_coord.go:53] ["DataCoord successfully started"]
[2025/05/12 00:30:36.096 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=datacoord] [key=by-dev/meta/session/datacoord]
[2025/05/12 00:30:36.099 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.099 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.099 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.099 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.099 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.099 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.201 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.201 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.201 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.201 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.201 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.201 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.302 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.302 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.302 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.302 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.302 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.302 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.422 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.422 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.423 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.423 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.423 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.423 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.524 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.524 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.524 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.524 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.524 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.524 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.625 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.625 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.625 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.625 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.625 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.625 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.727 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:30:36.727 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:30:36.727 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.727 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.727 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.727 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.727 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.727 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.729 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.729 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.729 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.729 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.729 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.729 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.730 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:30:36.730 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.730 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:30:36.731 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=27] ["total memory"=12883] ["next GC"=26] ["new GOGC"=30] [gc-pause=2.1068ms] [gc-pause-end=1747002636731107600]
[2025/05/12 00:30:36.766 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:30:36.831 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.831 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.831 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.831 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.831 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.831 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:36.933 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:36.933 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:36.933 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:36.933 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:36.933 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:36.933 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.034 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.034 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.034 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.034 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.034 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.034 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.136 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.136 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.136 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.136 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.136 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.136 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.238 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.238 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.238 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.238 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.238 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.238 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.340 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.340 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.340 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.340 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.340 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.340 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.441 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.441 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.441 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.441 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.441 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.441 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.543 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.543 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.543 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.543 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.543 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.543 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.644 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.644 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.644 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.644 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.644 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.644 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.746 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.746 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.746 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.746 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.746 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.746 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.881 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.881 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.881 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.883 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.883 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.883 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:37.968 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=2000]
[2025/05/12 00:30:37.985 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:37.985 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:37.985 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:37.985 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:37.985 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:37.985 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.086 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.086 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.086 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.086 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.086 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.086 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.188 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.188 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.188 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.188 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.188 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.188 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.290 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.290 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.290 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.290 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.290 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.290 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.391 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.391 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.391 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.391 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.391 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.391 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.493 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.493 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.493 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.493 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.493 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.493 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.595 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.595 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.595 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.595 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.595 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.595 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.697 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.697 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:30:38.697 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.697 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:30:38.697 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.697 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.743 +02:00] [INFO] [querycoord/service.go:177] ["QueryCoord report RootCoord ready"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [datanode/service.go:283] ["RootCoord client is ready for DataNode"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [datanode/service.go:291] ["starting DataCoord client for DataNode"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [proxy/service.go:548] ["Proxy wait for RootCoord to be healthy done"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [proxy/service.go:551] ["set RootCoord client for Proxy done"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [proxy/service.go:555] ["create DataCoord client for Proxy"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [indexcoord/service.go:179] ["IndexCoord try to wait for DataCoord ready"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [querycoord/service.go:196] ["QueryCoord try to wait for DataCoord ready"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [proxy/service.go:561] ["create DataCoord client for Proxy done"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [proxy/service.go:564] ["init DataCoord client for Proxy"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [proxy/service.go:569] ["Proxy wait for DataCoord to be healthy"]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:30:38.743 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:30:38.745 +02:00] [INFO] [querycoord/service.go:205] ["QueryCoord report DataCoord ready"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [indexcoord/service.go:88] ["IndexCoord init done ..."]
[2025/05/12 00:30:38.745 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=indexcoord] [ServerID=79]
[2025/05/12 00:30:38.745 +02:00] [INFO] [datanode/service.go:309] ["DataCoord client is ready for DataNode"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [proxy/service.go:574] ["Proxy wait for DataCoord to be healthy done"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [proxy/service.go:577] ["set DataCoord client for Proxy done"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [querycoord/service.go:226] ["QueryCoord try to wait for IndexCoord ready"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [proxy/service.go:581] ["create IndexCoord client for Proxy"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.745 +02:00] [INFO] [datanode/data_node.go:227] ["DataNode server initializing"] [TimeTickChannelName=by-dev-datacoord-timetick-channel]
[2025/05/12 00:30:38.746 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess={}]
[2025/05/12 00:30:38.746 +02:00] [WARN] [client/client.go:111] ["IndexCoordClient msess key not existed"] [key=indexcoord] ["len of msess"=0]
[2025/05/12 00:30:38.746 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available indexcoord, check indexcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/client/client.go:126\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:227\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:102\ngithub.com/milvus-io/milvus/cmd/components.(*QueryCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/query_coord.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:38.746 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=indexcoord] [error="find no available indexcoord, check indexcoord state"]
[2025/05/12 00:30:38.746 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=indexcoord]
[2025/05/12 00:30:38.746 +02:00] [INFO] [proxy/service.go:587] ["create IndexCoord client for Proxy done"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [proxy/service.go:590] ["init IndexCoord client for Proxy"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [proxy/service.go:595] ["init IndexCoord client for Proxy done"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/indexcoord] [value="{\"ServerID\":79,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:38.746 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=indexcoord] [serverID=79]
[2025/05/12 00:30:38.746 +02:00] [INFO] [indexcoord/index_coord.go:142] ["IndexCoord Register Finished"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexcoord] [key=indexcoord] [address=192.168.0.100:40003]
[2025/05/12 00:30:38.747 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess="{\"indexcoord\":{\"ServerID\":79,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexcoord] [key=indexcoord] [address=192.168.0.100:40003]
[2025/05/12 00:30:38.747 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:38.747 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess="{\"indexcoord\":{\"ServerID\":79,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/service.go:199] ["IndexCoord registers service successfully"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/index_coord.go:1190] ["IndexCoord watchNodeLoop SessionAddEvent"] [serverID=80] [address=192.168.0.100:40004]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/garbage_collector.go:81] ["IndexCoord garbageCollector recycleUnusedIndexes start"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/flush_segment_watcher.go:145] ["IndexCoord flushedSegmentWatcher internalScheduler start..."]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/index_builder.go:141] ["index builder schedule loop start"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/garbage_collector.go:196] ["IndexCoord garbageCollector recycleUnusedSegIndexes start"]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/index_coord.go:1333] ["IndexCoord start watching flushed segments..."]
[2025/05/12 00:30:38.748 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=83]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/node_manager.go:95] ["IndexCoord addNode"] [nodeID=80] ["node address"=192.168.0.100:40004]
[2025/05/12 00:30:38.747 +02:00] [INFO] [indexcoord/garbage_collector.go:215] ["IndexCoord garbageCollector start recycleUnusedIndexFiles loop"]
[2025/05/12 00:30:38.748 +02:00] [DEBUG] [indexcoord/node_manager.go:59] ["IndexCoord NodeManager setClient"] [nodeID=80]
[2025/05/12 00:30:38.748 +02:00] [INFO] [indexcoord/node_manager.go:69] ["IndexNode NodeManager setClient success"] [nodeID=80] ["IndexNode num"=2]
[2025/05/12 00:30:38.748 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:38.748 +02:00] [INFO] [indexcoord/index_coord.go:290] ["IndexCoord start successfully"] [state=Healthy]
[2025/05/12 00:30:38.748 +02:00] [INFO] [indexcoord/service.go:204] ["indexCoord started"]
[2025/05/12 00:30:38.748 +02:00] [INFO] [indexcoord/service.go:92] ["IndexCoord start done ..."]
[2025/05/12 00:30:38.748 +02:00] [DEBUG] [components/index_coord.go:55] ["IndexCoord successfully started"]
[2025/05/12 00:30:38.748 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:38.748 +02:00] [INFO] [datanode/data_node.go:240] ["DataNode server init rateCollector done"] ["node ID"=0]
[2025/05/12 00:30:38.749 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.749 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:38.749 +02:00] [INFO] [proxy/service.go:601] ["Proxy wait for IndexCoord to be healthy done"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [proxy/service.go:604] ["set IndexCoord client for Proxy done"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [proxy/service.go:608] ["create QueryCoord client for Proxy"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [datanode/data_node.go:252] ["DataNode server init succeeded"] [MsgChannelSubName=by-dev-dataNode]
[2025/05/12 00:30:38.749 +02:00] [INFO] [proxy/service.go:614] ["create QueryCoord client for Proxy done"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [datanode/service.go:321] ["current DataNode state"] [state=Initializing]
[2025/05/12 00:30:38.749 +02:00] [INFO] [datanode/service.go:195] ["DataNode gRPC services successfully initialized"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [proxy/service.go:617] ["init QueryCoord client for Proxy"]
[2025/05/12 00:30:38.749 +02:00] [INFO] [proxy/service.go:622] ["init QueryCoord client for Proxy done"]
[2025/05/12 00:30:38.750 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:30:38.750 +02:00] [INFO] [datanode/data_node.go:480] ["start id allocator done"] [role=datanode]
[2025/05/12 00:30:38.751 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=30] ["total memory"=12899] ["next GC"=29] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002638750506600]
[2025/05/12 00:30:38.750 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:123\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:624\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:38.751 +02:00] [INFO] [datanode/data_node.go:462] ["DataNode Background GC Start"]
[2025/05/12 00:30:38.751 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=datanode] [ServerID=83]
[2025/05/12 00:30:38.751 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:30:38.751 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:123\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:624\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:38.752 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/datanode-83] [value="{\"ServerID\":83,\"ServerName\":\"datanode\",\"Address\":\"192.168.0.100:40006\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:38.752 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=datanode] [serverID=83]
[2025/05/12 00:30:38.752 +02:00] [INFO] [datanode/data_node.go:183] ["DataNode Register Finished"]
[2025/05/12 00:30:38.752 +02:00] [INFO] [sessionutil/session_util.go:690] ["watch services"] ["add kv"="key:\"by-dev/meta/session/datanode-83\" create_revision:9522 mod_revision:9522 version:1 value:\"{\\\"ServerID\\\":83,\\\"ServerName\\\":\\\"datanode\\\",\\\"Address\\\":\\\"192.168.0.100:40006\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704886694267 "]
[2025/05/12 00:30:38.752 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionAddEvent]
[2025/05/12 00:30:38.752 +02:00] [INFO] [datacoord/server.go:784] ["received datanode register"] [address=192.168.0.100:40006] [serverID=83]
[2025/05/12 00:30:38.752 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:38.752 +02:00] [INFO] [datacoord/channel_manager.go:341] ["register node with no reassignment"] ["registered node"=83]
[2025/05/12 00:30:38.752 +02:00] [INFO] [datanode/service.go:200] ["DataNode gRPC services successfully started"]
[2025/05/12 00:30:38.752 +02:00] [DEBUG] [components/data_node.go:56] ["Datanode successfully started"]
[2025/05/12 00:30:38.752 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:30:38.752 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:30:38.752 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:30:38.753 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=querycoord] [error="find no available querycoord, check querycoord state"]
[2025/05/12 00:30:38.753 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:30:38.753 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:30:38.753 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:30:38.753 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="find no available querycoord, check querycoord state"]
[2025/05/12 00:30:38.758 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=datanode] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=datanode] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=datanode] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=datanode] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=datanode] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=datanode] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=datanode] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:38.763 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=datanode] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:38.765 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=576adf7e41b9a0f0] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:38.773 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:30:38.799 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.799 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=datanode] [key=by-dev/meta/session/datanode-83]
[2025/05/12 00:30:38.799 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=indexcoord] [key=by-dev/meta/session/indexcoord]
[2025/05/12 00:30:38.799 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:38.799 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.799 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:38.799 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.799 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:38.900 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:38.900 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:38.900 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:38.900 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:38.900 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:38.900 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.003 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.003 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.003 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.003 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.003 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.003 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.105 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.105 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.105 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.105 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.105 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.105 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.207 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.207 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.207 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.207 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.207 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.207 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.309 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.309 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.309 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.309 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.309 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.309 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.428 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.428 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.428 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.428 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.428 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.428 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.529 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.529 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.529 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.529 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.529 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.529 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.631 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.631 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.631 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.631 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.631 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.631 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.733 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.733 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.733 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.733 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.733 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.733 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.758 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:30:39.758 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:30:39.758 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:30:39.758 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:30:39.758 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="find no available querycoord, check querycoord state"]
[2025/05/12 00:30:39.758 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:123\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:624\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:30:39.758 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.758 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.758 +02:00] [INFO] [querycoord/service.go:232] ["QueryCoord report IndexCoord is ready"]
[2025/05/12 00:30:39.758 +02:00] [INFO] [querycoordv2/server.go:176] ["QueryCoord start init"] [meta-root-path=by-dev/meta] [address=192.168.0.100:40001]
[2025/05/12 00:30:39.759 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:39.759 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:39.760 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=84]
[2025/05/12 00:30:39.760 +02:00] [INFO] [querycoordv2/server.go:209] [QueryCoord] [State=Initializing]
[2025/05/12 00:30:39.760 +02:00] [INFO] [querycoordv2/server.go:214] ["query coordinator try to connect etcd success"]
[2025/05/12 00:30:39.761 +02:00] [INFO] [tso/tso.go:121] ["sync and save timestamp"] [last=2025/05/12 00:17:34.242 +02:00] [save=2025/05/12 00:30:42.760 +02:00] [next=2025/05/12 00:30:39.760 +02:00]
[2025/05/12 00:30:39.761 +02:00] [INFO] [querycoordv2/server.go:302] ["init meta"]
[2025/05/12 00:30:39.762 +02:00] [INFO] [querycoordv2/server.go:312] ["recover meta..."]
[2025/05/12 00:30:39.762 +02:00] [INFO] [meta/collection_manager.go:89] ["recover collections and partitions from kv store"] [traceID=1747002639762991100]
[2025/05/12 00:30:39.763 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=32] ["total memory"=12914] ["next GC"=31] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002639763520400]
[2025/05/12 00:30:39.764 +02:00] [INFO] [meta/replica_manager.go:130] ["recover replica"] [collectionID=457665900034916433] [replicaID=457665907707084801] [nodes="[72]"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [meta/resource_manager.go:672] ["Recover resource group"] [rgName=__default_resource_group] [nodes="[18,25,3,34,72]"] [capacity=1000000]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:238] ["init session"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:242] ["init schedulers"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:255] ["init dist controller"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:265] ["init all available balancer"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:274] ["use config balancer"] [balancer=ScoreBasedBalancer]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:281] ["init checker controller"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:345] ["init observers"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoordv2/server.go:297] ["QueryCoord init success"]
[2025/05/12 00:30:39.764 +02:00] [INFO] [querycoord/service.go:105] ["QueryCoord init done ..."]
[2025/05/12 00:30:39.764 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=querycoord] [ServerID=84]
[2025/05/12 00:30:39.765 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/querycoord] [value="{\"ServerID\":84,\"ServerName\":\"querycoord\",\"Address\":\"192.168.0.100:40001\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:39.765 +02:00] [INFO] [sessionutil/session_util.go:690] ["watch services"] ["add kv"="key:\"by-dev/meta/session/querycoord\" create_revision:9526 mod_revision:9526 version:1 value:\"{\\\"ServerID\\\":84,\\\"ServerName\\\":\\\"querycoord\\\",\\\"Address\\\":\\\"192.168.0.100:40001\\\",\\\"Exclusive\\\":true,\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704886694290 "]
[2025/05/12 00:30:39.765 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=querycoord] [serverID=84]
[2025/05/12 00:30:39.765 +02:00] [INFO] [querycoordv2/server.go:144] ["QueryCoord Register Finished"]
[2025/05/12 00:30:39.765 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionAddEvent]
[2025/05/12 00:30:39.765 +02:00] [INFO] [datacoord/server.go:713] ["there is a new service online"] ["server role"=QueryCoord] ["server ID"=84]
[2025/05/12 00:30:39.765 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:39.766 +02:00] [INFO] [querycoordv2/server.go:388] ["start watcher..."]
[2025/05/12 00:30:39.766 +02:00] [INFO] [sessionutil/session_util.go:561] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-72] [address=192.168.0.100:40002]
[2025/05/12 00:30:39.766 +02:00] [INFO] [sessionutil/session_util.go:561] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-78] [address=192.168.0.100:40002]
[2025/05/12 00:30:39.766 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-72] [address=192.168.0.100:40002]
[2025/05/12 00:30:39.766 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-78] [address=192.168.0.100:40002]
[2025/05/12 00:30:39.766 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=576adf7e41b9a0f0] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:39.766 +02:00] [INFO] [task/scheduler.go:226] ["add executor for new QueryNode"] [nodeID=72]
[2025/05/12 00:30:39.766 +02:00] [INFO] [task/scheduler.go:226] ["add executor for new QueryNode"] [nodeID=78]
[2025/05/12 00:30:39.766 +02:00] [INFO] [dist/dist_handler.go:59] ["start dist handler"] [nodeID=72]
[2025/05/12 00:30:39.766 +02:00] [INFO] [meta/resource_manager.go:444] ["HandleNodeUp: node already assign to resource group"] [rgName=__default_resource_group] [node=72]
[2025/05/12 00:30:39.766 +02:00] [INFO] [querycoordv2/server.go:726] ["HandleNodeUp: assign node to resource group"] [nodeID=72] [resourceGroup=__default_resource_group]
[2025/05/12 00:30:39.766 +02:00] [INFO] [dist/dist_handler.go:59] ["start dist handler"] [nodeID=78]
[2025/05/12 00:30:39.767 +02:00] [INFO] [meta/resource_manager.go:468] ["HandleNodeUp: add node to default resource group"] [rgName=__default_resource_group] [node=78]
[2025/05/12 00:30:39.767 +02:00] [INFO] [querycoordv2/server.go:726] ["HandleNodeUp: assign node to resource group"] [nodeID=78] [resourceGroup=__default_resource_group]
[2025/05/12 00:30:39.767 +02:00] [INFO] [utils/meta.go:183] ["assign node to replica"] [collectionID=457665900034916433] [replicaID=457665907707084801] [nodeID=78]
[2025/05/12 00:30:39.768 +02:00] [INFO] [querycoordv2/server.go:410] ["start recovering dist and target"]
[2025/05/12 00:30:39.768 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:39.768 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:39.769 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:39.769 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=5e500a165fd70b5] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:30:39.770 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=5e500a165fd70b5] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:30:39.770 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=207a60d90411727b] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:30:39.770 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=207a60d90411727b] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:30:39.771 +02:00] [INFO] [rootcoord/root_coord.go:1476] ["received request to show partitions"] [traceID=5740a90e32c72190] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=true]
[2025/05/12 00:30:39.771 +02:00] [INFO] [rootcoord/root_coord.go:1507] ["done to show partitions"] [traceID=5740a90e32c72190] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=true] [partitions="[_default]"]
[2025/05/12 00:30:39.771 +02:00] [INFO] [datacoord/meta.go:147] ["meta update: add collection"] ["collection ID"=457665900034916433]
[2025/05/12 00:30:39.771 +02:00] [INFO] [datacoord/meta.go:153] ["meta update: add collection - complete"] ["collection ID"=457665900034916433]
[2025/05/12 00:30:39.771 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexcoord] [key=indexcoord] [address=192.168.0.100:40003]
[2025/05/12 00:30:39.771 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess="{\"indexcoord\":{\"ServerID\":79,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:30:39.772 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:30:39.772 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966248034304001] [posTime=2025/05/12 00:29:54.125 +02:00]
[2025/05/12 00:30:39.772 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:30:39.772 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:39.777 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=querynode] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=querynode] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=querynode] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=querynode] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=querynode] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=querynode] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=querynode] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:30:39.782 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=querynode] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:30:39.783 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:39.835 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.835 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=querycoord] [key=by-dev/meta/session/querycoord]
[2025/05/12 00:30:39.835 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.835 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.835 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.835 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.835 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.936 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:39.936 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:39.936 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:39.936 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:39.936 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:39.936 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:39.959 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=4000]
[2025/05/12 00:30:40.038 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.038 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.038 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.038 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.038 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.038 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.039 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=32] ["total memory"=12928] ["next GC"=32] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002640039778600]
[2025/05/12 00:30:40.140 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.140 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.140 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.140 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.140 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.140 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.242 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.242 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.242 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.242 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.242 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.242 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.343 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.343 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.343 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.343 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.343 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.343 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.445 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.445 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.445 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.445 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.445 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.445 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.562 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.562 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.562 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.562 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.562 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.562 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.663 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.663 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.663 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.663 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.663 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.663 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.781 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.781 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.781 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.781 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.781 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.796 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:40.800 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:40.800 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:40.800 +02:00] [INFO] [querycoordv2/server.go:423] ["start cluster..."]
[2025/05/12 00:30:40.801 +02:00] [INFO] [querycoordv2/server.go:426] ["start job scheduler..."]
[2025/05/12 00:30:40.801 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:40.801 +02:00] [INFO] [querycoordv2/server.go:429] ["start task scheduler..."]
[2025/05/12 00:30:40.801 +02:00] [INFO] [querycoordv2/server.go:432] ["start checker controller..."]
[2025/05/12 00:30:40.801 +02:00] [INFO] [querycoordv2/server.go:435] ["start observers..."]
[2025/05/12 00:30:40.801 +02:00] [INFO] [observers/target_observer.go:96] ["Start update next target loop"]
[2025/05/12 00:30:40.801 +02:00] [INFO] [observers/replica_observer.go:64] ["Start check replica loop"]
[2025/05/12 00:30:40.801 +02:00] [INFO] [observers/resource_observer.go:61] ["Start check resource group loop"]
[2025/05/12 00:30:40.801 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:40.801 +02:00] [INFO] [querycoordv2/server.go:382] ["QueryCoord started"]
[2025/05/12 00:30:40.801 +02:00] [INFO] [querycoord/service.go:110] ["QueryCoord start done ..."]
[2025/05/12 00:30:40.801 +02:00] [DEBUG] [components/query_coord.go:56] ["QueryCoord successfully started"]
[2025/05/12 00:30:40.882 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.882 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.882 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.882 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.882 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.882 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:40.984 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:40.984 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:40.984 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:40.984 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:40.984 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:40.984 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.085 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.085 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.085 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.085 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.085 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.085 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.187 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.187 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.187 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.187 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.187 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.187 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.288 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.288 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.288 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.288 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.288 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.288 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.406 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.406 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.406 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.406 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.406 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.406 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.530 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.531 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.531 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.531 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.531 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.531 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.633 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.633 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.633 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.633 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.633 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.633 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.736 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.736 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.736 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.736 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.736 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.736 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.764 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:30:41.764 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querycoord] [key=querycoord] [address=192.168.0.100:40001]
[2025/05/12 00:30:41.764 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querycoord] [key=querycoord] [address=192.168.0.100:40001]
[2025/05/12 00:30:41.779 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=576adf7e41b9a0f0] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:41.812 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:41.811 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:41.812 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=72]
[2025/05/12 00:30:41.812 +02:00] [INFO] [task/scheduler.go:262] ["task added"] [task="[id=1] [type=1] [collectionID=457665900034916433] [replicaID=457665907707084801] [priority=2] [actionsCount=1] [actions={[type=1][node=72]}] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:41.813 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:41.813 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:41.813 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:41.857 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.857 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.857 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.857 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.857 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.858 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:41.959 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=6000]
[2025/05/12 00:30:41.959 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:41.959 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:41.959 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:41.959 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:41.959 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:41.959 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.062 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.062 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.062 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.062 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.062 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.062 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.163 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.163 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.163 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.163 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.163 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.163 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.265 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.265 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.265 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.265 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.265 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.265 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.279 +02:00] [INFO] [task/scheduler.go:430] ["promoted tasks"] [promotedNum=1] [toRemoveNum=0]
[2025/05/12 00:30:42.279 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:42.280 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=1.0106ms]
[2025/05/12 00:30:42.280 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:42.280 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:42.368 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.368 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.368 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.368 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.368 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.368 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.469 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.469 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.469 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.469 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.469 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.469 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.571 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.571 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.571 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.571 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.571 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.571 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.673 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.673 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.673 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.673 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.673 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.673 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.775 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.775 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.775 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.775 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.775 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.776 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:42.776 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:42.776 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:42.776 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:30:42.776 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:42.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.776 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:42.807 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:42.807 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:42.807 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:42.807 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:42.823 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:42.823 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:42.823 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:42.824 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:42.877 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.877 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.877 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.877 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.877 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.877 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:42.979 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:42.979 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:42.979 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:42.979 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:42.979 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:42.979 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.103 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.103 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.103 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.103 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.103 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.103 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.205 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.205 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.205 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.205 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.205 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.205 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.273 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:43.273 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:43.273 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:43.273 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:43.320 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.320 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.320 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.320 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.320 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.320 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.422 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.422 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.422 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.422 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.422 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.422 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.523 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.523 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.523 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.523 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.523 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.523 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.624 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.624 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.624 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.624 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.624 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.624 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.727 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.727 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.727 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.727 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.727 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.727 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.772 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:43.772 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:43.772 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:43.772 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:43.787 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:43.788 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:43.788 +02:00] [WARN] [querycoordv2/server.go:691] ["unhealthy node exist, node up will be delayed"] [delayedNodeUpEvents=0] [unhealthyNodeNum=1] [unhealthyReason="[\"role querynode[nodeID: 72] is unhealthy, reason: inner error: stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing\"]"]
[2025/05/12 00:30:43.803 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:43.803 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:43.828 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:43.830 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:43.830 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:43.830 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:43.850 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.850 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.850 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.850 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.850 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.850 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:43.957 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=8000]
[2025/05/12 00:30:43.973 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:43.973 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:43.973 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:43.973 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:43.973 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:43.973 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.075 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.075 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.075 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.075 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.075 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.075 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.177 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.177 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.177 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.177 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.177 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.177 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.269 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:44.269 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:44.269 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:44.269 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:44.279 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.279 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.279 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.279 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.279 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.279 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.380 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.380 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.380 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.380 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.380 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.380 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.482 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.482 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.482 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.482 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.482 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.482 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.583 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.583 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.583 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.583 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.583 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.583 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.685 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.685 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.685 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.685 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.685 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.685 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.768 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:44.768 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:44.768 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:44.768 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:44.799 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.799 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.799 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.799 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.799 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.799 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:44.815 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:44.815 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:44.815 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:44.815 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:44.847 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:44.847 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:44.848 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:44.849 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:44.849 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=35] ["total memory"=12873] ["next GC"=33] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002644849920800]
[2025/05/12 00:30:44.901 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:44.901 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:44.901 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:44.901 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:44.901 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:44.901 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.002 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.002 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.002 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.003 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.003 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.003 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.126 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.126 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.126 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.126 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.126 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.126 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.229 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.229 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.229 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.229 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.229 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.229 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.267 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:45.267 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:45.267 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:45.267 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:45.331 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.331 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.331 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.331 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.331 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.331 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.452 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.452 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.452 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.452 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.452 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.452 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.578 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.578 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.578 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.578 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.578 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.578 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.679 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.679 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.679 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.679 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.679 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.679 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.765 +02:00] [INFO] [proxy/service.go:628] ["Proxy wait for QueryCoord to be healthy done"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [proxy/service.go:631] ["set QueryCoord client for Proxy done"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [proxy/service.go:633] ["update Proxy's state to Initializing"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [proxy/service.go:636] ["init Proxy"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [proxy/proxy.go:184] ["init session for Proxy"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:30:45.766 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:45.766 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:45.766 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:45.766 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:45.767 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=178c468e1c6a80f] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:45.767 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=85]
[2025/05/12 00:30:45.767 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_3380"] [error="open \\tmp\\milvus\\server_id_3380: The system cannot find the path specified."]
[2025/05/12 00:30:45.767 +02:00] [INFO] [proxy/proxy.go:189] ["init session for Proxy done"]
[2025/05/12 00:30:45.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.770 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:45.767 +02:00] [INFO] [proxy/proxy.go:192] ["init parameters for factory"] [role=proxy] [parametersError="json: unsupported type: func(log.Config)"]
[2025/05/12 00:30:45.770 +02:00] [INFO] [proxy/proxy.go:198] ["Proxy init rateCollector done"] [nodeID=85]
[2025/05/12 00:30:45.770 +02:00] [INFO] [proxy/proxy.go:200] ["create id allocator"] [role=proxy] [ProxyID=85]
[2025/05/12 00:30:45.770 +02:00] [INFO] [proxy/proxy.go:209] ["create id allocator done"] [role=proxy] [ProxyID=85]
[2025/05/12 00:30:45.770 +02:00] [DEBUG] [proxy/proxy.go:211] ["create timestamp allocator"] [role=proxy] [ProxyID=85]
[2025/05/12 00:30:45.770 +02:00] [INFO] [proxy/proxy.go:220] ["create timestamp allocator done"] [role=proxy] [ProxyID=85]
[2025/05/12 00:30:45.770 +02:00] [INFO] [proxy/proxy.go:222] ["create segment id assigner"] [role=proxy] [ProxyID=85]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:232] ["create segment id assigner done"] [role=proxy] [ProxyID=85]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:234] ["create channels manager"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:238] ["create channels manager done"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:240] ["create task scheduler"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:246] ["create task scheduler done"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:249] ["create channels time ticker"] [role=proxy] [syncTimeTickInterval=100ms]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:252] ["create channels time ticker done"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:254] ["create metrics cache manager"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:256] ["create metrics cache manager done"] [role=proxy]
[2025/05/12 00:30:45.771 +02:00] [INFO] [proxy/proxy.go:258] ["init meta cache"] [role=proxy]
[2025/05/12 00:30:45.773 +02:00] [INFO] [proxy/meta_cache.go:200] ["success to init meta cache"] [policy_infos="[\"{\\\"PType\\\":\\\"p\\\",\\\"V0\\\":\\\"public\\\",\\\"V1\\\":\\\"Collection-*.*\\\",\\\"V2\\\":\\\"PrivilegeIndexDetail\\\"}\",\"{\\\"PType\\\":\\\"p\\\",\\\"V0\\\":\\\"public\\\",\\\"V1\\\":\\\"Global-*.*\\\",\\\"V2\\\":\\\"PrivilegeDescribeCollection\\\"}\",\"{\\\"PType\\\":\\\"p\\\",\\\"V0\\\":\\\"public\\\",\\\"V1\\\":\\\"Global-*.*\\\",\\\"V2\\\":\\\"PrivilegeShowCollections\\\"}\"]"]
[2025/05/12 00:30:45.773 +02:00] [INFO] [proxy/proxy.go:263] ["init meta cache done"] [role=proxy]
[2025/05/12 00:30:45.773 +02:00] [INFO] [proxy/meta_cache.go:840] ["updating shard leader cache every"] [interval=3s]
[2025/05/12 00:30:45.773 +02:00] [INFO] [proxy/service.go:641] ["init Proxy done"]
[2025/05/12 00:30:45.773 +02:00] [INFO] [proxy/service.go:374] ["start Proxy server"]
[2025/05/12 00:30:45.773 +02:00] [INFO] [proxy/proxy.go:352] ["start task scheduler"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:357] ["start task scheduler done"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:359] ["start id allocator"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:364] ["start id allocator done"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:366] ["start segment id assigner"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:371] ["start segment id assigner done"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:373] ["start channels time ticker"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:378] ["start channels time ticker done"] [role=proxy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [proxy/proxy.go:391] ["update state code"] [role=proxy] [State=Healthy]
[2025/05/12 00:30:45.774 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=proxy] [ServerID=85]
[2025/05/12 00:30:45.775 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/proxy-85] [value="{\"ServerID\":85,\"ServerName\":\"proxy\",\"Address\":\"192.168.0.100:19529\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:30:45.775 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=proxy] [serverID=85]
[2025/05/12 00:30:45.775 +02:00] [INFO] [proxy/proxy.go:135] ["Proxy Register Finished"]
[2025/05/12 00:30:45.775 +02:00] [INFO] [rootcoord/proxy_manager.go:150] ["received proxy put event with session"] [session="Session:<ServerID: 85, ServerName: proxy, Version: 2.2.16>"]
[2025/05/12 00:30:45.775 +02:00] [INFO] [rootcoord/timeticksync.go:226] ["Add session for timeticksync"] [serverID=85]
[2025/05/12 00:30:45.775 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:30:45.775 +02:00] [INFO] [proxy/service.go:660] ["start Proxy http server"]
[2025/05/12 00:30:45.776 +02:00] [INFO] [proxy/service.go:379] ["start Proxy server done"]
[2025/05/12 00:30:45.776 +02:00] [INFO] [components/proxy.go:55] ["Proxy successfully started"]
[2025/05/12 00:30:45.780 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:30:45.780 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:79 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:30:45.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:45.780 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:30:45.780 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:30:45.780 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:80 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:30:45.781 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=576adf7e41b9a0f0] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:45.783 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=datanode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059\n  | github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630\n  | github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/interceptor.ClusterValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/cluster_interceptor.go:61\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/logutil.UnaryTraceLoggerInterceptor\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/logutil/grpc_interceptor.go:22\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing.UnaryServerInterceptor.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/tracing/opentracing/server_interceptors.go:38\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:34\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6632\n  | google.golang.org/grpc.(*Server).processUnaryRPC\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1295\n  | google.golang.org/grpc.(*Server).handleStream\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1636\n  | google.golang.org/grpc.(*Server).serveStreams.func1.2\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:932\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:45.787 +02:00] [WARN] [datacoord/metrics_info.go:169] ["invalid metrics of DataNode was found"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059\n  | github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630\n  | github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/interceptor.ClusterValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/cluster_interceptor.go:61\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/logutil.UnaryTraceLoggerInterceptor\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/logutil/grpc_interceptor.go:22\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing.UnaryServerInterceptor.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/tracing/opentracing/server_interceptors.go:38\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:34\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6632\n  | google.golang.org/grpc.(*Server).processUnaryRPC\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1295\n  | google.golang.org/grpc.(*Server).handleStream\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1636\n  | google.golang.org/grpc.(*Server).serveStreams.func1.2\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:932\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:45.812 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:45.812 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:45.858 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:45.858 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:45.859 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:45.859 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:45.874 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=proxy] [key=by-dev/meta/session/proxy-85]
[2025/05/12 00:30:45.953 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77,85]"] ["idle time"=10000]
[2025/05/12 00:30:45.984 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=10000]
[2025/05/12 00:30:46.048 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:46.281 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:46.281 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:46.281 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:46.281 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:46.283 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=35] ["total memory"=12945] ["next GC"=35] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747002646283493600]
[2025/05/12 00:30:46.779 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=178c468e1c6a80f] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:46.779 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:46.779 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:46.779 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:46.779 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:46.779 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:46.779 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:46.779 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:341 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:190 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:189 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/handlers.go:278 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).tryGetNodesMetrics.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:341\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:190\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:189\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).tryGetNodesMetrics.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/handlers.go:278\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:341 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:190 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:189 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/handlers.go:278 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).tryGetNodesMetrics.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:46.779 +02:00] [WARN] [querycoordv2/handlers.go:280] ["failed to get metric from QueryNode"] [nodeID=72]
[2025/05/12 00:30:46.811 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:46.811 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:46.811 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:46.811 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:46.822 +02:00] [INFO] [proxy/impl.go:5577] ["connect received"] [traceID=5d00be800eeba659] [sdk_type=Python] [sdk_version=2.5.8] [local_time="2025-05-12 00:30:46.818563"] [user=] [host=Sai] [db=default]
[2025/05/12 00:30:46.824 +02:00] [INFO] [rootcoord/root_coord.go:908] ["received request to list databases"] [traceID=5d00be800eeba659] [msgID=0]
[2025/05/12 00:30:46.824 +02:00] [INFO] [rootcoord/root_coord.go:936] ["done to list databases"] [traceID=5d00be800eeba659] [msgID=0] ["num of databases"=1]
[2025/05/12 00:30:46.825 +02:00] [INFO] [proxy/client_info.go:45] ["client register"] [traceID=5d00be800eeba659] [sdk_type=Python] [sdk_version=2.5.8] [local_time="2025-05-12 00:30:46.818563"] [user=] [host=Sai] [identifier=457966261845622786] [last_active_time=2025/05/12 00:30:46.825 +02:00] [db=default]
[2025/05/12 00:30:46.874 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:46.875 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:46.875 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:46.875 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:47.060 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:47.278 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:47.278 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:47.278 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:47.278 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:47.778 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:47.778 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:47.778 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:47.778 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:47.808 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:47.808 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:47.886 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:47.887 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:47.887 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:47.887 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:47.963 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=12000]
[2025/05/12 00:30:47.980 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=12000]
[2025/05/12 00:30:48.275 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:48.275 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:48.275 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:48.275 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:48.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:48.775 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:48.775 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:48.775 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:48.775 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:48.775 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:48.805 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:48.805 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:48.805 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:48.805 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:48.899 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:48.899 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:48.899 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:48.899 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:49.069 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:49.272 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:49.272 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:49.272 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:49.272 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:49.772 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:49.772 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:49.772 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:49.772 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:49.787 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:49.787 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:49.803 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:49.803 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:49.912 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:49.913 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:49.913 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:49.914 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:49.959 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=14000]
[2025/05/12 00:30:49.975 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=14000]
[2025/05/12 00:30:50.272 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:50.272 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:50.272 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:50.272 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:50.770 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:50.770 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:50.770 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:50.770 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:50.785 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:30:50.786 +02:00] [WARN] [retry/retry.go:41] ["retry func failed"] ["retry time"=4] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:30:50.801 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:50.801 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:50.801 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:50.801 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:50.927 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:50.928 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:50.928 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:50.929 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:51.084 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=37] ["total memory"=9927] ["next GC"=35] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747002651084762400]
[2025/05/12 00:30:51.269 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:51.269 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:51.269 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:51.269 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:51.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:51.768 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:51.768 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:51.768 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:51.768 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:51.768 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:51.816 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:51.816 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:51.940 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:51.940 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:51.940 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:51.940 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:51.956 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=16000]
[2025/05/12 00:30:51.987 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=16000]
[2025/05/12 00:30:52.266 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:52.266 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:52.266 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:52.266 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:52.791 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:52.791 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:52.793 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:52.793 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:52.793 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:52.793 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:52.816 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:52.816 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:52.816 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:52.816 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:52.952 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:52.953 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:52.953 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:52.953 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:53.074 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:53.074 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=datanode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:53.075 +02:00] [INFO] [datacoord/session_manager.go:251] ["Get State failed"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:53.275 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:53.275 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:53.275 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:53.275 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:53.775 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:53.775 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:53.775 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:53.775 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:53.805 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:53.805 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:53.962 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=18000]
[2025/05/12 00:30:53.962 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:53.963 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:53.963 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:53.964 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:53.978 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=18000]
[2025/05/12 00:30:54.275 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:54.275 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:54.275 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:54.275 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:54.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:54.775 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:54.775 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:54.775 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:54.775 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:54.775 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:54.805 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:54.805 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:54.805 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:54.805 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:54.976 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:54.977 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:54.977 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:54.978 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:55.273 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:55.273 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:55.273 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:55.273 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:55.771 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:55.771 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:55.771 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:55.771 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:55.786 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:55.786 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:55.786 +02:00] [WARN] [querycoordv2/server.go:691] ["unhealthy node exist, node up will be delayed"] [delayedNodeUpEvents=0] [unhealthyNodeNum=1] [unhealthyReason="[\"role querynode[nodeID: 72] is unhealthy, reason: inner error: stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing\"]"]
[2025/05/12 00:30:55.797 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=17ade36098edf34e] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.798 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=17ade36098edf34e] [role=proxy] [MsgID=457966264190238722] [BeginTS=457966264190238722] [EndTS=457966264190238722] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.799 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=17ade36098edf34e] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966264190238722] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:30:55.799 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=17ade36098edf34e] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966264190238722] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:30:55.800 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=17ade36098edf34e] [role=proxy] [MsgID=457966264190238722] [BeginTS=457966264190238722] [EndTS=457966264190238722] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.801 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=17a48a67b32f7a7d] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.801 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=17a48a67b32f7a7d] [role=proxy] [MsgID=457966264190238724] [BeginTS=457966264190238724] [EndTS=457966264190238724] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.801 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=17a48a67b32f7a7d] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966264190238724] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:30:55.801 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=17a48a67b32f7a7d] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966264190238724] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:30:55.801 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=17a48a67b32f7a7d] [role=proxy] [MsgID=457966264190238724] [BeginTS=457966264190238724] [EndTS=457966264190238724] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.802 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:55.802 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:55.802 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=6738551ef217b88b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:30:55.802 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=6738551ef217b88b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:30:55.803 +02:00] [INFO] [proxy/impl.go:612] ["LoadCollection received"] [traceID=2b166ba5c9f94993] [role=proxy] [db=default] [collection=rag_collection] [refreshMode=false]
[2025/05/12 00:30:55.803 +02:00] [INFO] [proxy/impl.go:635] ["LoadCollection enqueued"] [traceID=2b166ba5c9f94993] [role=proxy] [MsgID=457966264202559490] [BeginTS=457966264202559490] [EndTS=457966264202559490] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.803 +02:00] [INFO] [proxy/task.go:1377] ["loadCollectionTask PreExecute"] [role=proxy] [msgID=457966264202559490]
[2025/05/12 00:30:55.804 +02:00] [INFO] [proxy/task.go:1396] ["loadCollectionTask Execute"] [role=proxy] [msgID=457966264202559490]
[2025/05/12 00:30:55.804 +02:00] [INFO] [indexcoord/index_coord.go:890] ["IndexCoord receive DescribeIndex"] [collectionID=457665900034916433] [indexName=] [timestamp=0]
[2025/05/12 00:30:55.805 +02:00] [INFO] [datacoord/services.go:920] ["received get flushed segments request"] [collectionID=457665900034916433] [partitionID=-1]
[2025/05/12 00:30:55.806 +02:00] [DEBUG] [indexcoord/meta_table.go:736] ["IndexCoord get index states success"] [indexID=457665900035116801] [indexRows=0]
[2025/05/12 00:30:55.807 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:55.807 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=27e0e4e31382432] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:30:55.807 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=27e0e4e31382432] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:30:55.808 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:30:55.808 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966248034304001] [posTime=2025/05/12 00:29:54.125 +02:00]
[2025/05/12 00:30:55.808 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:30:55.808 +02:00] [INFO] [indexcoord/meta_table.go:659] ["IndexCoord get index states success"] [indexID=457665900035116801] [total=0] [None=0] [Unissued=0] [InProgress=0] [Finished=0] [Failed=0]
[2025/05/12 00:30:55.808 +02:00] [INFO] [indexcoord/index_coord.go:635] ["IndexCoord completeIndexInfo success"] [collID=457665900034916433] [totalRows=0] [indexRows=0] [state=Finished] [failReason=]
[2025/05/12 00:30:55.808 +02:00] [INFO] [indexcoord/index_coord.go:955] ["IndexCoord DescribeIndex success"] [collectionID=457665900034916433] [indexID=457665900035116801] ["total rows"=0] ["indexed rows"=0] ["pending index rows"=0] ["index state"=Finished] ["check segment num"=0]
[2025/05/12 00:30:55.808 +02:00] [INFO] [proxy/task.go:1447] ["send LoadCollectionRequest to query coordinator"] [role=proxy] [msgID=457966264202559490] [collectionID=457665900034916433] [schema="name:\"rag_collection\" description:\"RAG document chunks\" fields:<fieldID:100 name:\"id\" is_primary_key:true data_type:Int64 autoID:true > fields:<fieldID:101 name:\"emb\" data_type:FloatVector type_params:<key:\"dim\" value:\"512\" > > fields:<fieldID:102 name:\"source_path\" data_type:VarChar type_params:<key:\"max_length\" value:\"1024\" > > fields:<fieldID:103 name:\"chunk_id\" data_type:Int64 > fields:<fieldID:104 name:\"chunk_text\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > fields:<fieldID:105 name:\"chunk_preview\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > "]
[2025/05/12 00:30:55.809 +02:00] [INFO] [querycoordv2/services.go:233] ["load collection request received"] [msgID=457966264202559490] [collectionID=457665900034916433] [replicaNumber=1] [resourceGroups="[]"] [refreshMode=false] [schema="name:\"rag_collection\" description:\"RAG document chunks\" fields:<fieldID:100 name:\"id\" is_primary_key:true data_type:Int64 autoID:true > fields:<fieldID:101 name:\"emb\" data_type:FloatVector type_params:<key:\"dim\" value:\"512\" > > fields:<fieldID:102 name:\"source_path\" data_type:VarChar type_params:<key:\"max_length\" value:\"1024\" > > fields:<fieldID:103 name:\"chunk_id\" data_type:Int64 > fields:<fieldID:104 name:\"chunk_text\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > fields:<fieldID:105 name:\"chunk_preview\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > "] [fieldIndexes="[457665900035116801]"]
[2025/05/12 00:30:55.809 +02:00] [INFO] [job/scheduler.go:157] ["start to pre-execute job"] [msgID=457966264202559490] [collectionID=457665900034916433]
[2025/05/12 00:30:55.809 +02:00] [WARN] [job/scheduler.go:160] ["failed to pre-execute job"] [msgID=457966264202559490] [collectionID=457665900034916433] [error=CollectionLoaded]
[2025/05/12 00:30:55.809 +02:00] [INFO] [job/scheduler.go:151] ["start to post-execute job"] [msgID=457966264202559490] [collectionID=457665900034916433]
[2025/05/12 00:30:55.809 +02:00] [INFO] [job/scheduler.go:153] ["job finished"] [msgID=457966264202559490] [collectionID=457665900034916433]
[2025/05/12 00:30:55.809 +02:00] [INFO] [proxy/task.go:1458] ["loadCollectionTask PostExecute"] [role=proxy] [msgID=457966264202559490]
[2025/05/12 00:30:55.810 +02:00] [INFO] [proxy/impl.go:662] ["LoadCollection done"] [traceID=2b166ba5c9f94993] [role=proxy] [MsgID=457966264202559490] [BeginTS=457966264202559490] [EndTS=457966264202559490] [db=default] [collection=rag_collection]
[2025/05/12 00:30:55.811 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=42fd8067bd05c3bc] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:55.813 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:55.813 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=42fd8067bd05c3bc] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:55.959 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=20000]
[2025/05/12 00:30:55.975 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=20000]
[2025/05/12 00:30:55.990 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:55.992 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:55.992 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:55.992 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:56.015 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=4c5b9e34b87d9950] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.016 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:56.016 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=4c5b9e34b87d9950] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.052 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:56.218 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=121102971d63b86f] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.218 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:56.218 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=121102971d63b86f] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.268 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:56.268 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:56.268 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:56.268 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:56.420 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=78860cdf24f61186] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.420 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:56.420 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=78860cdf24f61186] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.623 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=1676f4d023bfa9c] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.623 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:56.623 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=1676f4d023bfa9c] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.767 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:56.767 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:56.767 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:56.767 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:56.783 +02:00] [INFO] [sessionutil/session_util.go:706] ["watch services"] ["delete kv"="key:\"by-dev/meta/session/datanode-75\" create_revision:9225 mod_revision:9225 version:1 value:\"{\\\"ServerID\\\":75,\\\"ServerName\\\":\\\"datanode\\\",\\\"Address\\\":\\\"192.168.0.100:40006\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704685295987 "]
[2025/05/12 00:30:56.783 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionDelEvent]
[2025/05/12 00:30:56.783 +02:00] [INFO] [datacoord/server.go:793] ["received datanode unregister"] [address=192.168.0.100:40006] [serverID=75]
[2025/05/12 00:30:56.783 +02:00] [INFO] [sessionutil/session_util.go:706] ["watch services"] ["delete kv"="key:\"by-dev/meta/session/indexnode-71\" create_revision:9214 mod_revision:9214 version:1 value:\"{\\\"ServerID\\\":71,\\\"ServerName\\\":\\\"indexnode\\\",\\\"Address\\\":\\\"192.168.0.100:40004\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704685295893 "]
[2025/05/12 00:30:56.783 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionDelEvent]
[2025/05/12 00:30:56.783 +02:00] [INFO] [indexcoord/index_coord.go:1205] ["IndexCoord watchNodeLoop SessionDelEvent"] [serverID=71]
[2025/05/12 00:30:56.783 +02:00] [INFO] [indexcoord/node_manager.go:76] [IndexCoord] ["Remove node with ID"=71]
[2025/05/12 00:30:56.783 +02:00] [INFO] [sessionutil/session_util.go:706] ["watch services"] ["delete kv"="key:\"by-dev/meta/session/querynode-72\" create_revision:9215 mod_revision:9508 version:2 value:\"{\\\"ServerID\\\":72,\\\"ServerName\\\":\\\"querynode\\\",\\\"Address\\\":\\\"192.168.0.100:40002\\\",\\\"Stopping\\\":true,\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704685295895 "]
[2025/05/12 00:30:56.783 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionDelEvent]
[2025/05/12 00:30:56.783 +02:00] [INFO] [querycoordv2/server.go:659] ["a node down, remove it"] [nodeID=72]
[2025/05/12 00:30:56.783 +02:00] [INFO] [task/merger.go:84] ["Merger stopped"]
[2025/05/12 00:30:56.783 +02:00] [INFO] [task/scheduler.go:237] ["remove executor of offline QueryNode"] [nodeID=72]
[2025/05/12 00:30:56.783 +02:00] [INFO] [msgstream/msgstream_util.go:29] ["unsubscribe channel"] [subname=by-dev-dataNode-75-by-dev-rootcoord-dml_2_457665900034916433v0] [channels="[by-dev-rootcoord-dml_2]"]
[2025/05/12 00:30:56.784 +02:00] [INFO] [server/rocksmq_impl.go:480] ["Rocksmq create consumer group successfully "] [topic=by-dev-rootcoord-dml_2] [group=by-dev-dataNode-75-by-dev-rootcoord-dml_2_457665900034916433v0] [elapsed=0]
[2025/05/12 00:30:56.784 +02:00] [INFO] [server/rocksmq_impl.go:506] ["Rocksmq register consumer successfully "] [topic=by-dev-rootcoord-dml_2] [elapsed=0]
[2025/05/12 00:30:56.784 +02:00] [DEBUG] [rmq/rmq_client.go:91] ["tr/create consumer"] [msg="create consumer done"] [duration=0s]
[2025/05/12 00:30:56.785 +02:00] [INFO] [msgstream/mq_msgstream.go:170] ["Successfully create consumer"] [channel=by-dev-rootcoord-dml_2] [subname=by-dev-dataNode-75-by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:56.785 +02:00] [INFO] [msgstream/mq_msgstream.go:182] ["start to close mq msg stream"] ["producer num"=0] ["consumer num"=1]
[2025/05/12 00:30:56.785 +02:00] [WARN] [datacoord/channel_manager.go:375] ["deregister node"] ["unregistered node"=75] [updates="[\"{type=Delete,nodeID=75,channels=\\\"[by-dev-rootcoord-dml_2_457665900034916433v0]\\\"}\",\"{type=Add,nodeID=83,channels=\\\"[by-dev-rootcoord-dml_2_457665900034916433v0]\\\"}\"]"]
[2025/05/12 00:30:56.785 +02:00] [INFO] [datacoord/channel_manager.go:393] ["remove timers for channel of the deregistered node"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [nodeID=75]
[2025/05/12 00:30:56.786 +02:00] [INFO] [datacoord/handler.go:63] [GetDataVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:30:56.786 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966248034304001] [posTime=2025/05/12 00:29:54.125 +02:00]
[2025/05/12 00:30:56.786 +02:00] [INFO] [datacoord/channel_checker.go:110] ["timer started"] ["watch state"=ToWatch] [nodeID=83] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0] ["check interval"=2m0s]
[2025/05/12 00:30:56.787 +02:00] [INFO] [datacoord/channel_manager.go:722] ["tickle update, timer delay"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [progress=0]
[2025/05/12 00:30:56.788 +02:00] [INFO] [datanode/data_node.go:357] ["DataNode is handling watchInfo PUT event"] [key=by-dev/meta/channelwatch/83/by-dev-rootcoord-dml_2_457665900034916433v0] ["watch state"=ToWatch]
[2025/05/12 00:30:56.790 +02:00] [INFO] [datanode/data_sync_service.go:189] ["begin to init data sync service"] [collection=457665900034916433] [Chan=by-dev-rootcoord-dml_2_457665900034916433v0] [unflushed="[457665900035116791]"] [flushed="[]"]
[2025/05/12 00:30:56.792 +02:00] [INFO] [datanode/data_sync_service.go:222] ["recover growing segments form checkpoints"] [vChannelName=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentID=457665900035116791] [numRows=40]
[2025/05/12 00:30:56.792 +02:00] [INFO] [datanode/channel_meta.go:212] ["adding segment"] [type=Normal] [segmentID=457665900035116791] [collectionID=457665900034916433] [partitionID=457665900034916434] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [startPosition=<nil>] [endPosition="channel_name:\"by-dev-rootcoord-dml_2_457665900034916433v0\" msgID:\"\\2722\\350\\004\\266\\364Y\\006\" msgGroup:\"by-dev-dataNode-38-by-dev-rootcoord-dml_2_457665900034916433v0\" timestamp:457666085413715971 "] [recoverTs=457966248034304001] [importing=false]
[2025/05/12 00:30:56.792 +02:00] [INFO] [datanode/channel_meta.go:382] ["begin to init pk bloom filter"] [segmentID=457665900035116791] [statsBinLogsLen=1]
[2025/05/12 00:30:56.793 +02:00] [INFO] [datanode/channel_meta.go:434] ["Successfully load pk stats"] [segmentID=457665900035116791] [time=1.6039ms] [size=442]
[2025/05/12 00:30:56.793 +02:00] [INFO] [server/rocksmq_impl.go:480] ["Rocksmq create consumer group successfully "] [topic=by-dev-rootcoord-dml_2] [group=by-dev-dataNode-83-by-dev-rootcoord-dml_2_457665900034916433v0] [elapsed=0]
[2025/05/12 00:30:56.793 +02:00] [INFO] [server/rocksmq_impl.go:506] ["Rocksmq register consumer successfully "] [topic=by-dev-rootcoord-dml_2] [elapsed=0]
[2025/05/12 00:30:56.793 +02:00] [DEBUG] [rmq/rmq_client.go:91] ["tr/create consumer"] [msg="create consumer done"] [duration=0s]
[2025/05/12 00:30:56.794 +02:00] [INFO] [datanode/flow_graph_dmstream_input_node.go:56] ["datanode begin to seek"] ["seek msgID"="|\u001cL\ufffd\ufffd\u0005[\u0006"] [pchannel=by-dev-rootcoord-dml_2] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0] [position=2025/05/12 00:29:54.125 +02:00] [tsLag=1m2.6694255s] ["collection ID"=457665900034916433]
[2025/05/12 00:30:56.794 +02:00] [INFO] [msgstream/mq_msgstream.go:882] ["MsgStream begin to seek start msg: "] [channel=by-dev-rootcoord-dml_2] [MessageID="fBxMtLIFWwY="]
[2025/05/12 00:30:56.794 +02:00] [INFO] [server/rocksmq_impl.go:853] ["successfully seek"] [topic=by-dev-rootcoord-dml_2] [group=by-dev-dataNode-83-by-dev-rootcoord-dml_2_457665900034916433v0] [msgId=457966052195441788]
[2025/05/12 00:30:56.794 +02:00] [INFO] [msgstream/mq_msgstream.go:892] ["MsgStream seek finished"] [channel=by-dev-rootcoord-dml_2]
[2025/05/12 00:30:56.795 +02:00] [INFO] [datanode/flow_graph_dmstream_input_node.go:69] ["datanode seek successfully"] ["seek msgID"="|\u001cL\ufffd\ufffd\u0005[\u0006"] [pchannel=by-dev-rootcoord-dml_2] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0] [position=2025/05/12 00:29:54.125 +02:00] [tsLag=1m2.6705086s] ["collection ID"=457665900034916433] [elapse=1.0831ms]
[2025/05/12 00:30:56.795 +02:00] [INFO] [datanode/flow_graph_dmstream_input_node.go:81] ["datanode AsConsumer"] ["physical channel"=by-dev-rootcoord-dml_2] [subName=by-dev-dataNode-83-by-dev-rootcoord-dml_2_457665900034916433v0] ["collection ID"=457665900034916433]
[2025/05/12 00:30:56.795 +02:00] [INFO] [datanode/flow_graph_dd_node.go:401] ["ddNode convert vChannel to pChannel"] [vChannelName=by-dev-rootcoord-dml_2_457665900034916433v0] [pChannelName=by-dev-rootcoord-dml_2]
[2025/05/12 00:30:56.795 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-delta_2]
[2025/05/12 00:30:56.795 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:30:56.795 +02:00] [INFO] [datanode/flow_graph_dd_node.go:413] ["datanode AsProducer"] [DeltaChannelName=by-dev-rootcoord-delta_2]
[2025/05/12 00:30:56.795 +02:00] [INFO] [datanode/flow_graph_dd_node.go:438] ["ddNode add sealed and growing segments"] [collectionID=457665900034916433] ["No. sealed segments"=0] ["No. growing segments"=1]
[2025/05/12 00:30:56.796 +02:00] [INFO] [datanode/data_sync_service.go:150] ["dataSyncService starting flow graph"] [collectionID=457665900034916433] [vChanName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:56.796 +02:00] [INFO] [datanode/data_node.go:411] ["handle put event: new data sync service success"] [vChanName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:56.797 +02:00] [INFO] [datanode/data_node.go:443] ["handle put event success"] [key=channelwatch/83/by-dev-rootcoord-dml_2_457665900034916433v0] [state=WatchSuccess] [vChanName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:56.797 +02:00] [INFO] [datanode/data_node.go:346] ["DataNode received a PUT event with an end State"] [state=WatchSuccess]
[2025/05/12 00:30:56.797 +02:00] [INFO] [datacoord/channel_checker.go:164] ["stop timer for channel"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [timerCount=0]
[2025/05/12 00:30:56.797 +02:00] [INFO] [datacoord/channel_manager.go:627] ["datanode successfully watched channel"] [nodeID=83] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:56.797 +02:00] [INFO] [datacoord/channel_checker.go:131] ["stop timer before timeout"] ["watch state"=ToWatch] [nodeID=83] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0] ["timeout interval"=2m0s] [runningTimerCount=0]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:30:56.800 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966248050556929] [time=2025/05/12 00:29:54.187 +02:00]
[2025/05/12 00:30:56.800 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966248050556929] [cpTime=2025/05/12 00:29:54.187 +02:00]
[2025/05/12 00:30:56.801 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:56.801 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:56.801 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:56.801 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:56.801 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966248116355073] [time=2025/05/12 00:29:54.438 +02:00]
[2025/05/12 00:30:56.802 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966248116355073] [cpTime=2025/05/12 00:29:54.438 +02:00]
[2025/05/12 00:30:56.826 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=1100df5cab5f9cea] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:56.826 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:56.826 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=1100df5cab5f9cea] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.001 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"]
[2025/05/12 00:30:57.002 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:57.002 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=72), actual=%!s(int64=78): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:30:57.002 +02:00] [INFO] [dist/dist_handler.go:68] ["close dist handelr"] [nodeID=72]
[2025/05/12 00:30:57.003 +02:00] [INFO] [querycoordv2/server.go:757] ["remove node from replica"] [nodeID=72] [collectionID=457665900034916433] [replicaID=457665907707084801]
[2025/05/12 00:30:57.003 +02:00] [INFO] [task/scheduler.go:750] ["task removed"] [taskID=1] [taskStatus=2] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:57.004 +02:00] [INFO] [meta/resource_manager.go:505] ["HandleNodeDown: remove node from resource group"] [rgName=__default_resource_group] [node=72]
[2025/05/12 00:30:57.004 +02:00] [INFO] [querycoordv2/server.go:773] ["HandleNodeDown: remove node from resource group"] [nodeID=72] [resourceGroup=__default_resource_group]
[2025/05/12 00:30:57.029 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=32e07c579684f316] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.029 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:57.029 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=32e07c579684f316] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.063 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:30:57.232 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=4af360e52aa02eeb] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.232 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:57.232 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=4af360e52aa02eeb] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.434 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=61804976b1f0dcf5] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.434 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:57.434 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=61804976b1f0dcf5] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.636 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=5ead52f77db54f13] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.638 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:57.638 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=5ead52f77db54f13] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.778 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:30:57.778 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:30:57.809 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:57.809 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=78]
[2025/05/12 00:30:57.809 +02:00] [INFO] [task/scheduler.go:262] ["task added"] [task="[id=2] [type=1] [collectionID=457665900034916433] [replicaID=457665907707084801] [priority=2] [actionsCount=1] [actions={[type=1][node=78]}] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:57.840 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=3da8d24dd48272de] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.840 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:57.841 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=3da8d24dd48272de] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:57.965 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=22000]
[2025/05/12 00:30:57.981 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=22000]
[2025/05/12 00:30:58.042 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=53f2ebbc5569c8d1] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.043 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:58.043 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=53f2ebbc5569c8d1] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.244 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=3d60a5fbe25dbcf] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.244 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:58.245 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=3d60a5fbe25dbcf] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.277 +02:00] [INFO] [task/scheduler.go:430] ["promoted tasks"] [promotedNum=1] [toRemoveNum=0]
[2025/05/12 00:30:58.277 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:58.277 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=1] ["time cost"=0s]
[2025/05/12 00:30:58.277 +02:00] [INFO] [task/executor.go:105] ["execute the action of task"] [taskID=2] [step=0] [source=1]
[2025/05/12 00:30:58.277 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=1] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:30:58.277 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:58.279 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=678680d574258bf8] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:30:58.279 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=678680d574258bf8] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:30:58.281 +02:00] [INFO] [rootcoord/root_coord.go:1476] ["received request to show partitions"] [traceID=12a290744f11030b] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=false]
[2025/05/12 00:30:58.281 +02:00] [INFO] [rootcoord/root_coord.go:1507] ["done to show partitions"] [traceID=12a290744f11030b] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=false] [partitions="[_default]"]
[2025/05/12 00:30:58.281 +02:00] [INFO] [indexcoord/index_coord.go:890] ["IndexCoord receive DescribeIndex"] [collectionID=457665900034916433] [indexName=] [timestamp=0]
[2025/05/12 00:30:58.281 +02:00] [INFO] [datacoord/services.go:920] ["received get flushed segments request"] [collectionID=457665900034916433] [partitionID=-1]
[2025/05/12 00:30:58.282 +02:00] [DEBUG] [indexcoord/meta_table.go:736] ["IndexCoord get index states success"] [indexID=457665900035116801] [indexRows=0]
[2025/05/12 00:30:58.282 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:58.282 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=4b78d879036796d8] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:30:58.282 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=4b78d879036796d8] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:30:58.283 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:30:58.283 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966248116355073] [posTime=2025/05/12 00:29:54.438 +02:00]
[2025/05/12 00:30:58.283 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:30:58.283 +02:00] [INFO] [indexcoord/meta_table.go:659] ["IndexCoord get index states success"] [indexID=457665900035116801] [total=0] [None=0] [Unissued=0] [InProgress=0] [Finished=0] [Failed=0]
[2025/05/12 00:30:58.283 +02:00] [INFO] [indexcoord/index_coord.go:635] ["IndexCoord completeIndexInfo success"] [collID=457665900034916433] [totalRows=0] [indexRows=0] [state=Finished] [failReason=]
[2025/05/12 00:30:58.283 +02:00] [INFO] [indexcoord/index_coord.go:955] ["IndexCoord DescribeIndex success"] [collectionID=457665900034916433] [indexID=457665900035116801] ["total rows"=0] ["indexed rows"=0] ["pending index rows"=0] ["index state"=Finished] ["check segment num"=0]
[2025/05/12 00:30:58.284 +02:00] [INFO] [task/executor.go:434] ["subscribe channel..."] [taskID=2] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [node=78] [source=1] [checkpoint=457966248034304001] [sinceCheckpoint=1m4.1592407s]
[2025/05/12 00:30:58.285 +02:00] [INFO] [querynode/impl.go:356] ["watchDmChannels init"] [collectionID=457665900034916433] [nodeID=78] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:58.285 +02:00] [INFO] [querynode/impl.go:359] ["watchDmChannels start "] [collectionID=457665900034916433] [nodeID=78] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [timeInQueue=526.8µs]
[2025/05/12 00:30:58.286 +02:00] [INFO] [querynode/watch_dm_channels_task.go:84] ["Starting WatchDmChannels ..."] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [replicaID=457665907707084801] [loadType=LoadCollection] [collectionName=rag_collection] [metricType=IP]
[2025/05/12 00:30:58.294 +02:00] [INFO] [querynode/collection.go:421] ["create collection"] [collectionID=457665900034916433]
[2025/05/12 00:30:58.294 +02:00] [INFO] [querynode/shard_cluster_service.go:81] ["successfully add shard cluster"] [collectionID=457665900034916433] [replica=457665907707084801] [vchan=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.295 +02:00] [INFO] [querynode/collection.go:91] ["queryNode collection info after add a partition"] [partitionID=457665900034916434] [collectionID=457665900034916433] [partitions="[457665900034916434]"]
[2025/05/12 00:30:58.295 +02:00] [INFO] [querynode/partition.go:114] ["create partition"] [partitionID=457665900034916434]
[2025/05/12 00:30:58.295 +02:00] [INFO] [querynode/watch_dm_channels_task.go:243] ["loading growing segments in WatchDmChannels..."] [collectionID=457665900034916433] [unFlushedSegmentIDs="[457665900035116791]"]
[2025/05/12 00:30:58.295 +02:00] [INFO] [querynode/segment_loader.go:124] ["segmentLoader start loading..."] [collectionID=457665900034916433] [segmentType=Growing] [segmentNum=1] [msgID=2]
[2025/05/12 00:30:58.296 +02:00] [INFO] [querynode/segment_loader.go:909] ["predict memory and disk usage while loading (in MiB)"] [collectionID=457665900034916433] [concurrency=1] [maxSegmentSize=0] [memUsage=10171] [freeMemory=3923] [totalMemory=14095] [predictMemUsage=10171] [predictPeakMemUsage=10172] [diskUsage=0] [predictDiskUsage=0] [totalDisk=348160]
[2025/05/12 00:30:58.298 +02:00] [INFO] [querynode/segment.go:268] ["create segment"] [collectionID=457665900034916433] [partitionID=457665900034916434] [segmentID=457665900035116791] [segmentType=Growing] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.299 +02:00] [INFO] [querynode/segment_loader.go:219] ["start to load segments in parallel"] [collectionID=457665900034916433] [segmentType=Growing] [segmentNum=1] [concurrencyLevel=1]
[2025/05/12 00:30:58.299 +02:00] [INFO] [querynode/segment_loader.go:259] ["start loading segment data into memory"] [collectionID=457665900034916433] [partitionID=457665900034916434] [segmentID=457665900035116791] [segmentType=Growing]
[2025/05/12 00:30:58.363 +02:00] [INFO] [querynode/segment.go:1025] ["load mutil field done"] ["row count"=40] [segmentID=457665900035116791]
[2025/05/12 00:30:58.363 +02:00] [INFO] [querynode/segment_loader.go:326] ["loading bloom filter..."] [segmentID=457665900035116791]
[2025/05/12 00:30:58.363 +02:00] [INFO] [querynode/segment_loader.go:602] ["Successfully load pk stats"] [time=508.7µs] [segment=457665900035116791] [size=442]
[2025/05/12 00:30:58.363 +02:00] [INFO] [querynode/segment_loader.go:334] ["loading delta..."] [segmentID=457665900035116791]
[2025/05/12 00:30:58.363 +02:00] [INFO] [querynode/segment_loader.go:623] ["there are no delta logs saved with segment, skip loading delete record"] [segmentID=457665900035116791]
[2025/05/12 00:30:58.366 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=38] ["total memory"=10172] ["next GC"=90] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747002658366293900]
[2025/05/12 00:30:58.368 +02:00] [DEBUG] [funcutil/parallel.go:51] [loadSegmentFunc] [total=1] ["time cost"=69.1586ms]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/partition.go:74] ["add a segment to replica"] [collectionID=457665900034916433] [partitionID=457665900034916434] [segmentID=457665900035116791] [segmentType=Growing]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/meta_replica.go:616] ["new segment added to collection replica"] ["query node ID"=78] ["collection ID"=457665900034916433] ["partition ID"=457665900034916434] ["segment ID"=457665900035116791] ["segment type"=Growing] ["row count"=40] ["segment indexed fields"=0] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/watch_dm_channels_task.go:262] ["successfully load growing segments done in WatchDmChannels"] [collectionID=457665900034916433] [unFlushedSegmentIDs="[457665900035116791]"]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/watch_dm_channels_task.go:286] ["watchDMChannel, group channels done"] [collectionID=457665900034916433]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/watch_dm_channels_task.go:301] ["watchDMChannel, add check points info for unflushed segments done"] [collectionID=457665900034916433] [unflushedSegmentIDs="[457665900035116791]"]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/watch_dm_channels_task.go:326] ["watchDMChannel, add check points info for flushed segments done"] [collectionID=457665900034916433] [flushedSegmentIDs="[]"]
[2025/05/12 00:30:58.368 +02:00] [INFO] [querynode/watch_dm_channels_task.go:353] ["watchDMChannel, add check points info for dropped segments done"] [collectionID=457665900034916433] [droppedSegmentIDs="[]"]
[2025/05/12 00:30:58.369 +02:00] [INFO] [querynode/data_sync_service.go:88] ["add DML flow graph"] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.370 +02:00] [INFO] [querynode/watch_dm_channels_task.go:364] ["Query node add DML flow graphs"] [collectionID=457665900034916433] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:58.370 +02:00] [INFO] [server/rocksmq_impl.go:480] ["Rocksmq create consumer group successfully "] [topic=by-dev-rootcoord-dml_2] [group=by-dev-queryNode-457665900034916433-78] [elapsed=0]
[2025/05/12 00:30:58.370 +02:00] [INFO] [server/rocksmq_impl.go:506] ["Rocksmq register consumer successfully "] [topic=by-dev-rootcoord-dml_2] [elapsed=0]
[2025/05/12 00:30:58.370 +02:00] [DEBUG] [rmq/rmq_client.go:91] ["tr/create consumer"] [msg="create consumer done"] [duration=0s]
[2025/05/12 00:30:58.370 +02:00] [INFO] [msgstream/mq_msgstream.go:882] ["MsgStream begin to seek start msg: "] [channel=by-dev-rootcoord-dml_2] [MessageID="fBxMtLIFWwY="]
[2025/05/12 00:30:58.370 +02:00] [INFO] [server/rocksmq_impl.go:853] ["successfully seek"] [topic=by-dev-rootcoord-dml_2] [group=by-dev-queryNode-457665900034916433-78] [msgId=457966052195441788]
[2025/05/12 00:30:58.370 +02:00] [INFO] [msgstream/mq_msgstream.go:892] ["MsgStream seek finished"] [channel=by-dev-rootcoord-dml_2]
[2025/05/12 00:30:58.370 +02:00] [INFO] [querynode/flow_graph_query_node.go:266] ["query node flow graph seeks from position"] [collectionID=457665900034916433] [pchannel=by-dev-rootcoord-dml_2] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0] [checkpointTs=2025/05/12 00:29:54.125 +02:00] [tsLag=1m4.2455597s] [elapse=530.1µs]
[2025/05/12 00:30:58.370 +02:00] [INFO] [querynode/watch_dm_channels_task.go:402] ["watchDMChannel, add flowGraph for dmChannels success"] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:58.370 +02:00] [INFO] [querynode/watch_dm_channels_task.go:143] ["watchDMChannel, init replica done"] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [replicaID=457665907707084801]
[2025/05/12 00:30:58.370 +02:00] [INFO] [querynode/tsafe_replica.go:139] ["add tSafe done"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/query_shard_service.go:103] ["Successfully add new query shard"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/watch_dm_channels_task.go:162] ["WatchDmChannels done"] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [replicaID=457665907707084801]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/shard_node_detector.go:71] ["nodeDetector watch"] [collectionID=457665900034916433] [replicaID=457665907707084801] [vchannelName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.371 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-78] [address=192.168.0.100:40002]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/shard_cluster.go:217] ["ShardCluster add node"] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [replicaID=457665907707084801] [nodeID=78]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/shard_segment_detector.go:76] ["segmentDetector start watch"] [collectionID=457665900034916433] [replicaID=457665907707084801] [vchannelName=by-dev-rootcoord-dml_2_457665900034916433v0] [rootPath=by-dev/meta/queryCoord-segmentMeta/457665900034916433]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/shard_cluster.go:394] ["Shard Cluster update state"] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [replicaID=457665907707084801] ["old state"=2] ["new state"=1] [caller=github.com/milvus-io/milvus/internal/querynode.(*ShardCluster).SetupFirstVersion]
[2025/05/12 00:30:58.371 +02:00] [INFO] [querynode/impl.go:391] ["successfully watchDmChannelsTask"] [collectionID=457665900034916433] [nodeID=78] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:58.372 +02:00] [INFO] [task/executor.go:449] ["subscribe DmChannel done"] [taskID=2] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [node=78] [source=1] [taskID=2] ["time taken"=93.2472ms]
[2025/05/12 00:30:58.447 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=631865b783fd8807] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.448 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:58.448 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=631865b783fd8807] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.649 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=308ff0e3717f122b] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.649 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:58.650 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=308ff0e3717f122b] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.776 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=78] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:30:58.776 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:30:58.776 +02:00] [INFO] [task/scheduler.go:750] ["task removed"] [taskID=2] [taskStatus=3] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:30:58.776 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=78] [toProcessNum=0] [failCount=0] [toRemoveNum=1]
[2025/05/12 00:30:58.776 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=78] [processingTaskNum=0] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=0]
[2025/05/12 00:30:58.806 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:30:58.806 +02:00] [INFO] [observers/collection_observer.go:204] ["collection load progress"] [collectionID=457665900034916433] [subChannelCount=1] [loadSegmentCount=0]
[2025/05/12 00:30:58.806 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:30:58.806 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:30:58.806 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:58.806 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:30:58.806 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:58.806 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:58.807 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:30:58.807 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=3f95cd5da70b0aed] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:30:58.807 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=3f95cd5da70b0aed] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:30:58.808 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:30:58.808 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966248116355073] [posTime=2025/05/12 00:29:54.438 +02:00]
[2025/05/12 00:30:58.808 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:30:58.808 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:30:58.809 +02:00] [INFO] [observers/collection_observer.go:235] ["collection load status updated"] [collectionID=457665900034916433] [loadPercentage=100] [collectionStatus=2]
[2025/05/12 00:30:58.809 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:30:58.809 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:30:58.852 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=3c03f28bafb9b840] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.852 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:58.852 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=3c03f28bafb9b840] [request="base:<msg_type:ShowCollections sourceID:85 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:30:58.857 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=6c0331aade12eee4] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:30:58.858 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=6c0331aade12eee4] [msg="search request enqueue"] [duration=1.5605ms]
[2025/05/12 00:30:58.858 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=6c0331aade12eee4] [role=proxy] [msgID=457966265002098689] [timestamp=457966265002098689] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:30:58.859 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:30:58.859 +02:00] [DEBUG] [proxy/meta_cache.go:330] ["QueryCoord show collections"] [collID=457665900034916433] [collections="[457665900034916433]"] [collectionsInMemoryPercentages="[100]"]
[2025/05/12 00:30:58.859 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] ["output fields"="[chunk_preview,chunk_text,emb,source_path,chunk_id]"]
[2025/05/12 00:30:58.859 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:30:58.861 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:30:58.861 +02:00] [INFO] [rootcoord/root_coord.go:1476] ["received request to show partitions"] [traceID=6c0331aade12eee4] [collection=rag_collection] [collectionID=0] [msgID=0] [allowUnavailable=false]
[2025/05/12 00:30:58.861 +02:00] [INFO] [rootcoord/root_coord.go:1507] ["done to show partitions"] [traceID=6c0331aade12eee4] [collection=rag_collection] [collectionID=0] [msgID=0] [allowUnavailable=false] [partitions="[_default]"]
[2025/05/12 00:30:58.862 +02:00] [DEBUG] [proxy/meta_cache.go:456] [proxy] ["GetPartitions:partitions after update"="status:<> partition_names:\"_default\" partitionIDs:457665900034916434 created_timestamps:457665910207676428 created_utc_timestamps:1745856896239 "] [collectionName=rag_collection]
[2025/05/12 00:30:58.862 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [travel_ts=18446744073709551615] [guarantee_ts=457966263691378689] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:30:58.862 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:30:58.862 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:30:58.864 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966263691378689] [timeTravel=18446744073709551615]
[2025/05/12 00:30:58.864 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:30:58.864 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:30:59.070 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:30:59.957 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=24000]
[2025/05/12 00:30:59.988 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[77]"] ["idle time"=24000]
[2025/05/12 00:31:00.769 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:00.785 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:00.802 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=proxy] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189\n  | github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:31:00.802 +02:00] [INFO] [rootcoord/root_coord.go:661] ["fail to refresh policy info cache"] [error="RefreshPolicyInfoCache failed, proxyID = 77, err = stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:31:00.802 +02:00] [INFO] [rootcoord/proxy_client_manager.go:110] ["succeed to create proxy client"] [address=192.168.0.100:19529] [serverID=85]
[2025/05/12 00:31:00.802 +02:00] [WARN] [rootcoord/quota_center.go:143] ["quotaCenter sync metrics failed"] [error="GetMetrics failed, proxyID = 85, err = context deadline exceeded"]
[2025/05/12 00:31:00.802 +02:00] [INFO] [rootcoord/proxy_manager.go:162] ["received proxy delete event with session"] [session="Session:<ServerID: 77, ServerName: proxy, Version: 2.2.16>"]
[2025/05/12 00:31:00.802 +02:00] [INFO] [rootcoord/timeticksync.go:234] ["Remove session from timeticksync"] [serverID=77]
[2025/05/12 00:31:00.803 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:31:00.804 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:30:53.852 +02:00] [serviceTime=2025/05/12 00:31:00.660 +02:00] ["delta milliseconds"=-6808] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966265002098689]
[2025/05/12 00:31:00.804 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=1.9395109s]
[2025/05/12 00:31:00.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:00.804 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=43b74c2bf34283ce] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:00.805 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966265476055041] [time=2025/05/12 00:31:00.660 +02:00]
[2025/05/12 00:31:00.805 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966265476055041] [cpTime=2025/05/12 00:31:00.660 +02:00]
[2025/05/12 00:31:00.806 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=6c0331aade12eee4] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:31:00.806 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:31:00.816 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:31:00.816 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=6c0331aade12eee4] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:31:00.818 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=6c0331aade12eee4] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.9540068s]
[2025/05/12 00:31:00.818 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=6c0331aade12eee4] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.9540068s]
[2025/05/12 00:31:00.818 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=6c0331aade12eee4] [msg="search done in all shards"] [duration=1.9545334s]
[2025/05/12 00:31:00.818 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=6c0331aade12eee4]
[2025/05/12 00:31:00.818 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966265002098689"] [traceID=6c0331aade12eee4] [msg=done] [duration=1.956701s]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=6c0331aade12eee4] [msgID=457966265002098689]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=6c0331aade12eee4] [sourceID=0] [msgID=457966265002098689]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=6c0331aade12eee4] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=6c0331aade12eee4] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=6c0331aade12eee4] [msgID=457966265002098689] ["number of valid search results"=1]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=6c0331aade12eee4] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=6c0331aade12eee4] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=6c0331aade12eee4] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:31:00.819 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=6c0331aade12eee4] [count=0]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=6c0331aade12eee4] [msg=done] [duration=998.5µs]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=6c0331aade12eee4] [msgID=457966265002098689]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=6c0331aade12eee4] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916813, 457665900034916833, 457665900034916805, 457665900034916861, 457665900034916823, 457665900034916827, 457665900034916809, 457665900034916825, 457665900034916845, 457665900034916815, 457665900034916811, 457665900034916799, 457665900034916801, 457665900034916789, 457665900034916807, 457665900034916847, 457665900034916849, 457665900034916795, 457665900034916835, 457665900034916821, 457665900034916857, 457665900034916851, 457665900034916865, 457665900034916819, 457665900034916853, 457665900034916863, 457665900034916841, 457665900034916829, 457665900034916843, 457665900034916859, 457665900034916817, 457665900034916793, 457665900034916803, 457665900034916791, 457665900034916787, 457665900034916839, 457665900034916855, 457665900034916831 ]"] [OutputFields="[chunk_preview,chunk_text,emb,source_path,chunk_id]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=6c0331aade12eee4] [msg="query request enqueue"] [duration=0s]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=6c0331aade12eee4] [role=proxy] [msgID=457966265513279489] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=6c0331aade12eee4] [collectionName=rag_collection] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=6c0331aade12eee4] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.820 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.828 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=6c0331aade12eee4] [collectionName=rag_collection] [msgID=457966265513279489] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:31:00.828 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=6c0331aade12eee4] [OutputFields="[chunk_id,id,chunk_preview,chunk_text,emb,source_path]"] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.828 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=6c0331aade12eee4] [OutputFieldsID="[103,100,105,104,101,102,1]"] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.828 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [requestType=query] [guarantee_ts=1] [travel_ts=457966265513279489] [timeout_ts=0]
[2025/05/12 00:31:00.828 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:31:00.829 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:31:00.830 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966265513279489] [partitionIDs="[]"]
[2025/05/12 00:31:00.831 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966265513279489]
[2025/05/12 00:31:00.831 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:31:00.831 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:31:00.660 +02:00] ["delta milliseconds"=-1747002660660] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966265513279489]
[2025/05/12 00:31:00.831 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:31:00.831 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=6c0331aade12eee4] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:31:00.834 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966265513279489] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:31:00.835 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=6c0331aade12eee4] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:31:00.835 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=6c0331aade12eee4] [msg="start reduce query result, msgID = 457966265513279489, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=3.4933ms]
[2025/05/12 00:31:00.835 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=6c0331aade12eee4] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:31:00.836 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=6c0331aade12eee4] [msg="do query done, msgID = 457966265513279489, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=4.49ms]
[2025/05/12 00:31:00.836 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=6c0331aade12eee4] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966265513279489"] [traceID=6c0331aade12eee4] [msg=done] [duration=9.4917ms]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=6c0331aade12eee4] [msgID=457966265513279489]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=6c0331aade12eee4] [sourceID=0] [msgID=457966265513279489]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=6c0331aade12eee4] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=6c0331aade12eee4] [len(retrieveResults)=1]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=6c0331aade12eee4] [msgID=457966265513279489] [requestType=query]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=6c0331aade12eee4] [msg=done] [duration=0s]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=6c0331aade12eee4] [msg="wait query result"] [duration=17.2502ms]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=6c0331aade12eee4] [role=proxy] [msgID=457966265513279489] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=6c0331aade12eee4] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:00.838 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=6c0331aade12eee4] [msg=done] [duration=18.2487ms]
[2025/05/12 00:31:00.839 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=6c0331aade12eee4] [msg="wait search result"] [duration=1.9796723s]
[2025/05/12 00:31:00.839 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=6c0331aade12eee4] [msg="wait search result"] [duration=999µs]
[2025/05/12 00:31:00.839 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=6c0331aade12eee4] [role=proxy] [msgID=457966265002098689] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[chunk_preview,chunk_text,emb,source_path,chunk_id]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:31:00.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:01.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:01.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:01.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:01.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:01.814 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:31:01.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:02.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:02.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:02.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:02.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:02.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:03.076 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"]
[2025/05/12 00:31:03.077 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=datanode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:31:03.077 +02:00] [INFO] [datacoord/session_manager.go:251] ["Get State failed"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=75), actual=%!s(int64=83): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:31:03.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:03.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:03.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:03.778 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:03.778 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:03.778 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966266260914177] [tSafe_p=2025/05/12 00:31:03.654 +02:00] [tsLag=124.1749ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:31:03.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:03.825 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:31:03.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:04.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:04.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:04.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:04.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:04.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:05.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:05.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:05.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:05.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:05.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:06.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:06.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:06.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:06.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:06.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:06.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:06.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:07.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:07.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:07.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:07.814 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:07.833 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:31:07.834 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=proxy] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:209 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).GetProxyMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:262 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).GetProxyMetrics.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).GetProxyMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:209\n  | github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).GetProxyMetrics.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:262\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:209 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).GetProxyMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:262 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).GetProxyMetrics.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:31:07.834 +02:00] [WARN] [rootcoord/quota_center.go:143] ["quotaCenter sync metrics failed"] [error="GetMetrics failed, proxyID = 77, err = stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:209 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).GetProxyMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:262 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).GetProxyMetrics.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=77), actual=%!s(int64=85): server ID mismatch"]
[2025/05/12 00:31:07.834 +02:00] [INFO] [rootcoord/proxy_client_manager.go:125] ["remove proxy client"] ["proxy address"=192.168.0.100:19529] ["proxy id"=77]
[2025/05/12 00:31:07.836 +02:00] [INFO] [proxy/impl.go:5018] [RefreshPrivilegeInfoCache] [req="opType:7 "]
[2025/05/12 00:31:07.837 +02:00] [INFO] [proxy/impl.go:5036] ["RefreshPrivilegeInfoCache success"]
[2025/05/12 00:31:07.837 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5c9265bd0631722a] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:07.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:08.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:08.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:08.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:08.752 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=485707ce85795012] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:08.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:08.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:09.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:09.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:09.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:09.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:09.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:09.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:09.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:10.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:10.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:10.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:10.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:10.811 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:31:10.811 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:31:10.811 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:31:10.811 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:31:10.811 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:10.811 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:10.811 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:10.811 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=2d16bcc80736926a] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:31:10.811 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=2d16bcc80736926a] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:31:10.812 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:31:10.812 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966265476055041] [posTime=2025/05/12 00:31:00.660 +02:00]
[2025/05/12 00:31:10.812 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:31:10.812 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:31:10.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:11.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:11.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:11.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:11.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=f9f976324036625] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:11.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:11.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:12.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:12.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:12.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:12.777 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:12.777 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:12.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:12.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:13.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:13.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:13.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:13.774 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966268885762049] [tSafe_p=2025/05/12 00:31:13.667 +02:00] [tsLag=107.8844ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:31:13.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:13.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:14.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:14.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:14.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:14.759 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2452a110c251e045] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:14.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:14.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:15.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:15.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:15.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:15.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:15.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:15.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:15.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:16.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:16.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:16.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:16.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:16.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:17.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:17.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:17.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:17.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=d80e1f13bb22841] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:17.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:17.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:18.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:18.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:18.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:18.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:18.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:18.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:18.818 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:31:18.818 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:31:18.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:19.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:19.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:19.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:19.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:19.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:20.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:20.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:20.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:20.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1eebc4312ee4627e] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:20.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:20.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:21.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:21.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:21.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:21.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:21.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:21.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:21.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:22.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:22.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:22.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:22.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:22.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:23.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:23.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:23.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:23.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3de4347c13cc879d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:23.782 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966271504842753] [tSafe_p=2025/05/12 00:31:23.658 +02:00] [tsLag=124.6233ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:31:23.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:23.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:24.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:24.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:24.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:24.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:24.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:24.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:24.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:25.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:25.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:25.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:25.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:25.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:26.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:26.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:26.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:26.761 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=68db9b53b10139d2] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:26.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:26.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:27.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:27.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:27.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:27.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:27.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:27.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:27.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:28.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:28.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:28.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:28.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:28.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:29.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:29.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:29.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:29.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=292a9d29935f7dd6] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:29.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:29.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:30.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:30.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:30.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:30.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:30.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:30.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:30.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:31.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:31.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:31.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:31.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:31.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:32.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:32.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:32.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:32.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=78106ec1208c5d48] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:32.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:32.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:33.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:33.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:33.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:33.781 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:33.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:33.781 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966274101379073] [tSafe_p=2025/05/12 00:31:33.563 +02:00] [tsLag=218.4805ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:31:33.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:33.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:34.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:34.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:34.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:34.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:34.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:35.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:35.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:35.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:35.758 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=e0497fbb749928f] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:35.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:35.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:36.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:36.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:36.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:36.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:36.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:36.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:36.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:37.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:37.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:37.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:37.814 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:37.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:38.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:38.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:38.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:38.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=29a99fd1ac742711] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:38.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:38.811 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:31:38.811 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:31:38.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:39.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:39.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:39.574 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:39.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:39.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:39.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:39.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:40.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:40.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:40.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:40.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:40.808 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:31:40.808 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:31:40.808 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:31:40.808 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:31:40.808 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:40.808 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:40.808 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:40.808 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=6e8e5cd478f5a1e4] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:31:40.808 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=6e8e5cd478f5a1e4] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:31:40.809 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:31:40.809 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966265476055041] [posTime=2025/05/12 00:31:00.660 +02:00]
[2025/05/12 00:31:40.809 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:31:40.809 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:31:40.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:41.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:41.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:41.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:41.759 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3474982a4da0e03a] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:41.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:41.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:42.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:42.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:42.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:42.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:42.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:42.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:42.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:43.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:43.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:43.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:43.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:43.788 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966276708139009] [tSafe_p=2025/05/12 00:31:43.507 +02:00] [tsLag=281.1498ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:31:43.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:44.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:44.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:44.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:44.753 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6f651a1d8219cb11] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:44.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:44.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:45.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:45.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:45.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:45.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:45.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:45.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:45.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:46.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:46.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:46.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:46.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:46.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:47.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:47.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:47.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:47.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6a9fdd3b72c45d24] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:47.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:47.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:48.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:48.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:48.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:48.772 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:48.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:48.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:48.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:49.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:49.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:49.552 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=b0389f88ceec7e1] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:31:49.552 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=b0389f88ceec7e1] [role=proxy] [MsgID=457966278292799489] [BeginTS=457966278292799489] [EndTS=457966278292799489] [db=default] [collection=rag_collection]
[2025/05/12 00:31:49.553 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=b0389f88ceec7e1] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966278292799489] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:31:49.553 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=b0389f88ceec7e1] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966278292799489] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:31:49.553 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=b0389f88ceec7e1] [role=proxy] [MsgID=457966278292799489] [BeginTS=457966278292799489] [EndTS=457966278292799489] [db=default] [collection=rag_collection]
[2025/05/12 00:31:49.554 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=ed8a9f67547a8cc] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:31:49.555 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=ed8a9f67547a8cc] [role=proxy] [MsgID=457966278292799491] [BeginTS=457966278292799491] [EndTS=457966278292799491] [db=default] [collection=rag_collection]
[2025/05/12 00:31:49.555 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=ed8a9f67547a8cc] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966278292799491] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:31:49.555 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=ed8a9f67547a8cc] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966278292799491] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:31:49.555 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=ed8a9f67547a8cc] [role=proxy] [MsgID=457966278292799491] [BeginTS=457966278292799491] [EndTS=457966278292799491] [db=default] [collection=rag_collection]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=4bf5580fe0386ae7] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=4bf5580fe0386ae7] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=4bf5580fe0386ae7] [role=proxy] [msgID=457966278292799493] [timestamp=457966278292799493] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] ["output fields"="[emb,source_path,chunk_id,chunk_preview,chunk_text]"]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:31:49.558 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [travel_ts=18446744073709551615] [guarantee_ts=457966276982079493] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:31:49.558 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:31:49.558 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966276982079493] [timeTravel=18446744073709551615]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:31:44.552 +02:00] [serviceTime=2025/05/12 00:31:49.252 +02:00] ["delta milliseconds"=-4700] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966278292799493]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=4bf5580fe0386ae7] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:31:49.559 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=4bf5580fe0386ae7] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=4bf5580fe0386ae7] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=525.1µs]
[2025/05/12 00:31:49.559 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=4bf5580fe0386ae7] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=525.1µs]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=4bf5580fe0386ae7] [msg="search done in all shards"] [duration=1.0633ms]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=4bf5580fe0386ae7]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966278292799493"] [traceID=4bf5580fe0386ae7] [msg=done] [duration=1.6031ms]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=4bf5580fe0386ae7] [sourceID=0] [msgID=457966278292799493]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=4bf5580fe0386ae7] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=4bf5580fe0386ae7] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493] ["number of valid search results"=1]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=4bf5580fe0386ae7] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=4bf5580fe0386ae7] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=4bf5580fe0386ae7] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=4bf5580fe0386ae7] [count=0]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=4bf5580fe0386ae7] [msg=done] [duration=0s]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799493]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=4bf5580fe0386ae7] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916845, 457665900034916813, 457665900034916797, 457665900034916805, 457665900034916837, 457665900034916847, 457665900034916861, 457665900034916799, 457665900034916833, 457665900034916827, 457665900034916811, 457665900034916825, 457665900034916841, 457665900034916815, 457665900034916857, 457665900034916801, 457665900034916809, 457665900034916807, 457665900034916789, 457665900034916863, 457665900034916793, 457665900034916823, 457665900034916849, 457665900034916851, 457665900034916795, 457665900034916843, 457665900034916853, 457665900034916819, 457665900034916859, 457665900034916835, 457665900034916865, 457665900034916829, 457665900034916855, 457665900034916791, 457665900034916803, 457665900034916817, 457665900034916787, 457665900034916821, 457665900034916839, 457665900034916831 ]"] [OutputFields="[emb,source_path,chunk_id,chunk_preview,chunk_text]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=4bf5580fe0386ae7] [msg="query request enqueue"] [duration=517.5µs]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=4bf5580fe0386ae7] [role=proxy] [msgID=457966278292799494] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=4bf5580fe0386ae7] [collectionName=rag_collection] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=4bf5580fe0386ae7] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.560 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=4bf5580fe0386ae7] [collectionName=rag_collection] [msgID=457966278292799494] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=4bf5580fe0386ae7] [OutputFields="[emb,source_path,chunk_id,chunk_preview,chunk_text,id]"] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=4bf5580fe0386ae7] [OutputFieldsID="[101,102,103,105,104,100,1]"] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [requestType=query] [guarantee_ts=1] [travel_ts=457966278292799494] [timeout_ts=0]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966278292799494] [partitionIDs="[]"]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966278292799494]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:31:49.252 +02:00] ["delta milliseconds"=-1747002709252] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966278292799494]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=593.2µs]
[2025/05/12 00:31:49.562 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=4bf5580fe0386ae7] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:31:49.563 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966278292799494] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:31:49.563 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=4bf5580fe0386ae7] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:31:49.563 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=4bf5580fe0386ae7] [msg="start reduce query result, msgID = 457966278292799494, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.6467ms]
[2025/05/12 00:31:49.563 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=4bf5580fe0386ae7] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:31:49.564 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=4bf5580fe0386ae7] [msg="do query done, msgID = 457966278292799494, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=2.1759ms]
[2025/05/12 00:31:49.564 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=4bf5580fe0386ae7] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966278292799494"] [traceID=4bf5580fe0386ae7] [msg=done] [duration=3.7553ms]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=4bf5580fe0386ae7] [sourceID=0] [msgID=457966278292799494]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=4bf5580fe0386ae7] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=4bf5580fe0386ae7] [len(retrieveResults)=1]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=4bf5580fe0386ae7] [msgID=457966278292799494] [requestType=query]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=4bf5580fe0386ae7] [msg=done] [duration=0s]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=4bf5580fe0386ae7] [msg="wait query result"] [duration=5.3575ms]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=4bf5580fe0386ae7] [role=proxy] [msgID=457966278292799494] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=4bf5580fe0386ae7] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=4bf5580fe0386ae7] [msg=done] [duration=6.3964ms]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=4bf5580fe0386ae7] [msg="wait search result"] [duration=8.5055ms]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=4bf5580fe0386ae7] [msg="wait search result"] [duration=0s]
[2025/05/12 00:31:49.566 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=4bf5580fe0386ae7] [role=proxy] [msgID=457966278292799493] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[emb,source_path,chunk_id,chunk_preview,chunk_text]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:31:49.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:49.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:49.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:50.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:50.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:50.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:50.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6beaf3f0a1e34a39] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:50.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:50.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:51.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:51.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:51.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:51.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:51.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:51.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:51.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:52.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:52.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:52.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:52.791 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:52.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:53.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:53.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:53.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:53.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=50cd481bef20a4be] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:53.789 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966279370735617] [tSafe_p=2025/05/12 00:31:53.664 +02:00] [tsLag=125.7096ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:31:53.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:53.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:54.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:54.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:54.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:54.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:54.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:54.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:54.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:55.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:55.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:55.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:55.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:55.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:56.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:56.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:56.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:56.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5454fd5f4665e3aa] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:56.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:56.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:57.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:57.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:57.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:57.769 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:31:57.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:31:57.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:57.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:58.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:58.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:58.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:58.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:58.810 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:31:58.810 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:31:58.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:59.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:59.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:59.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:59.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4c4b093b14b67f97] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:31:59.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:31:59.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:00.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:00.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:00.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:00.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:00.789 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:00.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:00.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:00.979 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966281230123009] [time=2025/05/12 00:32:00.757 +02:00]
[2025/05/12 00:32:00.979 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966281230123009] [cpTime=2025/05/12 00:32:00.757 +02:00]
[2025/05/12 00:32:01.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:01.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:01.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:01.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:01.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:02.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:02.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:02.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:02.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=713f8d30404fa1d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:02.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:02.974 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:03.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:03.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:03.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:03.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:03.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:03.787 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966281950494721] [tSafe_p=2025/05/12 00:32:03.505 +02:00] [tsLag=282.8395ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:32:03.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:03.991 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:04.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:04.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:04.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:04.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:04.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:05.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:05.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:05.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:05.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6804e81e18297683] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:05.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:05.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:06.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:06.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:06.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:06.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:06.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:06.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:06.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:07.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:07.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:07.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:07.791 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:07.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:08.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:08.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:08.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:08.762 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=69a158d86c6608f1] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:08.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:08.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:09.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:09.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:09.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:09.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:09.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:09.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:09.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:10.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:10.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:10.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:10.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:10.804 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:32:10.804 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:32:10.804 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:32:10.804 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:32:10.804 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:10.804 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:10.804 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:10.805 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=667141c3f4bc0695] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:32:10.805 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=667141c3f4bc0695] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:32:10.805 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:32:10.805 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966281230123009] [posTime=2025/05/12 00:32:00.757 +02:00]
[2025/05/12 00:32:10.805 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:32:10.805 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:32:10.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:11.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:11.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:11.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:11.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6e403a46c6a29556] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:11.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:11.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:12.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:12.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:12.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:12.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:12.789 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:12.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:12.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:12.979 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=78] ["total memory"=9874] ["next GC"=96] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747002732979165700]
[2025/05/12 00:32:13.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:13.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:13.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:13.787 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966284613091329] [tSafe_p=2025/05/12 00:32:13.662 +02:00] [tsLag=125.4826ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:32:13.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:13.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:14.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:14.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:14.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:14.754 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2dd8417c8a18cef] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:14.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:14.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:15.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:15.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:15.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:15.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:15.784 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:15.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:15.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:16.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:16.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:16.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:16.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:16.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:17.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:17.374 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:17.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:17.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=41dbc9ecb28cecf8] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:17.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:17.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:18.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:18.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:18.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:18.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:18.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:18.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:18.811 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:32:18.811 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:32:18.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:19.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:19.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:19.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:19.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:19.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:20.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:20.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:20.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:20.762 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=ed2a1bab93bdec4] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:20.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:20.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:21.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:21.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:21.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:21.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:21.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:21.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:21.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:22.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:22.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:22.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:22.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:22.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:23.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:23.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:23.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:23.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=450a4344fc93a763] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:23.786 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966287234269185] [tSafe_p=2025/05/12 00:32:23.661 +02:00] [tsLag=125.2547ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:32:23.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:23.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:24.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:24.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:24.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:24.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:24.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:24.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:24.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:25.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:25.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:25.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:25.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:25.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:26.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:26.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:26.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:26.762 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=70a1d5c7297f6706] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:26.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:26.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:27.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:27.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:27.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:27.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:27.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:27.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:27.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:28.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:28.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:28.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:28.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:28.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:29.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:29.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:29.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:29.758 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=350367eb332f797b] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:29.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:29.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:30.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:30.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:30.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:30.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:30.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:30.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:30.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:31.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:31.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:31.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:31.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:31.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:32.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:32.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:32.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:32.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7729ce45bf0facaa] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:32.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:32.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:33.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:33.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:33.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:33.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:33.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:33.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:33.787 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966289827659777] [tSafe_p=2025/05/12 00:32:33.554 +02:00] [tsLag=233.0435ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:32:33.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:34.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:34.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:34.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:34.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:34.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:35.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:35.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:35.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:35.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=136b3dc2952cd73d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:35.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:35.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:36.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:36.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:36.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:36.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:36.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:36.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:36.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:37.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:37.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:37.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:37.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:37.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:38.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:38.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:38.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:38.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=114a3e7d895945ef] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:38.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:38.809 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:32:38.809 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:32:38.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:39.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:39.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:39.591 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:39.778 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:39.778 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:39.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:39.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:40.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:40.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:40.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:40.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:40.809 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:32:40.809 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:32:40.809 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:32:40.809 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:32:40.809 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:40.809 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:40.809 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:40.809 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=400ca215862811c4] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:32:40.809 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=400ca215862811c4] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:32:40.810 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:32:40.810 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966281230123009] [posTime=2025/05/12 00:32:00.757 +02:00]
[2025/05/12 00:32:40.810 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:32:40.810 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:32:40.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:41.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:41.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:41.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:41.762 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3d6e462e8d76fca8] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:41.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:41.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:42.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:42.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:42.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:42.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:42.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:42.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:42.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:43.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:43.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:43.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:43.778 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966292450410497] [tSafe_p=2025/05/12 00:32:43.559 +02:00] [tsLag=219.0219ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:32:43.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:43.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:44.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:44.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:44.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:44.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5bfc13e158cffe3e] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:44.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:44.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:45.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:45.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:45.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:45.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:45.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:45.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:45.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:46.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:46.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:46.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:46.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:46.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:47.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:47.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:47.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:47.759 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=689366753c4608d3] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:47.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:47.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:48.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:48.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:48.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:48.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:48.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:48.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:48.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:49.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:49.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:49.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:49.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:49.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:50.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:50.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:50.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:50.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=533ebbce241bda13] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:50.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:50.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:51.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:51.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:51.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:51.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:51.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:51.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:51.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:52.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:52.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:52.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:52.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:52.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:53.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:53.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:53.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:53.766 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=135e95ee736d6fef] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:53.780 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966295072636929] [tSafe_p=2025/05/12 00:32:53.562 +02:00] [tsLag=218.8763ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:32:53.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:53.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:54.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:54.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:54.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:54.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:54.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:54.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:54.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:55.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:55.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:55.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:55.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:55.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:56.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:56.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:56.575 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=36101f9b2e4467aa] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:32:56.576 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=36101f9b2e4467aa] [role=proxy] [MsgID=457966295857496067] [BeginTS=457966295857496067] [EndTS=457966295857496067] [db=default] [collection=rag_collection]
[2025/05/12 00:32:56.576 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=36101f9b2e4467aa] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966295857496067] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:32:56.576 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=36101f9b2e4467aa] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966295857496067] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:32:56.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:56.576 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=36101f9b2e4467aa] [role=proxy] [MsgID=457966295857496067] [BeginTS=457966295857496067] [EndTS=457966295857496067] [db=default] [collection=rag_collection]
[2025/05/12 00:32:56.577 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=7c58997ac5e22dd6] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:32:56.577 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=7c58997ac5e22dd6] [role=proxy] [MsgID=457966295857496069] [BeginTS=457966295857496069] [EndTS=457966295857496069] [db=default] [collection=rag_collection]
[2025/05/12 00:32:56.577 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=7c58997ac5e22dd6] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966295857496069] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:32:56.577 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=7c58997ac5e22dd6] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966295857496069] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:32:56.577 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=7c58997ac5e22dd6] [role=proxy] [MsgID=457966295857496069] [BeginTS=457966295857496069] [EndTS=457966295857496069] [db=default] [collection=rag_collection]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=541fb7de25452805] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=541fb7de25452805] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=541fb7de25452805] [msgID=457966295857496071] ["output fields"="[source_path,chunk_id,chunk_preview,chunk_text,emb]"]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=541fb7de25452805] [role=proxy] [msgID=457966295857496071] [timestamp=457966295857496071] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=541fb7de25452805] [msgID=457966295857496071] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=541fb7de25452805] [msgID=457966295857496071] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:32:56.579 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=541fb7de25452805] [msgID=457966295857496071] [travel_ts=18446744073709551615] [guarantee_ts=457966294546776071] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:32:56.579 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:32:56.579 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=541fb7de25452805] [msgID=457966295857496071] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966294546776071] [timeTravel=18446744073709551615]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=541fb7de25452805] [msgID=457966295857496071] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:32:51.556 +02:00] [serviceTime=2025/05/12 00:32:56.353 +02:00] ["delta milliseconds"=-4797] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966295857496071]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=541fb7de25452805] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=541fb7de25452805] [msgID=457966295857496071] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=541fb7de25452805] [msgID=457966295857496071] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:32:56.580 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=541fb7de25452805] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=541fb7de25452805] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=530.5µs]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=541fb7de25452805] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=530.5µs]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=541fb7de25452805] [msg="search done in all shards"] [duration=530.5µs]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=541fb7de25452805]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966295857496071"] [traceID=541fb7de25452805] [msg=done] [duration=1.0726ms]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=541fb7de25452805] [msgID=457966295857496071]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=541fb7de25452805] [sourceID=0] [msgID=457966295857496071]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=541fb7de25452805] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=541fb7de25452805] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=541fb7de25452805] [msgID=457966295857496071] ["number of valid search results"=1]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=541fb7de25452805] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=541fb7de25452805] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:32:56.580 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=541fb7de25452805] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:32:56.581 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=541fb7de25452805] [count=0]
[2025/05/12 00:32:56.581 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=541fb7de25452805] [msg=done] [duration=534.5µs]
[2025/05/12 00:32:56.581 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=541fb7de25452805] [msgID=457966295857496071]
[2025/05/12 00:32:56.581 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=541fb7de25452805] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916813, 457665900034916797, 457665900034916861, 457665900034916833, 457665900034916805, 457665900034916811, 457665900034916825, 457665900034916809, 457665900034916827, 457665900034916823, 457665900034916801, 457665900034916815, 457665900034916795, 457665900034916799, 457665900034916847, 457665900034916845, 457665900034916857, 457665900034916807, 457665900034916835, 457665900034916849, 457665900034916851, 457665900034916789, 457665900034916819, 457665900034916829, 457665900034916863, 457665900034916821, 457665900034916865, 457665900034916859, 457665900034916841, 457665900034916853, 457665900034916843, 457665900034916817, 457665900034916793, 457665900034916803, 457665900034916791, 457665900034916787, 457665900034916839, 457665900034916855, 457665900034916831 ]"] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=541fb7de25452805] [msg="query request enqueue"] [duration=1.0583ms]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=541fb7de25452805] [collectionName=rag_collection] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=541fb7de25452805] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=541fb7de25452805] [role=proxy] [msgID=457966295857496072] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=541fb7de25452805] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=541fb7de25452805] [collectionName=rag_collection] [msgID=457966295857496072] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=541fb7de25452805] [OutputFields="[chunk_id,chunk_preview,chunk_text,emb,id,source_path]"] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=541fb7de25452805] [OutputFieldsID="[103,105,104,101,100,102,1]"] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=541fb7de25452805] [msgID=457966295857496072] [requestType=query] [guarantee_ts=1] [travel_ts=457966295857496072] [timeout_ts=0]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=541fb7de25452805] [msgID=457966295857496072] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966295857496072] [partitionIDs="[]"]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=541fb7de25452805] [msgID=457966295857496072] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966295857496072]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=541fb7de25452805] [msgID=457966295857496072] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:32:56.353 +02:00] ["delta milliseconds"=-1747002776353] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966295857496072]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:32:56.582 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=541fb7de25452805] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:32:56.583 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966295857496072] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:32:56.583 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=541fb7de25452805] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:32:56.583 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=541fb7de25452805] [msg="start reduce query result, msgID = 457966295857496072, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0607ms]
[2025/05/12 00:32:56.583 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=541fb7de25452805] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:32:56.583 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=541fb7de25452805] [msg="do query done, msgID = 457966295857496072, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0607ms]
[2025/05/12 00:32:56.583 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=541fb7de25452805] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=541fb7de25452805] [msgID=457966295857496072] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=541fb7de25452805] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966295857496072"] [traceID=541fb7de25452805] [msg=done] [duration=2.6635ms]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=541fb7de25452805] [msgID=457966295857496072]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=541fb7de25452805] [sourceID=0] [msgID=457966295857496072]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=541fb7de25452805] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=541fb7de25452805] [len(retrieveResults)=1]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=541fb7de25452805] [msgID=457966295857496072] [requestType=query]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=541fb7de25452805] [msg=done] [duration=0s]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=541fb7de25452805] [msg="wait query result"] [duration=2.6635ms]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=541fb7de25452805] [role=proxy] [msgID=457966295857496072] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=541fb7de25452805] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=541fb7de25452805] [msg=done] [duration=4.2563ms]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=541fb7de25452805] [msg="wait search result"] [duration=5.8345ms]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=541fb7de25452805] [msg="wait search result"] [duration=0s]
[2025/05/12 00:32:56.585 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=541fb7de25452805] [role=proxy] [msgID=457966295857496071] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:32:56.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=704b9d9a6d590927] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:56.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:56.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:57.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:57.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:57.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:57.773 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:32:57.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:32:57.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:57.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:58.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:58.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:58.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:58.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:58.817 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:32:58.817 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:32:58.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:59.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:59.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:59.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:59.766 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1265cd142f2849c4] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:32:59.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:32:59.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:00.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:00.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:00.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:00.778 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:00.778 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:00.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:00.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:01.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:01.184 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966297013288962] [time=2025/05/12 00:33:00.965 +02:00]
[2025/05/12 00:33:01.185 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966297013288962] [cpTime=2025/05/12 00:33:00.965 +02:00]
[2025/05/12 00:33:01.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:01.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:01.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:01.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:02.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:02.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:02.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:02.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=679af48f241ee79f] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:02.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:02.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:03.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:03.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:03.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:03.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:03.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:03.787 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966297720029185] [tSafe_p=2025/05/12 00:33:03.661 +02:00] [tsLag=126.0059ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:33:03.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:03.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:04.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:04.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:04.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:04.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:04.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:05.174 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:05.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:05.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:05.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2883c853604c07bd] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:05.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:05.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:06.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:06.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:06.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:06.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:06.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:06.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:06.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:07.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:07.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:07.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:07.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:07.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:08.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:08.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:08.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:08.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7d7c8eb6e22800e2] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:08.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:08.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:09.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:09.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:09.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:09.778 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:09.778 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:09.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:09.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:10.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:10.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:10.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:10.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:10.807 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:33:10.807 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:33:10.807 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:33:10.807 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:33:10.807 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:10.807 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:10.807 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:10.807 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=51ced8488b9efbf1] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:33:10.807 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=51ced8488b9efbf1] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:33:10.808 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:33:10.808 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966297013288962] [posTime=2025/05/12 00:33:00.965 +02:00]
[2025/05/12 00:33:10.808 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:33:10.808 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:33:10.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:11.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:11.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:11.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:11.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=70778688c9e6a3e8] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:11.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:11.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:12.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:12.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:12.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:12.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:12.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:12.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:12.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:13.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:13.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:13.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:13.784 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966300341207041] [tSafe_p=2025/05/12 00:33:13.660 +02:00] [tsLag=124.6944ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:33:13.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:13.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:14.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:14.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:14.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:14.752 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7bc1e1b81116ff34] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:14.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:14.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:15.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:15.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:15.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:15.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:15.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:15.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:15.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:16.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:16.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:16.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:16.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:16.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:17.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:17.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:17.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:17.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2a8972a3c9da6f9d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:17.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:17.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:18.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:18.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:18.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:18.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:18.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:18.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:18.821 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:33:18.821 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:33:18.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:19.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:19.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:19.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:19.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:19.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:20.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:20.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:20.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:20.753 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=126f8fb7b813c05d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:20.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:20.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:21.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:21.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:21.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:21.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:21.784 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:21.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:21.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:22.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:22.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:22.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:22.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:22.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:23.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:23.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:23.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:23.762 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=e3178e0bade02d1] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:23.778 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966302936170497] [tSafe_p=2025/05/12 00:33:23.559 +02:00] [tsLag=219.3216ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:33:23.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:23.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:24.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:24.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:24.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:24.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:24.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:24.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:24.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:25.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:25.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:25.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:25.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:25.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:26.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:26.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:26.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:26.762 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=9461ae11b2ea221] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:26.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:26.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:27.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:27.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:27.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:27.777 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:27.777 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:27.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:27.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:28.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:28.265 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=1da8df262f3ae59b] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:33:28.266 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=1da8df262f3ae59b] [role=proxy] [MsgID=457966304168509441] [BeginTS=457966304168509441] [EndTS=457966304168509441] [db=default] [collection=rag_collection]
[2025/05/12 00:33:28.266 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=1da8df262f3ae59b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966304168509441] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:33:28.266 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=1da8df262f3ae59b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966304168509441] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:33:28.266 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=1da8df262f3ae59b] [role=proxy] [MsgID=457966304168509441] [BeginTS=457966304168509441] [EndTS=457966304168509441] [db=default] [collection=rag_collection]
[2025/05/12 00:33:28.268 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=551530ca23392706] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:33:28.268 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=551530ca23392706] [role=proxy] [MsgID=457966304168509443] [BeginTS=457966304168509443] [EndTS=457966304168509443] [db=default] [collection=rag_collection]
[2025/05/12 00:33:28.269 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=551530ca23392706] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966304168509443] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:33:28.269 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=551530ca23392706] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966304168509443] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:33:28.269 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=551530ca23392706] [role=proxy] [MsgID=457966304168509443] [BeginTS=457966304168509443] [EndTS=457966304168509443] [db=default] [collection=rag_collection]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=396a9da335d2be66] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=396a9da335d2be66] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=396a9da335d2be66] [role=proxy] [msgID=457966304168509445] [timestamp=457966304168509445] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=396a9da335d2be66] [msgID=457966304168509445] ["output fields"="[source_path,chunk_id,chunk_preview,chunk_text,emb]"]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=396a9da335d2be66] [msgID=457966304168509445] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=396a9da335d2be66] [msgID=457966304168509445] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:33:28.270 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=396a9da335d2be66] [msgID=457966304168509445] [travel_ts=18446744073709551615] [guarantee_ts=457966302857789445] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:33:28.270 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:33:28.270 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=396a9da335d2be66] [msgID=457966304168509445] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966302857789445] [timeTravel=18446744073709551615]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=396a9da335d2be66] [msgID=457966304168509445] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:33:23.260 +02:00] [serviceTime=2025/05/12 00:33:28.056 +02:00] ["delta milliseconds"=-4796] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966304168509445]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=396a9da335d2be66] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=396a9da335d2be66] [msgID=457966304168509445] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=396a9da335d2be66] [msgID=457966304168509445] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:33:28.271 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=396a9da335d2be66] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=396a9da335d2be66] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=396a9da335d2be66] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=396a9da335d2be66] [msg="search done in all shards"] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=396a9da335d2be66]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966304168509445"] [traceID=396a9da335d2be66] [msg=done] [duration=1.0066ms]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=396a9da335d2be66] [msgID=457966304168509445]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=396a9da335d2be66] [sourceID=0] [msgID=457966304168509445]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=396a9da335d2be66] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=396a9da335d2be66] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=396a9da335d2be66] [msgID=457966304168509445] ["number of valid search results"=1]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=396a9da335d2be66] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=396a9da335d2be66] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=396a9da335d2be66] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=396a9da335d2be66] [count=0]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=396a9da335d2be66] [msg=done] [duration=0s]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=396a9da335d2be66] [msgID=457966304168509445]
[2025/05/12 00:33:28.271 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=396a9da335d2be66] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916813, 457665900034916833, 457665900034916861, 457665900034916805, 457665900034916823, 457665900034916827, 457665900034916809, 457665900034916845, 457665900034916825, 457665900034916815, 457665900034916799, 457665900034916811, 457665900034916801, 457665900034916807, 457665900034916789, 457665900034916847, 457665900034916865, 457665900034916795, 457665900034916821, 457665900034916863, 457665900034916849, 457665900034916857, 457665900034916851, 457665900034916835, 457665900034916819, 457665900034916841, 457665900034916829, 457665900034916843, 457665900034916853, 457665900034916859, 457665900034916817, 457665900034916793, 457665900034916803, 457665900034916791, 457665900034916839, 457665900034916787, 457665900034916855, 457665900034916831 ]"] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=396a9da335d2be66] [msg="query request enqueue"] [duration=1ms]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=396a9da335d2be66] [role=proxy] [msgID=457966304168509446] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=396a9da335d2be66] [collectionName=rag_collection] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=396a9da335d2be66] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=396a9da335d2be66] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=396a9da335d2be66] [collectionName=rag_collection] [msgID=457966304168509446] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=396a9da335d2be66] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb,id]"] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=396a9da335d2be66] [OutputFieldsID="[102,103,105,104,101,100,1]"] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=396a9da335d2be66] [msgID=457966304168509446] [requestType=query] [guarantee_ts=1] [travel_ts=457966304168509446] [timeout_ts=0]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=396a9da335d2be66] [msgID=457966304168509446] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966304168509446] [partitionIDs="[]"]
[2025/05/12 00:33:28.272 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=396a9da335d2be66] [msgID=457966304168509446] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966304168509446]
[2025/05/12 00:33:28.273 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=396a9da335d2be66] [msgID=457966304168509446] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:33:28.273 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:33:28.056 +02:00] ["delta milliseconds"=-1747002808056] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966304168509446]
[2025/05/12 00:33:28.273 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:33:28.273 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=396a9da335d2be66] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:33:28.273 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966304168509446] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:33:28.274 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=396a9da335d2be66] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:33:28.274 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=396a9da335d2be66] [msg="start reduce query result, msgID = 457966304168509446, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0009ms]
[2025/05/12 00:33:28.274 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=396a9da335d2be66] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:33:28.274 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=396a9da335d2be66] [msg="do query done, msgID = 457966304168509446, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0009ms]
[2025/05/12 00:33:28.274 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=396a9da335d2be66] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=396a9da335d2be66] [msgID=457966304168509446] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=396a9da335d2be66] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966304168509446"] [traceID=396a9da335d2be66] [msg=done] [duration=3.0003ms]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=396a9da335d2be66] [msgID=457966304168509446]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=396a9da335d2be66] [sourceID=0] [msgID=457966304168509446]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=396a9da335d2be66] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=396a9da335d2be66] [len(retrieveResults)=1]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=396a9da335d2be66] [msgID=457966304168509446] [requestType=query]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=396a9da335d2be66] [msg=done] [duration=0s]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=396a9da335d2be66] [msg="wait query result"] [duration=3.0003ms]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=396a9da335d2be66] [role=proxy] [msgID=457966304168509446] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=396a9da335d2be66] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=396a9da335d2be66] [msg=done] [duration=4.0003ms]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=396a9da335d2be66] [msg="wait search result"] [duration=5.0069ms]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=396a9da335d2be66] [msg="wait search result"] [duration=0s]
[2025/05/12 00:33:28.275 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=396a9da335d2be66] [role=proxy] [msgID=457966304168509445] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:28.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:28.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:28.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:28.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:29.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:29.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:29.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:29.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=389113907219dc11] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:29.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:29.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:30.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:30.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:30.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:30.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:30.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:30.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:30.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:31.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:31.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:31.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:31.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:31.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:32.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:32.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:32.591 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:32.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6db510c68d2676d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:32.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:32.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:33.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:33.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:33.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:33.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:33.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:33.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:33.776 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966305585922049] [tSafe_p=2025/05/12 00:33:33.667 +02:00] [tsLag=109.3866ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:33:33.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:34.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:34.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:34.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:34.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:34.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:35.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:35.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:35.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:35.758 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5e94b2091fa27339] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:35.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:35.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:36.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:36.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:36.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:36.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:36.773 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:36.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:36.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:37.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:37.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:37.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:37.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:37.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:38.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:38.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:38.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:38.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=57c331a11808d6e] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:38.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:38.813 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:33:38.813 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:33:38.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:39.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:39.391 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:39.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:39.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:39.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:39.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:39.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:40.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:40.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:40.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:40.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:40.809 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:33:40.809 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:33:40.809 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:33:40.809 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:33:40.809 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:40.809 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:40.809 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:40.809 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=fedbc60e50422fa] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:33:40.809 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=fedbc60e50422fa] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:33:40.810 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:33:40.810 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966297013288962] [posTime=2025/05/12 00:33:00.965 +02:00]
[2025/05/12 00:33:40.810 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:33:40.810 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:33:40.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:41.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:41.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:41.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:41.759 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4b9fab8f3a476954] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:41.774 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:41.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:42.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:42.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:42.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:42.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:42.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:42.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:42.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:43.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:43.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:43.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:43.786 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966308177215489] [tSafe_p=2025/05/12 00:33:43.552 +02:00] [tsLag=234.1577ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:33:43.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:43.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:44.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:44.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:44.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:44.754 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5040331208c2dbb5] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:44.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:44.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:45.191 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:45.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:45.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:45.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:45.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:45.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:45.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:46.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:46.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:46.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:46.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:46.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:47.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:47.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:47.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:47.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4d3bb9ff1449e275] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:47.767 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=89] ["total memory"=9946] ["next GC"=97] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747002827767867500]
[2025/05/12 00:33:47.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:47.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:48.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:48.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:48.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:48.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:48.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:48.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:48.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:48.995 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=570c3d5e5ea91e79] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:33:48.996 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=570c3d5e5ea91e79] [role=proxy] [MsgID=457966309595938818] [BeginTS=457966309595938818] [EndTS=457966309595938818] [db=default] [collection=rag_collection]
[2025/05/12 00:33:48.996 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=570c3d5e5ea91e79] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966309595938818] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:33:48.996 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=570c3d5e5ea91e79] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966309595938818] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:33:48.996 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=570c3d5e5ea91e79] [role=proxy] [MsgID=457966309595938818] [BeginTS=457966309595938818] [EndTS=457966309595938818] [db=default] [collection=rag_collection]
[2025/05/12 00:33:48.997 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=34a5a8772c465c59] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:33:48.997 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=34a5a8772c465c59] [role=proxy] [MsgID=457966309595938820] [BeginTS=457966309595938820] [EndTS=457966309595938820] [db=default] [collection=rag_collection]
[2025/05/12 00:33:48.998 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=34a5a8772c465c59] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966309595938820] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:33:48.998 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=34a5a8772c465c59] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966309595938820] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:33:48.998 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=34a5a8772c465c59] [role=proxy] [MsgID=457966309595938820] [BeginTS=457966309595938820] [EndTS=457966309595938820] [db=default] [collection=rag_collection]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=598fa1f1be648bb6] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=598fa1f1be648bb6] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=598fa1f1be648bb6] [role=proxy] [msgID=457966309595938822] [timestamp=457966309595938822] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] ["output fields"="[emb,source_path,chunk_id,chunk_preview,chunk_text]"]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:33:49.000 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [travel_ts=18446744073709551615] [guarantee_ts=457966308285218822] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:33:49.000 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:33:49.001 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966308285218822] [timeTravel=18446744073709551615]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:33:43.964 +02:00] [serviceTime=2025/05/12 00:33:48.717 +02:00] ["delta milliseconds"=-4753] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966309595938822]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=598fa1f1be648bb6] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:33:49.001 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=598fa1f1be648bb6] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=598fa1f1be648bb6] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=0s]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=598fa1f1be648bb6] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=0s]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=598fa1f1be648bb6] [msg="search done in all shards"] [duration=0s]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=598fa1f1be648bb6]
[2025/05/12 00:33:49.001 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966309595938822"] [traceID=598fa1f1be648bb6] [msg=done] [duration=1.0074ms]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=598fa1f1be648bb6] [sourceID=0] [msgID=457966309595938822]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=598fa1f1be648bb6] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=598fa1f1be648bb6] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822] ["number of valid search results"=1]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=598fa1f1be648bb6] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=598fa1f1be648bb6] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=598fa1f1be648bb6] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=598fa1f1be648bb6] [count=0]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=598fa1f1be648bb6] [msg=done] [duration=0s]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=598fa1f1be648bb6] [msgID=457966309595938822]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=598fa1f1be648bb6] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916813, 457665900034916833, 457665900034916861, 457665900034916805, 457665900034916823, 457665900034916827, 457665900034916809, 457665900034916825, 457665900034916845, 457665900034916811, 457665900034916799, 457665900034916815, 457665900034916801, 457665900034916789, 457665900034916807, 457665900034916847, 457665900034916795, 457665900034916849, 457665900034916851, 457665900034916857, 457665900034916835, 457665900034916819, 457665900034916821, 457665900034916863, 457665900034916865, 457665900034916853, 457665900034916841, 457665900034916829, 457665900034916843, 457665900034916859, 457665900034916817, 457665900034916793, 457665900034916803, 457665900034916791, 457665900034916787, 457665900034916839, 457665900034916855, 457665900034916831 ]"] [OutputFields="[emb,source_path,chunk_id,chunk_preview,chunk_text]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=598fa1f1be648bb6] [msg="query request enqueue"] [duration=0s]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=598fa1f1be648bb6] [role=proxy] [msgID=457966309605900289] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=598fa1f1be648bb6] [collectionName=rag_collection] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=598fa1f1be648bb6] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.002 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.004 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=598fa1f1be648bb6] [collectionName=rag_collection] [msgID=457966309605900289] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:33:49.004 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=598fa1f1be648bb6] [OutputFields="[chunk_id,chunk_preview,chunk_text,id,emb,source_path]"] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.004 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=598fa1f1be648bb6] [OutputFieldsID="[103,105,104,100,101,102,1]"] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.004 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [requestType=query] [guarantee_ts=1] [travel_ts=457966309605900289] [timeout_ts=0]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966309605900289] [partitionIDs="[]"]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966309605900289]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:33:48.717 +02:00] ["delta milliseconds"=-1747002828717] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966309605900289]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=598fa1f1be648bb6] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:33:49.005 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966309605900289] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:33:49.006 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=598fa1f1be648bb6] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:33:49.006 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=598fa1f1be648bb6] [msg="start reduce query result, msgID = 457966309605900289, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=994.5µs]
[2025/05/12 00:33:49.006 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=598fa1f1be648bb6] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:33:49.006 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=598fa1f1be648bb6] [msg="do query done, msgID = 457966309605900289, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=994.5µs]
[2025/05/12 00:33:49.006 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=598fa1f1be648bb6] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966309605900289"] [traceID=598fa1f1be648bb6] [msg=done] [duration=3.0001ms]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=598fa1f1be648bb6] [msgID=457966309605900289]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=598fa1f1be648bb6] [sourceID=0] [msgID=457966309605900289]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=598fa1f1be648bb6] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:33:49.007 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=598fa1f1be648bb6] [len(retrieveResults)=1]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=598fa1f1be648bb6] [msgID=457966309605900289] [requestType=query]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=598fa1f1be648bb6] [msg=done] [duration=1.0002ms]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=598fa1f1be648bb6] [msg="wait query result"] [duration=6.0003ms]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=598fa1f1be648bb6] [role=proxy] [msgID=457966309605900289] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=598fa1f1be648bb6] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=598fa1f1be648bb6] [msg=done] [duration=6.0003ms]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=598fa1f1be648bb6] [msg="wait search result"] [duration=8.0076ms]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=598fa1f1be648bb6] [msg="wait search result"] [duration=0s]
[2025/05/12 00:33:49.008 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=598fa1f1be648bb6] [role=proxy] [msgID=457966309595938822] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[emb,source_path,chunk_id,chunk_preview,chunk_text]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:33:49.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:49.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:49.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:49.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:49.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:50.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:50.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:50.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:50.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1dadd588e50d474b] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:50.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:50.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:51.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:51.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:51.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:51.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:51.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:51.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:51.991 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:52.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:52.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:52.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:52.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:52.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:53.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:53.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:53.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:53.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1e16d5b9e10b8ecc] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:53.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:53.781 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966310788956162] [tSafe_p=2025/05/12 00:33:53.515 +02:00] [tsLag=266.0977ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:33:53.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:54.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:54.374 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:54.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:54.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:54.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:54.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:54.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:55.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:55.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:55.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:55.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:55.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:56.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:56.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:56.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:56.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=59a99e215fc9528d] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:56.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:56.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:57.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:57.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:57.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:57.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:33:57.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:33:57.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:57.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:58.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:58.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:58.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:58.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:58.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:33:58.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:33:58.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:59.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:59.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:59.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:59.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7c29ef78a0893722] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:33:59.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:33:59.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:00.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:00.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:00.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:00.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:00.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:00.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:00.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:01.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:01.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:01.381 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966312793047041] [time=2025/05/12 00:34:01.160 +02:00]
[2025/05/12 00:34:01.381 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966312793047041] [cpTime=2025/05/12 00:34:01.160 +02:00]
[2025/05/12 00:34:01.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:01.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:01.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:02.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:02.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:02.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:02.766 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=644d1da3cbec33c7] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:02.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:02.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:03.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:03.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:03.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:03.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:03.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:03.780 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966313447358465] [tSafe_p=2025/05/12 00:34:03.656 +02:00] [tsLag=124.2105ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:34:03.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:03.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:04.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:04.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:04.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:04.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:04.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:05.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:05.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:05.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:05.760 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7f0f01d7319552f] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:05.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:05.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:06.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:06.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:06.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:06.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:06.789 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:06.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:06.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:07.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:07.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:07.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:07.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:07.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:08.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:08.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:08.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:08.754 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=58e95f52a485363c] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:08.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:08.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:09.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:09.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:09.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:09.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:09.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:09.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:09.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:10.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:10.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:10.579 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=5fbc964313b6ea75] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:34:10.580 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=5fbc964313b6ea75] [role=proxy] [MsgID=457966315258249218] [BeginTS=457966315258249218] [EndTS=457966315258249218] [db=default] [collection=rag_collection]
[2025/05/12 00:34:10.580 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=5fbc964313b6ea75] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966315258249218] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:34:10.580 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=5fbc964313b6ea75] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966315258249218] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:34:10.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:10.580 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=5fbc964313b6ea75] [role=proxy] [MsgID=457966315258249218] [BeginTS=457966315258249218] [EndTS=457966315258249218] [db=default] [collection=rag_collection]
[2025/05/12 00:34:10.582 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=ac9396fedfa654b] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:34:10.582 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=ac9396fedfa654b] [role=proxy] [MsgID=457966315258249220] [BeginTS=457966315258249220] [EndTS=457966315258249220] [db=default] [collection=rag_collection]
[2025/05/12 00:34:10.582 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=ac9396fedfa654b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966315258249220] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:34:10.582 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=ac9396fedfa654b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966315258249220] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:34:10.582 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=ac9396fedfa654b] [role=proxy] [MsgID=457966315258249220] [BeginTS=457966315258249220] [EndTS=457966315258249220] [db=default] [collection=rag_collection]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=69659f392fba30ef] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=69659f392fba30ef] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=69659f392fba30ef] [role=proxy] [msgID=457966315258249222] [timestamp=457966315258249222] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=69659f392fba30ef] [msgID=457966315258249222] ["output fields"="[chunk_preview,chunk_text,emb,source_path,chunk_id]"]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=69659f392fba30ef] [msgID=457966315258249222] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=69659f392fba30ef] [msgID=457966315258249222] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=69659f392fba30ef] [msgID=457966315258249222] [travel_ts=18446744073709551615] [guarantee_ts=457966313947529222] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:34:10.584 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:34:10.584 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=69659f392fba30ef] [msgID=457966315258249222] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966313947529222] [timeTravel=18446744073709551615]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=69659f392fba30ef] [msgID=457966315258249222] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:34:05.564 +02:00] [serviceTime=2025/05/12 00:34:10.456 +02:00] ["delta milliseconds"=-4892] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966315258249222]
[2025/05/12 00:34:10.584 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=69659f392fba30ef] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=69659f392fba30ef] [msgID=457966315258249222] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=69659f392fba30ef] [msgID=457966315258249222] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:34:10.585 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=69659f392fba30ef] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=69659f392fba30ef] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.505ms]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=69659f392fba30ef] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.505ms]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=69659f392fba30ef] [msg="search done in all shards"] [duration=1.505ms]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=69659f392fba30ef]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966315258249222"] [traceID=69659f392fba30ef] [msg=done] [duration=1.505ms]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=69659f392fba30ef] [msgID=457966315258249222]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=69659f392fba30ef] [sourceID=0] [msgID=457966315258249222]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=69659f392fba30ef] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=69659f392fba30ef] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=69659f392fba30ef] [msgID=457966315258249222] ["number of valid search results"=1]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=69659f392fba30ef] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=69659f392fba30ef] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=69659f392fba30ef] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=69659f392fba30ef] [count=0]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=69659f392fba30ef] [msg=done] [duration=0s]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=69659f392fba30ef] [msgID=457966315258249222]
[2025/05/12 00:34:10.585 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=69659f392fba30ef] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916813, 457665900034916833, 457665900034916805, 457665900034916861, 457665900034916823, 457665900034916827, 457665900034916809, 457665900034916825, 457665900034916845, 457665900034916815, 457665900034916811, 457665900034916799, 457665900034916801, 457665900034916807, 457665900034916847, 457665900034916865, 457665900034916789, 457665900034916849, 457665900034916821, 457665900034916863, 457665900034916851, 457665900034916857, 457665900034916795, 457665900034916841, 457665900034916829, 457665900034916835, 457665900034916819, 457665900034916853, 457665900034916843, 457665900034916793, 457665900034916859, 457665900034916817, 457665900034916803, 457665900034916791, 457665900034916855, 457665900034916839, 457665900034916787, 457665900034916831 ]"] [OutputFields="[chunk_preview,chunk_text,emb,source_path,chunk_id]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:34:10.586 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=69659f392fba30ef] [msg="query request enqueue"] [duration=1.0053ms]
[2025/05/12 00:34:10.586 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=69659f392fba30ef] [collectionName=rag_collection] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.586 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=69659f392fba30ef] [role=proxy] [msgID=457966315258249223] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:34:10.586 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=69659f392fba30ef] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.586 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=69659f392fba30ef] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.587 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=69659f392fba30ef] [collectionName=rag_collection] [msgID=457966315258249223] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:34:10.587 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=69659f392fba30ef] [OutputFields="[emb,source_path,chunk_id,id,chunk_preview,chunk_text]"] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.587 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=69659f392fba30ef] [OutputFieldsID="[101,102,103,100,105,104,1]"] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.587 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=69659f392fba30ef] [msgID=457966315258249223] [requestType=query] [guarantee_ts=1] [travel_ts=457966315258249223] [timeout_ts=0]
[2025/05/12 00:34:10.587 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=69659f392fba30ef] [msgID=457966315258249223] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966315258249223] [partitionIDs="[]"]
[2025/05/12 00:34:10.588 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=69659f392fba30ef] [msgID=457966315258249223] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966315258249223]
[2025/05/12 00:34:10.588 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=69659f392fba30ef] [msgID=457966315258249223] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:34:10.588 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:34:10.456 +02:00] ["delta milliseconds"=-1747002850456] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966315258249223]
[2025/05/12 00:34:10.588 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:34:10.588 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=69659f392fba30ef] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:34:10.588 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966315258249223] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:34:10.589 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=69659f392fba30ef] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:34:10.589 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=69659f392fba30ef] [msg="start reduce query result, msgID = 457966315258249223, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0015ms]
[2025/05/12 00:34:10.589 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=69659f392fba30ef] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:34:10.589 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=69659f392fba30ef] [msg="do query done, msgID = 457966315258249223, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0015ms]
[2025/05/12 00:34:10.589 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=69659f392fba30ef] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=69659f392fba30ef] [msgID=457966315258249223] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=69659f392fba30ef] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966315258249223"] [traceID=69659f392fba30ef] [msg=done] [duration=3.0001ms]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=69659f392fba30ef] [msgID=457966315258249223]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=69659f392fba30ef] [sourceID=0] [msgID=457966315258249223]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=69659f392fba30ef] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=69659f392fba30ef] [len(retrieveResults)=1]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=69659f392fba30ef] [msgID=457966315258249223] [requestType=query]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=69659f392fba30ef] [msg=done] [duration=0s]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=69659f392fba30ef] [msg="wait query result"] [duration=4.0008ms]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=69659f392fba30ef] [role=proxy] [msgID=457966315258249223] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=69659f392fba30ef] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=69659f392fba30ef] [msg=done] [duration=5.0061ms]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=69659f392fba30ef] [msg="wait search result"] [duration=6.5111ms]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=69659f392fba30ef] [msg="wait search result"] [duration=0s]
[2025/05/12 00:34:10.590 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=69659f392fba30ef] [role=proxy] [msgID=457966315258249222] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[chunk_preview,chunk_text,emb,source_path,chunk_id]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:34:10.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:10.814 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:34:10.814 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:34:10.814 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:34:10.814 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:34:10.814 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:10.814 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:10.814 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:10.814 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=161161ae4c6fd5a0] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:34:10.814 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=161161ae4c6fd5a0] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:34:10.815 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:34:10.815 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966312793047041] [posTime=2025/05/12 00:34:01.160 +02:00]
[2025/05/12 00:34:10.815 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:34:10.815 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:34:10.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:11.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:11.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:11.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:11.766 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7ba30e4334fc40ef] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:11.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:11.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:12.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:12.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:12.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:12.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:12.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:12.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:12.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:13.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:13.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:13.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:13.775 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966316043108353] [tSafe_p=2025/05/12 00:34:13.558 +02:00] [tsLag=217.9472ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:34:13.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:13.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:14.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:14.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:14.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:14.758 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=60c83f1d390de3cf] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:14.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:14.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:15.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:15.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:15.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:15.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:15.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:15.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:15.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:16.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:16.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:16.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:16.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:16.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:17.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:17.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:17.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:17.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6ed6e41c65daa714] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:17.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:17.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:18.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:18.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:18.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:18.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:18.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:18.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:18.810 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:34:18.810 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:34:18.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:19.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:19.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:19.591 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:19.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:19.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:20.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:20.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:20.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:20.761 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6fdacb06f65a09a] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:20.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:20.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:21.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:21.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:21.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:21.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:21.789 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:21.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:21.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:22.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:22.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:22.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:22.791 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:23.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:23.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:23.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:23.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:23.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=57be81633d41acf0] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:23.788 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966318692073473] [tSafe_p=2025/05/12 00:34:23.663 +02:00] [tsLag=125.0756ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:34:23.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:23.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:24.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:24.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:24.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:24.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:24.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:24.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:24.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:25.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:25.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:25.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:25.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:25.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:26.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:26.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:26.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:26.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1370a729f894e777] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:26.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:26.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:27.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:27.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:27.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:27.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:27.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:27.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:27.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:28.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:28.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:28.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:28.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:28.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:29.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:29.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:29.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:29.759 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7cba7b5ee9f9bd0a] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:29.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:29.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:30.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:30.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:30.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:30.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:30.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:30.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:30.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:31.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:31.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:31.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:31.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:31.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:32.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:32.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:32.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:32.759 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=77947a9bd91cfb97] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:32.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:32.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:33.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:33.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:33.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:33.772 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:33.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:33.789 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966321313513473] [tSafe_p=2025/05/12 00:34:33.663 +02:00] [tsLag=126.1614ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:34:33.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:33.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:34.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:34.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:34.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:34.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:34.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:35.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:35.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:35.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:35.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6d35c2811bbe8dbe] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:35.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:35.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:36.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:36.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:36.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:36.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:36.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:36.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:36.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:37.174 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:37.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:37.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:37.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:37.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:38.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:38.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:38.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:38.763 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5067104dd56fb4a6] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:38.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:38.824 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:34:38.824 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:34:38.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:39.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:39.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:39.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:39.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:39.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:39.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:39.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:40.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:40.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:40.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:40.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:40.808 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:34:40.808 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:34:40.808 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:34:40.808 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:34:40.808 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:40.808 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:40.808 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:34:40.808 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=4df073a0a17bd886] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:34:40.808 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=4df073a0a17bd886] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:34:40.809 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:34:40.809 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966312793047041] [posTime=2025/05/12 00:34:01.160 +02:00]
[2025/05/12 00:34:40.809 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:34:40.809 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:34:40.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:41.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:41.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:41.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:41.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4eca95643ce95f17] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:41.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:41.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:42.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:42.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:42.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:42.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:42.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:42.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:42.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:43.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:43.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:43.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:43.781 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966323933642753] [tSafe_p=2025/05/12 00:34:43.658 +02:00] [tsLag=123.9196ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:34:43.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:43.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:44.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:44.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:44.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:44.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3dbeac698f5a7da7] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:44.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:44.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:45.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:45.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:45.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:45.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:45.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:45.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:45.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:46.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:46.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:46.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:46.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:46.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:47.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:47.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:47.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:47.752 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=38a9ce8766e00a7e] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:47.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:47.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:48.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:48.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:48.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:48.781 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:48.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:48.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:48.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:49.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:49.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:49.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:49.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:49.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:50.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:50.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:50.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:50.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=54bff0a8590d0b01] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:50.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:50.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:51.174 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:51.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:51.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:51.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:51.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:51.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:51.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:52.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:52.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:52.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:52.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:53.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:53.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:53.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:53.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:53.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=214b206c7a392da6] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:53.785 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966326514712577] [tSafe_p=2025/05/12 00:34:53.504 +02:00] [tsLag=281.7972ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:34:53.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:53.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:54.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:54.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:54.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:54.769 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:54.785 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:54.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:54.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:55.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:55.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:55.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:55.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:55.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:56.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:56.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:56.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:56.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=d6b41958deec565] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:56.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:56.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:57.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:57.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:57.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:57.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:34:57.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:34:57.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:57.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:58.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:58.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:58.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:58.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:58.812 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:34:58.812 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:34:58.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:59.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:59.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:59.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:59.765 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2343affd09b0c8b9] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:34:59.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:34:59.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:00.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:00.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:00.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:00.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:00.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:00.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:00.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:01.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:01.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:01.383 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966328547639297] [time=2025/05/12 00:35:01.259 +02:00]
[2025/05/12 00:35:01.384 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966328547639297] [cpTime=2025/05/12 00:35:01.259 +02:00]
[2025/05/12 00:35:01.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:01.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:01.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:02.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:02.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:02.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:02.753 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5048d66166f7b3fb] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:02.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:02.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:03.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:03.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:03.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:03.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:03.784 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:03.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:03.784 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966329176784897] [tSafe_p=2025/05/12 00:35:03.659 +02:00] [tsLag=125.6811ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:35:03.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:04.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:04.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:04.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:04.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:04.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:05.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:05.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:05.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:05.754 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6543f44c610b0f89] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:05.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:05.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:06.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:06.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:06.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:06.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:06.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:06.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:06.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:07.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:07.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:07.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:07.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:08.023 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:08.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:08.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:08.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:08.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6041a16079aa1d62] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:08.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:08.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:09.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:09.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:09.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:09.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:09.784 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:09.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:09.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:10.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:10.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:10.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:10.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:10.812 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:35:10.812 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:35:10.812 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:35:10.812 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:35:10.812 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:10.812 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:10.812 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:10.813 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=770194c54507b126] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:35:10.813 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=770194c54507b126] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:35:10.813 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:35:10.813 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966328547639297] [posTime=2025/05/12 00:35:01.259 +02:00]
[2025/05/12 00:35:10.813 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:35:10.814 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:35:10.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:11.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:11.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:11.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:11.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=43c3bc8a2a787cc1] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:11.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:11.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:12.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:12.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:12.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:12.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:12.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:12.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:12.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:13.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:13.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:13.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:13.788 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966331799535617] [tSafe_p=2025/05/12 00:35:13.664 +02:00] [tsLag=124.6255ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:35:13.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:13.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:14.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:14.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:14.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:14.766 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=199e12e78ca59719] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:14.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:14.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:15.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:15.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:15.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:15.781 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:15.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:15.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:15.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:16.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:16.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:16.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:16.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:16.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:17.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:17.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:17.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:17.760 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6ad9b95de22d3e3f] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:17.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:17.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:18.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:18.184 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=86] ["total memory"=10163] ["next GC"=97] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747002918184773000]
[2025/05/12 00:35:18.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:18.591 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:18.778 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:18.778 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:18.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:18.825 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:35:18.825 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:35:18.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:19.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:19.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:19.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:19.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:19.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:20.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:20.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:20.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:20.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=a4d13aa453febf7] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:20.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:20.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:21.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:21.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:21.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:21.774 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:21.774 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:21.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:21.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:22.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:22.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:22.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:22.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:22.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:23.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:23.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:23.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:23.754 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=12e51c5f0ef2c4c1] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:23.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:23.786 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966334395809793] [tSafe_p=2025/05/12 00:35:23.568 +02:00] [tsLag=218.4379ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:35:23.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:24.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:24.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:24.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:24.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:24.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:24.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:24.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:25.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:25.339 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=57c95665deccdb5b] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:35:25.339 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=57c95665deccdb5b] [role=proxy] [MsgID=457966334852726785] [BeginTS=457966334852726785] [EndTS=457966334852726785] [db=default] [collection=rag_collection]
[2025/05/12 00:35:25.339 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=57c95665deccdb5b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966334852726785] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:35:25.339 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=57c95665deccdb5b] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966334852726785] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:35:25.340 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=57c95665deccdb5b] [role=proxy] [MsgID=457966334852726785] [BeginTS=457966334852726785] [EndTS=457966334852726785] [db=default] [collection=rag_collection]
[2025/05/12 00:35:25.341 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=372b86b884bf633c] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:35:25.341 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=372b86b884bf633c] [role=proxy] [MsgID=457966334852726787] [BeginTS=457966334852726787] [EndTS=457966334852726787] [db=default] [collection=rag_collection]
[2025/05/12 00:35:25.341 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=372b86b884bf633c] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966334852726787] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:35:25.341 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=372b86b884bf633c] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966334852726787] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:35:25.341 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=372b86b884bf633c] [role=proxy] [MsgID=457966334852726787] [BeginTS=457966334852726787] [EndTS=457966334852726787] [db=default] [collection=rag_collection]
[2025/05/12 00:35:25.343 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=498ac15c64e699dc] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:25.343 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=498ac15c64e699dc] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:35:25.343 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=498ac15c64e699dc] [role=proxy] [msgID=457966334852726789] [timestamp=457966334852726789] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:25.343 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] ["output fields"="[source_path,chunk_id,chunk_preview,chunk_text,emb]"]
[2025/05/12 00:35:25.343 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [travel_ts=18446744073709551615] [guarantee_ts=457966333542006789] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:35:25.344 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:35:25.344 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966333542006789] [timeTravel=18446744073709551615]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:35:20.311 +02:00] [serviceTime=2025/05/12 00:35:25.063 +02:00] ["delta milliseconds"=-4752] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966334852726789]
[2025/05/12 00:35:25.344 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=498ac15c64e699dc] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:35:25.345 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=498ac15c64e699dc] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=498ac15c64e699dc] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=624.6µs]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=498ac15c64e699dc] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=624.6µs]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=498ac15c64e699dc] [msg="search done in all shards"] [duration=1.1469ms]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=498ac15c64e699dc]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966334852726789"] [traceID=498ac15c64e699dc] [msg=done] [duration=1.6794ms]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=498ac15c64e699dc] [msgID=457966334852726789]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=498ac15c64e699dc] [sourceID=0] [msgID=457966334852726789]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=498ac15c64e699dc] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=498ac15c64e699dc] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=498ac15c64e699dc] [msgID=457966334852726789] ["number of valid search results"=1]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=498ac15c64e699dc] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=498ac15c64e699dc] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=498ac15c64e699dc] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=498ac15c64e699dc] [count=0]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=498ac15c64e699dc] [msg=done] [duration=0s]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=498ac15c64e699dc] [msgID=457966334852726789]
[2025/05/12 00:35:25.345 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=498ac15c64e699dc] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916813, 457665900034916833, 457665900034916805, 457665900034916861, 457665900034916823, 457665900034916827, 457665900034916809, 457665900034916825, 457665900034916845, 457665900034916815, 457665900034916811, 457665900034916799, 457665900034916801, 457665900034916789, 457665900034916807, 457665900034916847, 457665900034916849, 457665900034916795, 457665900034916835, 457665900034916821, 457665900034916857, 457665900034916851, 457665900034916865, 457665900034916819, 457665900034916853, 457665900034916863, 457665900034916841, 457665900034916829, 457665900034916843, 457665900034916859, 457665900034916817, 457665900034916793, 457665900034916803, 457665900034916791, 457665900034916787, 457665900034916839, 457665900034916855, 457665900034916831 ]"] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:25.346 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=498ac15c64e699dc] [msg="query request enqueue"] [duration=558.3µs]
[2025/05/12 00:35:25.346 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=498ac15c64e699dc] [role=proxy] [msgID=457966334852726790] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:35:25.346 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=498ac15c64e699dc] [collectionName=rag_collection] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.346 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=498ac15c64e699dc] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.346 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=498ac15c64e699dc] [collectionName=rag_collection] [msgID=457966334852726790] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=498ac15c64e699dc] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb,id]"] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=498ac15c64e699dc] [OutputFieldsID="[102,103,105,104,101,100,1]"] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [requestType=query] [guarantee_ts=1] [travel_ts=457966334852726790] [timeout_ts=0]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966334852726790] [partitionIDs="[]"]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966334852726790]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:35:25.063 +02:00] ["delta milliseconds"=-1747002925063] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966334852726790]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:35:25.348 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=498ac15c64e699dc] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:35:25.349 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966334852726790] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:35:25.349 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=498ac15c64e699dc] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:35:25.349 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=498ac15c64e699dc] [msg="start reduce query result, msgID = 457966334852726790, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0647ms]
[2025/05/12 00:35:25.349 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=498ac15c64e699dc] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:35:25.349 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=498ac15c64e699dc] [msg="do query done, msgID = 457966334852726790, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0647ms]
[2025/05/12 00:35:25.349 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=498ac15c64e699dc] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966334852726790"] [traceID=498ac15c64e699dc] [msg=done] [duration=2.1159ms]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=498ac15c64e699dc] [msgID=457966334852726790]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=498ac15c64e699dc] [sourceID=0] [msgID=457966334852726790]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=498ac15c64e699dc] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=498ac15c64e699dc] [len(retrieveResults)=1]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=498ac15c64e699dc] [msgID=457966334852726790] [requestType=query]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=498ac15c64e699dc] [msg=done] [duration=0s]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=498ac15c64e699dc] [msg="wait query result"] [duration=4.2777ms]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=498ac15c64e699dc] [role=proxy] [msgID=457966334852726790] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:35:25.350 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=498ac15c64e699dc] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:25.351 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=498ac15c64e699dc] [msg=done] [duration=5.3496ms]
[2025/05/12 00:35:25.351 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=498ac15c64e699dc] [msg="wait search result"] [duration=7.7944ms]
[2025/05/12 00:35:25.351 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=498ac15c64e699dc] [msg="wait search result"] [duration=0s]
[2025/05/12 00:35:25.351 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=498ac15c64e699dc] [role=proxy] [msgID=457966334852726789] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:25.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:25.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:25.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:25.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:26.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:26.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:26.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:26.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1bf0c1c86009cf52] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:26.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:26.991 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:27.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:27.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:27.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:27.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:27.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:27.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:27.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:28.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:28.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:28.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:28.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:28.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:29.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:29.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:29.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:29.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=57a25f57aab740e0] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:29.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:29.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:30.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:30.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:30.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:30.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:30.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:30.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:30.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:31.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:31.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:31.591 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:31.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:31.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:32.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:32.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:32.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:32.760 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=36d72fa7d1619e] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:32.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:32.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:33.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:33.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:33.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:33.772 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:33.773 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:33.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:33.788 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966337042153473] [tSafe_p=2025/05/12 00:35:33.663 +02:00] [tsLag=125.9888ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:35:33.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:34.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:34.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:34.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:34.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:34.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:35.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:35.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:35.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:35.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=635a973e41b2a7a0] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:35.754 +02:00] [INFO] [rootcoord/import_manager.go:178] ["(in cleanupLoop) trying to expire old tasks from memory and Etcd"]
[2025/05/12 00:35:35.756 +02:00] [INFO] [rootcoord/import_manager.go:181] ["(in cleanupLoop) start removing bad import segments"]
[2025/05/12 00:35:35.756 +02:00] [INFO] [rootcoord/import_manager.go:183] ["(in cleanupLoop) start cleaning hanging busy DataNode"]
[2025/05/12 00:35:35.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:35.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:36.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:36.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:36.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:36.768 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:36.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:36.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:36.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:37.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:37.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:37.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:37.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:37.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:38.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:38.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:38.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:38.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=328e9f20aa27154c] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:38.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:38.811 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:35:38.811 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:35:38.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:39.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:39.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:39.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:39.779 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:39.779 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:39.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:39.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:40.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:40.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:40.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:40.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:40.808 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:35:40.808 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:35:40.808 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:35:40.808 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:35:40.808 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:40.808 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:40.809 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:40.809 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=601f7109061a883] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:35:40.809 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=601f7109061a883] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:35:40.810 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:35:40.810 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966328547639297] [posTime=2025/05/12 00:35:01.259 +02:00]
[2025/05/12 00:35:40.810 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:35:40.810 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:35:40.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:41.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:41.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:41.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:41.758 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=581d85de1380c7ff] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:41.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:41.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:42.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:42.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:42.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:42.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:42.787 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:42.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:42.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:43.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:43.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:43.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:43.784 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966339662544897] [tSafe_p=2025/05/12 00:35:43.659 +02:00] [tsLag=125.0264ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:35:43.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:43.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:44.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:44.375 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:44.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:44.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=33014185d7f8957a] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:44.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:44.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:45.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:45.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:45.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:45.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:45.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:45.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:45.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:46.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:46.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:46.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:46.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:46.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:47.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:47.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:47.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:47.760 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=153b7d0218a658ad] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:47.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:47.980 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:48.183 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:48.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:48.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:48.773 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:48.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:48.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:48.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:49.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:49.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:49.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:49.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:49.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:50.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:50.243 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=fd49ddd22b72d6c] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:35:50.243 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=fd49ddd22b72d6c] [role=proxy] [MsgID=457966341380112385] [BeginTS=457966341380112385] [EndTS=457966341380112385] [db=default] [collection=rag_collection]
[2025/05/12 00:35:50.243 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=fd49ddd22b72d6c] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966341380112385] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:35:50.243 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=fd49ddd22b72d6c] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966341380112385] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:35:50.243 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=fd49ddd22b72d6c] [role=proxy] [MsgID=457966341380112385] [BeginTS=457966341380112385] [EndTS=457966341380112385] [db=default] [collection=rag_collection]
[2025/05/12 00:35:50.244 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=39836051ecc4745e] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:35:50.245 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=39836051ecc4745e] [role=proxy] [MsgID=457966341380112387] [BeginTS=457966341380112387] [EndTS=457966341380112387] [db=default] [collection=rag_collection]
[2025/05/12 00:35:50.245 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=39836051ecc4745e] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966341380112387] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:35:50.245 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=39836051ecc4745e] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966341380112387] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:35:50.245 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=39836051ecc4745e] [role=proxy] [MsgID=457966341380112387] [BeginTS=457966341380112387] [EndTS=457966341380112387] [db=default] [collection=rag_collection]
[2025/05/12 00:35:50.246 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=47c08775fb9a62d0] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:50.246 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=47c08775fb9a62d0] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:35:50.246 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=47c08775fb9a62d0] [role=proxy] [msgID=457966341380112389] [timestamp=457966341380112389] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:50.246 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] ["output fields"="[source_path,chunk_id,chunk_preview,chunk_text,emb]"]
[2025/05/12 00:35:50.246 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [travel_ts=18446744073709551615] [guarantee_ts=457966340069392389] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:35:50.248 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:35:50.248 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966340069392389] [timeTravel=18446744073709551615]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:35:45.211 +02:00] [serviceTime=2025/05/12 00:35:49.915 +02:00] ["delta milliseconds"=-4704] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966341380112389]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=47c08775fb9a62d0] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:35:50.248 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:35:50.249 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=47c08775fb9a62d0] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=47c08775fb9a62d0] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0061ms]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=47c08775fb9a62d0] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.0061ms]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=47c08775fb9a62d0] [msg="search done in all shards"] [duration=1.0061ms]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=47c08775fb9a62d0]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966341380112389"] [traceID=47c08775fb9a62d0] [msg=done] [duration=1.0061ms]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=47c08775fb9a62d0] [sourceID=0] [msgID=457966341380112389]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=47c08775fb9a62d0] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=47c08775fb9a62d0] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389] ["number of valid search results"=1]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=47c08775fb9a62d0] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=47c08775fb9a62d0] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=47c08775fb9a62d0] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=47c08775fb9a62d0] [count=0]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=47c08775fb9a62d0] [msg=done] [duration=0s]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=47c08775fb9a62d0] [msgID=457966341380112389]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=47c08775fb9a62d0] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916813, 457665900034916833, 457665900034916805, 457665900034916861, 457665900034916823, 457665900034916827, 457665900034916809, 457665900034916825, 457665900034916845, 457665900034916815, 457665900034916811, 457665900034916799, 457665900034916801, 457665900034916789, 457665900034916807, 457665900034916847, 457665900034916849, 457665900034916795, 457665900034916835, 457665900034916821, 457665900034916857, 457665900034916851, 457665900034916865, 457665900034916819, 457665900034916853, 457665900034916863, 457665900034916841, 457665900034916829, 457665900034916843, 457665900034916859, 457665900034916817, 457665900034916793, 457665900034916803, 457665900034916791, 457665900034916787, 457665900034916839, 457665900034916855, 457665900034916831 ]"] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=47c08775fb9a62d0] [msg="query request enqueue"] [duration=0s]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=47c08775fb9a62d0] [role=proxy] [msgID=457966341380112390] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=47c08775fb9a62d0] [collectionName=rag_collection] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=47c08775fb9a62d0] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.249 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=47c08775fb9a62d0] [collectionName=rag_collection] [msgID=457966341380112390] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=47c08775fb9a62d0] [OutputFields="[chunk_text,emb,id,source_path,chunk_id,chunk_preview]"] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=47c08775fb9a62d0] [OutputFieldsID="[104,101,100,102,103,105,1]"] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [requestType=query] [guarantee_ts=1] [travel_ts=457966341380112390] [timeout_ts=0]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966341380112390] [partitionIDs="[]"]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966341380112390]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:35:49.915 +02:00] ["delta milliseconds"=-1747002949915] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966341380112390]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:35:50.251 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=47c08775fb9a62d0] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:35:50.252 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966341380112390] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:35:50.252 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=47c08775fb9a62d0] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:35:50.253 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=47c08775fb9a62d0] [msg="start reduce query result, msgID = 457966341380112390, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.9992ms]
[2025/05/12 00:35:50.253 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=47c08775fb9a62d0] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:35:50.253 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=47c08775fb9a62d0] [msg="do query done, msgID = 457966341380112390, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=1.9992ms]
[2025/05/12 00:35:50.253 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=47c08775fb9a62d0] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [nodeID=78] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966341380112390"] [traceID=47c08775fb9a62d0] [msg=done] [duration=2.9984ms]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=47c08775fb9a62d0] [msgID=457966341380112390]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=47c08775fb9a62d0] [sourceID=0] [msgID=457966341380112390]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=47c08775fb9a62d0] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=47c08775fb9a62d0] [len(retrieveResults)=1]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=47c08775fb9a62d0] [msgID=457966341380112390] [requestType=query]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=47c08775fb9a62d0] [msg=done] [duration=0s]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=47c08775fb9a62d0] [msg="wait query result"] [duration=5.0003ms]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=47c08775fb9a62d0] [role=proxy] [msgID=457966341380112390] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=47c08775fb9a62d0] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=47c08775fb9a62d0] [msg=done] [duration=5.0003ms]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=47c08775fb9a62d0] [msg="wait search result"] [duration=7.5127ms]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=47c08775fb9a62d0] [msg="wait search result"] [duration=0s]
[2025/05/12 00:35:50.254 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=47c08775fb9a62d0] [role=proxy] [msgID=457966341380112389] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:35:50.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:50.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:50.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=78098a91d8a21e1b] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:50.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:50.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:51.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:51.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:51.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:51.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:51.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:51.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:51.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:52.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:52.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:52.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:52.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:52.991 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:53.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:53.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:53.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:53.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1bf88b853507e644] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:53.782 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966342246760449] [tSafe_p=2025/05/12 00:35:53.517 +02:00] [tsLag=265.7669ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:35:53.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:53.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:54.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:54.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:54.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:54.781 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:54.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:54.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:54.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:55.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:55.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:55.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:55.781 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:55.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:56.187 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:56.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:56.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:56.764 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1203c8def965f081] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:56.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:56.982 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:57.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:57.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:57.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:57.777 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:35:57.777 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:35:57.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:57.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:58.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:58.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:58.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:58.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:58.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:35:58.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:35:58.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:59.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:59.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:59.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:59.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=54633e2d40252170] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:35:59.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:35:59.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:00.190 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:00.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:00.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:00.782 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:00.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:00.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:00.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:01.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:01.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:01.577 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:01.579 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966344330543105] [time=2025/05/12 00:36:01.466 +02:00]
[2025/05/12 00:36:01.579 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966344330543105] [cpTime=2025/05/12 00:36:01.466 +02:00]
[2025/05/12 00:36:01.778 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:01.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:02.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:02.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:02.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:02.760 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=11f9167eb2c28c95] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:02.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:02.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:03.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:03.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:03.588 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:03.773 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:03.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:03.789 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966344906997761] [tSafe_p=2025/05/12 00:36:03.665 +02:00] [tsLag=124.6823ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:36:03.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:03.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:04.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:04.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:04.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:04.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:04.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:05.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:05.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:05.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:05.754 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5369ecab12c7260c] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:05.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:05.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:06.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:06.376 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:06.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:06.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:06.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:06.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:06.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:07.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:07.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:07.575 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:07.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:07.978 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:08.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:08.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:08.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:08.755 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3a1abfd957082ae1] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:08.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:08.990 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:09.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:09.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:09.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:09.771 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:09.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:09.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:09.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:10.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:10.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:10.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:10.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:10.815 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:36:10.815 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:36:10.815 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:36:10.815 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:36:10.815 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:36:10.815 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:36:10.815 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:36:10.815 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=373b627a00d1e6e7] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:36:10.815 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=373b627a00d1e6e7] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:36:10.816 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:36:10.816 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966344330543105] [posTime=2025/05/12 00:36:01.466 +02:00]
[2025/05/12 00:36:10.816 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:36:10.816 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:36:10.988 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:11.189 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:11.377 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:11.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:11.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7c2550a42d4846ab] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:11.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:11.984 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:12.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:12.389 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:12.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:12.780 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:12.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:12.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:12.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:13.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:13.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:13.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:13.779 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966347525292033] [tSafe_p=2025/05/12 00:36:13.653 +02:00] [tsLag=126.3504ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:36:13.779 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:13.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:14.185 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:14.387 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:14.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:14.760 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3604eebd01b5cef3] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:14.775 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:14.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:15.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:15.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:15.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:15.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:15.788 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:15.788 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:15.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:16.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:16.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:16.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:16.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:16.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:17.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:17.382 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:17.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:17.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=55081a5e5efb6189] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:17.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:17.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:18.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:18.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:18.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:18.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:18.775 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:18.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:18.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:36:18.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:36:18.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:19.182 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:19.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:19.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:19.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:19.976 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:20.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:20.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:20.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:20.757 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6d74d1a590abb768] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:20.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:20.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:21.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:21.383 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:21.586 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:21.773 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:21.789 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:21.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:21.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:22.179 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:22.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:22.584 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:22.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:22.975 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:23.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:23.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:23.583 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:23.756 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1534629ade4f844a] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:23.787 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966350107934721] [tSafe_p=2025/05/12 00:36:23.505 +02:00] [tsLag=282.0753ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:36:23.787 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:23.974 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:24.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:24.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:24.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:24.783 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:24.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:24.783 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:24.986 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:25.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:25.390 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:25.576 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:25.780 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:25.983 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:26.186 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:26.388 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:26.590 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:26.761 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7bbf3e6d43ecdd2c] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:26.777 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:26.981 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:27.184 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:27.386 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:27.589 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:27.776 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:27.776 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:27.776 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:27.979 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:28.181 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:28.384 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:28.587 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:28.790 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:28.977 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:29.180 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:29.385 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:29.585 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:29.758 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=95feb54a5b790e7] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:29.789 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:29.974 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:30.178 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:30.380 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:30.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:30.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:30.785 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:30.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:30.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:31.177 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:31.381 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:31.581 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:31.785 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:31.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:32.174 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:32.379 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:32.580 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:32.753 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4c93a4d24eda3988] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:32.784 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:32.989 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:33.176 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:33.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:33.582 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:33.770 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:36:33.786 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:33.786 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966352770007041] [tSafe_p=2025/05/12 00:36:33.660 +02:00] [tsLag=126.3016ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:36:33.786 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:33.987 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:34.175 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:34.378 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:34.578 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:34.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:34.910 +02:00] [WARN] [roles/roles.go:266] ["Get signal to exit"] [signal=terminated]
[2025/05/12 00:36:34.910 +02:00] [INFO] [rootcoord/service.go:314] ["Rootcoord stop"] [Address=192.168.0.100:40000]
[2025/05/12 00:36:34.985 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:35.188 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:35.374 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:35.579 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:35.767 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6540e9c234cc9f89] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:35.782 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/service.go:324] ["Rootcoord begin to stop grpc server"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/root_coord.go:229] ["rootcoord's timetick loop quit!"]
[2025/05/12 00:36:35.859 +02:00] [DEBUG] [utils/util.go:20] ["try to graceful stop grpc server..."]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/import_manager.go:151] ["import manager context done, exit check flipTaskStateLoop"]
[2025/05/12 00:36:35.859 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/timeticksync.go:264] ["rootcoord context done"] [error="context canceled"]
[2025/05/12 00:36:35.859 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:36:35.859 +02:00] [WARN] [rootcoord/proxy_manager.go:108] ["stop watching etcd loop"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/root_coord.go:254] ["rootcoord's ts loop quit!"]
[2025/05/12 00:36:35.859 +02:00] [WARN] [timerecord/time_recorder.go:128] ["long term checker [rootTtChecker] shutdown"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/import_manager.go:133] ["import manager context done, exit check sendOutTasksLoop"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/import_manager.go:175] ["(in cleanupLoop) import manager context done, exit cleanupLoop"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/root_coord.go:173] ["update rootcoord state"] [state=Abnormal]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/root_coord.go:706] ["stop rootcoord executor"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/root_coord.go:713] ["stop rootcoord scheduler"]
[2025/05/12 00:36:35.859 +02:00] [INFO] [rootcoord/root_coord.go:720] ["cancel rootcoord goroutines"]
[2025/05/12 00:36:35.861 +02:00] [INFO] [rootcoord/root_coord.go:728] ["revoke rootcoord session"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/service.go:233] ["Datacoord stop"] [Address=192.168.0.100:40005]
[2025/05/12 00:36:35.862 +02:00] [DEBUG] [utils/util.go:20] ["try to graceful stop grpc server..."]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/server.go:821] ["flush loop shutdown"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/server.go:737] ["watch service shutdown"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/channel_manager.go:269] ["background checking channels loop quit"]
[2025/05/12 00:36:35.862 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/channel_manager.go:676] ["watch etcd loop quit"]
[2025/05/12 00:36:35.862 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/server.go:904] ["server shutdown"]
[2025/05/12 00:36:35.862 +02:00] [WARN] [datacoord/garbage_collector.go:107] ["garbage collector quit"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/compaction_trigger.go:150] ["global compaction loop exit"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/compaction_trigger.go:119] ["compaction trigger quit"]
[2025/05/12 00:36:35.862 +02:00] [INFO] [datacoord/compaction.go:134] ["compaction handler quit"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/service.go:210] ["Indexcoord stop"] [Address=192.168.0.100:40003]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/index_coord.go:328] ["cancel the loop of IndexCoord"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/index_coord.go:333] ["close the task scheduler of IndexCoord"]
[2025/05/12 00:36:35.863 +02:00] [WARN] [indexcoord/index_builder.go:148] ["index builder ctx done"]
[2025/05/12 00:36:35.863 +02:00] [WARN] [indexcoord/flush_segment_watcher.go:154] ["IndexCoord flushedSegmentWatcher context done"]
[2025/05/12 00:36:35.863 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/garbage_collector.go:204] ["IndexCoord garbageCollector recycleUnusedMetaLoop context has done"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/garbage_collector.go:88] ["IndexCoord garbageCollector recycleUnusedMetaLoop context has done"]
[2025/05/12 00:36:35.863 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:36:35.863 +02:00] [WARN] [indexcoord/index_coord.go:1340] ["IndexCoord context done, exit..."]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/index_coord.go:339] ["stop the index builder of IndexCoord"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/index_coord.go:343] ["stop the garbage collector of IndexCoord"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/index_coord.go:347] ["stop the flushed segment watcher"]
[2025/05/12 00:36:35.863 +02:00] [INFO] [indexcoord/service.go:224] ["Graceful stop grpc server..."]
[2025/05/12 00:36:35.864 +02:00] [INFO] [indexcoord/service.go:373] ["IndexCoord grpcServer loop exit"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [querycoord/service.go:312] ["QueryCoord stop"] [Address=192.168.0.100:40001]
[2025/05/12 00:36:35.864 +02:00] [DEBUG] [utils/util.go:20] ["try to graceful stop grpc server..."]
[2025/05/12 00:36:35.864 +02:00] [INFO] [observers/resource_observer.go:67] ["Close resource group observer due to context canceled"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [observers/leader_observer.go:59] ["stop leader observer due to ctx done"]
[2025/05/12 00:36:35.864 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [querycoordv2/server.go:616] ["stop watching nodes, QueryCoord stopped"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [checkers/controller.go:89] ["CheckerController stopped due to context canceled"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [task/merger.go:79] ["Merger stopped due to context canceled"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [observers/target_observer.go:102] ["Close target observer due to context canceled"]
[2025/05/12 00:36:35.864 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [observers/collection_observer.go:75] ["CollectionObserver stopped due to context canceled"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [job/scheduler.go:77] ["JobManager stopped due to context canceled"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [dist/dist_handler.go:65] ["close dist handler due to context done"] [nodeID=78]
[2025/05/12 00:36:35.864 +02:00] [INFO] [querycoordv2/server.go:676] ["close check node health due to context done"]
[2025/05/12 00:36:35.864 +02:00] [INFO] [observers/replica_observer.go:70] ["Close replica observer due to context canceled"]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:450] ["stop cluster..."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [session/cluster.go:99] ["cluster closed"]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:455] ["stop dist controller..."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:460] ["stop checker controller..."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:465] ["stop task scheduler..."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:470] ["stop job scheduler..."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:474] ["stop observers..."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querycoordv2/server.go:492] ["QueryCoord stop successfully"]
[2025/05/12 00:36:35.865 +02:00] [INFO] [roles/roles.go:382] ["All coordinators have stopped"]
[2025/05/12 00:36:35.865 +02:00] [INFO] [querynode/service.go:246] ["QueryNode stop"] [Address=192.168.0.100:40002]
[2025/05/12 00:36:35.865 +02:00] [WARN] [querynode/query_node.go:422] ["Query node stop.."]
[2025/05/12 00:36:35.865 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=querynode] [key=by-dev/meta/session/querynode-78]
[2025/05/12 00:36:36.092 +02:00] [WARN] [grpclog/grpclog.go:46] ["[core][Channel #39 SubChannel #42] grpc: addrConn.createTransport failed to connect to {\n  \"Addr\": \"192.168.0.100:40000\",\n  \"ServerName\": \"192.168.0.100:40000\",\n  \"Attributes\": null,\n  \"BalancerAttributes\": null,\n  \"Type\": 0,\n  \"Metadata\": null\n}. Err: connection error: desc = \"transport: error while dialing: dial tcp 192.168.0.100:40000: i/o timeout\""]
[2025/05/12 00:36:36.093 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:36:36.093 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).AllocTimestamp\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:424\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).alloc\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:61\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).AllocOne\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:83\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:94\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tickLoop\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:166"]
[2025/05/12 00:36:36.094 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:36:36.094 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).UpdateChannelTimeTick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:462\ngithub.com/milvus-io/milvus/internal/proxy.(*Proxy).sendChannelsTimeTickLoop.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/proxy.go:334"]
[2025/05/12 00:36:36.465 +02:00] [WARN] [grpclog/grpclog.go:46] ["[core][Channel #60 SubChannel #66] grpc: addrConn.createTransport failed to connect to {\n  \"Addr\": \"192.168.0.100:40005\",\n  \"ServerName\": \"192.168.0.100:40005\",\n  \"Attributes\": null,\n  \"BalancerAttributes\": null,\n  \"Type\": 0,\n  \"Metadata\": null\n}. Err: connection error: desc = \"transport: error while dialing: dial tcp 192.168.0.100:40005: i/o timeout\""]
[2025/05/12 00:36:36.465 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datacoord] [error="rpc error: code = Unavailable desc = connection error: desc = \"transport: error while dialing: dial tcp 192.168.0.100:40005: i/o timeout\""]
[2025/05/12 00:36:36.468 +02:00] [WARN] [client/client.go:98] ["DataCoordClient, not existed in msess "] [key=datacoord] ["len of msess"=0]
[2025/05/12 00:36:36.468 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available datacoord, check datacoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).ReportDataNodeTtMsgs\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:868\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:166\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:164\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).start\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:69"]
[2025/05/12 00:36:36.468 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="find no available datacoord, check datacoord state"]
[2025/05/12 00:36:36.775 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:36:37.101 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:36:37.101 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).UpdateChannelTimeTick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:462\ngithub.com/milvus-io/milvus/internal/proxy.(*Proxy).sendChannelsTimeTickLoop.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/proxy.go:334"]
[2025/05/12 00:36:37.101 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:36:37.101 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).AllocTimestamp\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:424\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).alloc\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:61\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).AllocOne\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:83\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:94\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tickLoop\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:166"]
[2025/05/12 00:36:37.475 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=datacoord]
[2025/05/12 00:36:37.475 +02:00] [WARN] [client/client.go:98] ["DataCoordClient, not existed in msess "] [key=datacoord] ["len of msess"=0]
[2025/05/12 00:36:37.475 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available datacoord, check datacoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).ReportDataNodeTtMsgs\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:868\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:166\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:164\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).start\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:69"]
[2025/05/12 00:36:37.475 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="find no available datacoord, check datacoord state"]
[2025/05/12 00:36:38.753 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querycoord] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:36:38.753 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datacoord] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:36:38.753 +02:00] [WARN] [client/client.go:89] ["QueryCoordClient GetSessions failed"] [error="context canceled"]
[2025/05/12 00:36:38.753 +02:00] [WARN] [client/client.go:93] ["DataCoordClient, getSessions failed"] [key=datacoord] [error="context canceled"]
[2025/05/12 00:36:38.753 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:36:38.753 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="context canceled"]
[2025/05/12 00:36:38.753 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:529\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:213\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:36:38.753 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="context canceled"]
[2025/05/12 00:36:38.753 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=337e58d28e1c2fa3] [nodeID=85] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:36:39.112 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:36:39.112 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).AllocTimestamp\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:424\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).alloc\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:61\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).AllocOne\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:83\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:94\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tickLoop\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:166"]
[2025/05/12 00:36:39.112 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:36:39.112 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).UpdateChannelTimeTick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:462\ngithub.com/milvus-io/milvus/internal/proxy.(*Proxy).sendChannelsTimeTickLoop.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/proxy.go:334"]
[2025/05/12 00:36:39.488 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=datacoord]
[2025/05/12 00:36:39.488 +02:00] [WARN] [client/client.go:98] ["DataCoordClient, not existed in msess "] [key=datacoord] ["len of msess"=0]
[2025/05/12 00:36:39.488 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available datacoord, check datacoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).ReportDataNodeTtMsgs\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:868\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:166\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:164\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).start\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:69"]
[2025/05/12 00:36:39.488 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="find no available datacoord, check datacoord state"]
[2025/05/12 00:36:39.769 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=datacoord]
[2025/05/12 00:36:39.769 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:36:39.769 +02:00] [WARN] [client/client.go:93] ["DataCoordClient, getSessions failed"] [key=datacoord] [error="context canceled"]
[2025/05/12 00:36:39.769 +02:00] [WARN] [client/client.go:89] ["QueryCoordClient GetSessions failed"] [error="context canceled"]
[2025/05/12 00:36:39.769 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:529\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:213\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:36:39.769 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="context canceled"]
[2025/05/12 00:36:39.769 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:36:39.769 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="context canceled"]
[2025/05/12 00:36:39.785 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
