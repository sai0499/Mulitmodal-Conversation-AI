[2025/05/12 00:09:46.730 +02:00] [INFO] [proxy/service.go:533] ["create RootCoord client for Proxy done"]
[2025/05/12 00:09:46.731 +02:00] [INFO] [proxy/service.go:536] ["init RootCoord client for Proxy"]
[2025/05/12 00:09:46.731 +02:00] [INFO] [proxy/service.go:541] ["init RootCoord client for Proxy done"]
[2025/05/12 00:09:46.730 +02:00] [INFO] [logutil/logutil.go:165] ["Log directory"] [configDir="D:\\Human Centered NLP\\conversation-ai\\Python-Server\\milvus_data\\logs"]
[2025/05/12 00:09:46.731 +02:00] [INFO] [logutil/logutil.go:166] ["Set log file to "] [path="D:\\Human Centered NLP\\conversation-ai\\Python-Server\\milvus_data\\logs/standalone-62.log"]
[2025/05/12 00:09:46.730 +02:00] [INFO] [rootcoord/service.go:213] ["RootCoord start to create IndexCoord client"]
[2025/05/12 00:09:46.730 +02:00] [INFO] [querycoord/service.go:167] ["QueryCoord try to wait for RootCoord ready"]
[2025/05/12 00:09:46.730 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:46.731 +02:00] [DEBUG] [indexnode/indexnode.go:204] ["IndexNode init session successful"] [serverID=64]
[2025/05/12 00:09:46.730 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.731 +02:00] [DEBUG] [indexnode/indexnode.go:212] ["IndexNode NewMinIOKV succeeded"]
[2025/05/12 00:09:46.731 +02:00] [INFO] [proxy/service.go:543] ["Proxy wait for RootCoord to be healthy"]
[2025/05/12 00:09:46.731 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:46.731 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.731 +02:00] [INFO] [indexcoord/index_coord.go:207] ["IndexCoord init"] [stateCode=Initializing]
[2025/05/12 00:09:46.731 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:46.731 +02:00] [INFO] [indexcoord/index_coord.go:214] ["IndexCoord try to connect etcd"]
[2025/05/12 00:09:46.731 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.731 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:46.731 +02:00] [INFO] [querynode/query_node.go:211] ["QueryNode init session"] [nodeID=63] ["node address"=192.168.0.100:40002]
[2025/05/12 00:09:46.731 +02:00] [INFO] [querynode/query_node.go:327] ["QueryNode init rateCollector done"] [nodeID=63]
[2025/05/12 00:09:46.732 +02:00] [INFO] [querynode/query_node.go:337] ["queryNode try to connect etcd success"] [MetaRootPath=by-dev/meta]
[2025/05/12 00:09:46.731 +02:00] [INFO] [indexcoord/meta_table.go:98] ["IndexCoord metaTable reloadFromKV load indexes"]
[2025/05/12 00:09:46.732 +02:00] [INFO] [querynode/segment_loader.go:978] ["SegmentLoader created"] [ioPoolSize=128] [cpuPoolSize=16]
[2025/05/12 00:09:46.731 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:279\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:191\ngithub.com/milvus-io/milvus/cmd/components.(*DataNode).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/data_node.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.733 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:09:46.731 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:544\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.731 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:168\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:102\ngithub.com/milvus-io/milvus/cmd/components.(*QueryCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/query_coord.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.733 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:09:46.734 +02:00] [DEBUG] [indexnode/indexnode.go:218] ["Init IndexNode finished"] []
[2025/05/12 00:09:46.734 +02:00] [INFO] [indexnode/service.go:78] ["IndexNode init done ..."]
[2025/05/12 00:09:46.734 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:46.734 +02:00] [DEBUG] [indexnode/indexnode.go:233] [IndexNode] [State=Healthy]
[2025/05/12 00:09:46.734 +02:00] [DEBUG] [indexnode/indexnode.go:236] ["IndexNode start finished"] []
[2025/05/12 00:09:46.734 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=indexnode] [ServerID=64]
[2025/05/12 00:09:46.734 +02:00] [INFO] [indexnode/task_scheduler.go:240] ["IndexNode TaskScheduler start build loop ..."]
[2025/05/12 00:09:46.734 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:09:46.734 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:09:46.735 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.735 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:544\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.735 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.735 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:168\ngithub.com/milvus-io/milvus/internal/distributed/querycoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/service.go:102\ngithub.com/milvus-io/milvus/cmd/components.(*QueryCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/query_coord.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.736 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:09:46.735 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.736 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:279\ngithub.com/milvus-io/milvus/internal/distributed/datanode.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/service.go:191\ngithub.com/milvus-io/milvus/cmd/components.(*DataNode).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/data_node.go:52\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.736 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:09:46.735 +02:00] [INFO] [gc/gc_tuner.go:130] ["GC Helper initialized."] ["Initial GoGC"=100] [minimumGOGC=30] [maximumGOGC=200] [memoryThreshold=13301803008]
[2025/05/12 00:09:46.736 +02:00] [INFO] [querynode/query_node.go:382] ["query node init successfully"] [queryNodeID=63] [IP=192.168.0.100] [Port=40002]
[2025/05/12 00:09:46.736 +02:00] [INFO] [querynode/service.go:235] ["QueryNode init done ..."]
[2025/05/12 00:09:46.736 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/indexnode-64] [value="{\"ServerID\":64,\"ServerName\":\"indexnode\",\"Address\":\"192.168.0.100:40004\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:46.736 +02:00] [INFO] [querynode/query_node.go:411] ["query node start successfully"] [queryNodeID=63] [IP=192.168.0.100] [Port=40002]
[2025/05/12 00:09:46.736 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=querynode] [ServerID=63]
[2025/05/12 00:09:46.736 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=indexnode] [serverID=64]
[2025/05/12 00:09:46.736 +02:00] [INFO] [indexnode/indexnode.go:133] ["IndexNode Register Finished"]
[2025/05/12 00:09:46.737 +02:00] [INFO] [indexcoord/meta_table.go:118] ["IndexCoord metaTable reloadFromKV success"]
[2025/05/12 00:09:46.737 +02:00] [INFO] [indexcoord/index_coord.go:221] ["IndexCoord try to connect etcd success"]
[2025/05/12 00:09:46.737 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/querynode-63] [value="{\"ServerID\":63,\"ServerName\":\"querynode\",\"Address\":\"192.168.0.100:40002\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:46.737 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:46.737 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=querynode] [serverID=63]
[2025/05/12 00:09:46.737 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexnode] [key=indexnode-56] [address=192.168.0.100:40004]
[2025/05/12 00:09:46.737 +02:00] [INFO] [querynode/query_node.go:219] ["QueryNode Register Finished"]
[2025/05/12 00:09:46.737 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexnode] [key=indexnode-64] [address=192.168.0.100:40004]
[2025/05/12 00:09:46.737 +02:00] [INFO] [indexcoord/index_coord.go:225] [IndexCoord] ["session number"=2] [revision=9039]
[2025/05/12 00:09:46.737 +02:00] [INFO] [indexcoord/index_coord.go:230] ["IndexCoord get node sessions from etcd"] ["bind mode"=false] ["node address"=localhost:22930]
[2025/05/12 00:09:46.737 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:46.737 +02:00] [INFO] [indexcoord/node_manager.go:95] ["IndexCoord addNode"] [nodeID=56] ["node address"=192.168.0.100:40004]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=indexcoord] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=indexcoord] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=indexcoord] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=indexcoord] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=indexcoord] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=indexcoord] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=indexcoord] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:09:46.738 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=indexcoord] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:09:46.738 +02:00] [INFO] [rootcoord/service.go:221] ["RootCoord start to create QueryCoord client"]
[2025/05/12 00:09:46.738 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:46.738 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:46.739 +02:00] [INFO] [indexnode/service.go:214] ["IndexNode Register etcd success"]
[2025/05/12 00:09:46.739 +02:00] [INFO] [indexnode/service.go:82] ["IndexNode start done ..."]
[2025/05/12 00:09:46.739 +02:00] [DEBUG] [components/index_node.go:55] ["IndexNode successfully started"]
[2025/05/12 00:09:46.739 +02:00] [INFO] [querynode/service.go:240] ["QueryNode start done ..."]
[2025/05/12 00:09:46.739 +02:00] [DEBUG] [components/query_node.go:57] ["QueryNode successfully started"]
[2025/05/12 00:09:46.740 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:46.741 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=querycoord] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=querycoord] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=querycoord] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=querycoord] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=querycoord] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=querycoord] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=querycoord] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=querycoord] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:09:46.744 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=indexnode] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=indexnode] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=indexnode] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=indexnode] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=indexnode] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=indexnode] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=indexnode] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:09:46.744 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:46.744 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=indexnode] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:09:46.745 +02:00] [DEBUG] [indexcoord/node_manager.go:59] ["IndexCoord NodeManager setClient"] [nodeID=56]
[2025/05/12 00:09:46.745 +02:00] [INFO] [indexcoord/node_manager.go:69] ["IndexNode NodeManager setClient success"] [nodeID=56] ["IndexNode num"=1]
[2025/05/12 00:09:46.745 +02:00] [INFO] [indexcoord/node_manager.go:95] ["IndexCoord addNode"] [nodeID=64] ["node address"=192.168.0.100:40004]
[2025/05/12 00:09:46.745 +02:00] [DEBUG] [indexcoord/node_manager.go:59] ["IndexCoord NodeManager setClient"] [nodeID=64]
[2025/05/12 00:09:46.745 +02:00] [INFO] [indexcoord/node_manager.go:69] ["IndexNode NodeManager setClient success"] [nodeID=64] ["IndexNode num"=2]
[2025/05/12 00:09:46.745 +02:00] [INFO] [indexcoord/index_coord.go:253] [IndexCoord] ["IndexNode number"=2]
[2025/05/12 00:09:46.746 +02:00] [INFO] [indexcoord/index_coord.go:264] ["IndexCoord new minio chunkManager success"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [indexcoord/flush_segment_watcher.go:87] ["flushSegmentWatcher reloadFromKV"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=65]
[2025/05/12 00:09:46.746 +02:00] [INFO] [rootcoord/root_coord.go:173] ["update rootcoord state"] [state=Initializing]
[2025/05/12 00:09:46.746 +02:00] [INFO] [indexcoord/flush_segment_watcher.go:109] ["flushSegmentWatcher reloadFromKV success"] [etcdRevision=9040]
[2025/05/12 00:09:46.746 +02:00] [INFO] [indexcoord/index_coord.go:278] ["IndexCoord new task scheduler success"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [indexcoord/index_coord.go:281] ["IndexCoord init finished"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [indexcoord/service.go:151] ["IndexCoord try to wait for RootCoord ready"]
[2025/05/12 00:09:46.746 +02:00] [INFO] [tso/tso.go:121] ["sync and save timestamp"] [last=2025/05/11 23:57:31.630 +02:00] [save=2025/05/12 00:09:49.746 +02:00] [next=2025/05/12 00:09:46.746 +02:00]
[2025/05/12 00:09:46.746 +02:00] [INFO] [rootcoord/root_coord.go:385] ["id allocator initialized"] [root_path=by-dev/kv] [sub_path=gid] [key=idTimestamp]
[2025/05/12 00:09:46.746 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.746 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:152\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:85\ngithub.com/milvus-io/milvus/cmd/components.(*IndexCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/index_coord.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.746 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:09:46.746 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:09:46.746 +02:00] [INFO] [tso/tso.go:121] ["sync and save timestamp"] [last=2025/05/12 00:00:33.600 +02:00] [save=2025/05/12 00:09:49.746 +02:00] [next=2025/05/12 00:09:46.746 +02:00]
[2025/05/12 00:09:46.746 +02:00] [INFO] [rootcoord/root_coord.go:401] ["tso allocator initialized"] [root_path=by-dev/kv] [sub_path=gid] [key=idTimestamp]
[2025/05/12 00:09:46.746 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:09:46.746 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:132\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:152\ngithub.com/milvus-io/milvus/internal/distributed/indexcoord.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/indexcoord/service.go:85\ngithub.com/milvus-io/milvus/cmd/components.(*IndexCoord).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/index_coord.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:46.746 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=rootcoord] [error="find no available rootcoord, check rootcoord state"]
[2025/05/12 00:09:46.747 +02:00] [DEBUG] [rootcoord/suffix_snapshot.go:558] ["suffix snapshot GC goroutine start!"]
[2025/05/12 00:09:46.747 +02:00] [INFO] [rootcoord/meta_table.go:148] ["recover databases"] ["num of dbs"=1]
[2025/05/12 00:09:46.750 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:46.750 +02:00] [INFO] [paramtable/quota_param.go:787] ["init disk quota"] [diskQuota(MB)=+inf]
[2025/05/12 00:09:46.750 +02:00] [INFO] [paramtable/quota_param.go:802] ["init disk quota per DB"] [diskQuotaPerCollection(MB)=1.7976931348623157e+308]
[2025/05/12 00:09:46.751 +02:00] [INFO] [paramtable/component_param.go:1578] ["init segment max idle time"] [value=10m0s]
[2025/05/12 00:09:46.751 +02:00] [INFO] [paramtable/component_param.go:1583] ["init segment min size from idle to sealed"] [value=16]
[2025/05/12 00:09:46.751 +02:00] [INFO] [paramtable/component_param.go:1593] ["init segment max binlog file to sealed"] [value=32]
[2025/05/12 00:09:46.751 +02:00] [INFO] [paramtable/component_param.go:1588] ["init segment expansion rate"] [value=1.25]
[2025/05/12 00:09:46.751 +02:00] [INFO] [paramtable/base_table.go:145] ["cannot find etcd.endpoints"]
[2025/05/12 00:09:46.751 +02:00] [INFO] [paramtable/hook_config.go:19] ["hook config"] [hook={}]
[2025/05/12 00:09:46.752 +02:00] [INFO] [rootcoord/meta_table.go:186] ["recover collections from db"] [collection_num=1] [partition_num=1]
[2025/05/12 00:09:46.752 +02:00] [INFO] [rootcoord/meta_table.go:203] ["meta table recovery finished"]
[2025/05/12 00:09:46.753 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_0]
[2025/05/12 00:09:46.753 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_1]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_2]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_3]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_4]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_5]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_6]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_7]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_8]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_9]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_10]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_11]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_12]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_13]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_14]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-dml_15]
[2025/05/12 00:09:46.754 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:09:46.754 +02:00] [INFO] [rootcoord/dml_channels.go:178] ["init dml channels"] [prefix=by-dev-rootcoord-dml] [num=16]
[2025/05/12 00:09:46.754 +02:00] [INFO] [rootcoord/timeticksync.go:121] ["recover physical channels"] [collID=457665900034916433] ["physical channels"="[by-dev-rootcoord-dml_2]"]
[2025/05/12 00:09:46.754 +02:00] [INFO] [rootcoord/timeticksync.go:226] ["Add session for timeticksync"] [serverID=65]
[2025/05/12 00:09:46.755 +02:00] [INFO] [rootcoord/root_coord.go:470] ["RootCoord init QuotaCenter done"]
[2025/05/12 00:09:46.756 +02:00] [DEBUG] [rootcoord/kv_catalog.go:727] ["the key has existed"] [key=root-coord/credential/roles/admin]
[2025/05/12 00:09:46.756 +02:00] [DEBUG] [rootcoord/kv_catalog.go:727] ["the key has existed"] [key=root-coord/credential/roles/public]
[2025/05/12 00:09:46.756 +02:00] [INFO] [rootcoord/service.go:162] ["RootCoord init done ..."]
[2025/05/12 00:09:46.756 +02:00] [INFO] [rootcoord/service.go:299] ["RootCoord Core start ..."]
[2025/05/12 00:09:46.756 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=rootcoord] [ServerID=65]
[2025/05/12 00:09:46.756 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/rootcoord] [value="{\"ServerID\":65,\"ServerName\":\"rootcoord\",\"Address\":\"192.168.0.100:40000\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:46.756 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=rootcoord] [serverID=65]
[2025/05/12 00:09:46.756 +02:00] [INFO] [rootcoord/root_coord.go:302] ["RootCoord Register Finished"]
[2025/05/12 00:09:46.756 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:46.756 +02:00] [INFO] [rootcoord/proxy_manager.go:85] ["succeed to init sessions on etcd"] [sessions="[{\"ServerID\":61,\"ServerName\":\"proxy\",\"Address\":\"192.168.0.100:19529\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}]"] [revision=9043]
[2025/05/12 00:09:46.757 +02:00] [INFO] [rootcoord/timeticksync.go:246] ["Init proxy sessions for timeticksync"] [serverID=61]
[2025/05/12 00:09:46.762 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=proxy] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=proxy] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=proxy] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=proxy] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=proxy] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=proxy] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=proxy] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:09:46.766 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=proxy] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:09:46.766 +02:00] [INFO] [rootcoord/proxy_client_manager.go:110] ["succeed to create proxy client"] [address=192.168.0.100:19529] [serverID=61]
[2025/05/12 00:09:46.766 +02:00] [INFO] [rootcoord/root_coord.go:173] ["update rootcoord state"] [state=Healthy]
[2025/05/12 00:09:46.768 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:46.766 +02:00] [INFO] [rootcoord/quota_center.go:132] ["Start QuotaCenter"] [collectInterval/s=3]
[2025/05/12 00:09:46.768 +02:00] [INFO] [rootcoord/root_coord.go:676] ["rootcoord startup successfully"]
[2025/05/12 00:09:46.768 +02:00] [INFO] [rootcoord/service.go:167] ["RootCoord start done ..."]
[2025/05/12 00:09:46.768 +02:00] [DEBUG] [components/root_coord.go:60] ["RootCoord successfully started"]
[2025/05/12 00:09:46.766 +02:00] [INFO] [rootcoord/proxy_manager.go:104] ["start to watch etcd"]
[2025/05/12 00:09:46.774 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:09:46.775 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=rootcoord] [key=by-dev/meta/session/rootcoord]
[2025/05/12 00:09:46.775 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=querynode] [key=by-dev/meta/session/querynode-63]
[2025/05/12 00:09:46.847 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:46.847 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:46.847 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:46.847 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:46.847 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:46.847 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:46.923 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:46.923 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:46.923 +02:00] [INFO] [datacoord/service.go:123] ["create IndexCoord client for DataCoord done"]
[2025/05/12 00:09:46.923 +02:00] [INFO] [datacoord/service.go:126] ["init IndexCoord client for DataCoord"]
[2025/05/12 00:09:46.923 +02:00] [INFO] [datacoord/service.go:131] ["init IndexCoord client for DataCoord done"]
[2025/05/12 00:09:46.923 +02:00] [INFO] [datacoord/service.go:159] ["network port"] [port=40005]
[2025/05/12 00:09:46.949 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:46.949 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:46.949 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:46.949 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:46.949 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:46.949 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.035 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:47.035 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:47.036 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=66]
[2025/05/12 00:09:47.036 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:47.036 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:47.040 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=100] ["heapuse "=33] ["total memory"=12865] ["next GC"=40] ["new GOGC"=30] [gc-pause=530µs] [gc-pause-end=1747001387040147400]
[2025/05/12 00:09:47.041 +02:00] [INFO] [datacoord/channel_store.go:165] ["channel store reload channel"] [nodeID=59] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:09:47.041 +02:00] [INFO] [sessionutil/session_util.go:561] ["SessionUtil GetSessions "] [prefix=datanode] [key=datanode-59] [address=192.168.0.100:40006]
[2025/05/12 00:09:47.041 +02:00] [INFO] [datacoord/server.go:439] ["DataCoord success to get DataNode sessions"] [sessions="{\"datanode-59\":{\"ServerID\":59,\"ServerName\":\"datanode\",\"Address\":\"192.168.0.100:40006\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/channel_manager.go:211] ["processing watch info"] ["watch state"=WatchSuccess] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/channel_manager.go:171] ["starting etcd states checker"]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/channel_manager.go:176] ["starting background balance checker"]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/channel_manager.go:179] ["cluster start up"] [nodes="[59]"] [oNodes="[59]"] ["old onlines"="[59]"] ["new onlines"="[]"] [offLines="[]"]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/segment_reference_manager.go:41] ["create a new segment reference manager"]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/segment_reference_manager.go:184] ["recovery reference lock on segments by online nodes"] ["online nodeIDs"="[]"]
[2025/05/12 00:09:47.042 +02:00] [INFO] [datacoord/segment_reference_manager.go:204] ["recovery reference lock on segments by online nodes successfully"] ["online nodeIDs"="[]"] ["offline nodeIDs"={}]
[2025/05/12 00:09:47.043 +02:00] [INFO] [datacoord/segment_reference_manager.go:75] ["create new segment reference manager successfully"]
[2025/05/12 00:09:47.043 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.043 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.044 +02:00] [WARN] [datacoord/segment_manager.go:236] ["failed to get ts from rootCoord for globalLastExpire"] []
[2025/05/12 00:09:47.045 +02:00] [INFO] [datacoord/garbage_collector.go:71] ["GC with option"] [enabled=true] [interval=1h0m0s] [missingTolerance=1h0m0s] [dropTolerance=3h0m0s]
[2025/05/12 00:09:47.045 +02:00] [INFO] [datacoord/service.go:264] ["DataCoord init done ..."]
[2025/05/12 00:09:47.045 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=datacoord] [ServerID=66]
[2025/05/12 00:09:47.046 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/datacoord] [value="{\"ServerID\":66,\"ServerName\":\"datacoord\",\"Address\":\"192.168.0.100:40005\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:47.046 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=datacoord] [serverID=66]
[2025/05/12 00:09:47.046 +02:00] [INFO] [datacoord/server.go:242] ["DataCoord Register Finished"]
[2025/05/12 00:09:47.046 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:47.047 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:47.047 +02:00] [INFO] [datacoord/server.go:351] ["DataCoord startup successfully"]
[2025/05/12 00:09:47.047 +02:00] [INFO] [datacoord/service.go:269] ["DataCoord start done ..."]
[2025/05/12 00:09:47.047 +02:00] [DEBUG] [components/data_coord.go:53] ["DataCoord successfully started"]
[2025/05/12 00:09:47.050 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.050 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.050 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.050 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.050 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.050 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.097 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=datacoord] [key=by-dev/meta/session/datacoord]
[2025/05/12 00:09:47.152 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.152 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.152 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.152 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.152 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.152 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.253 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.253 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.253 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.253 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.253 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.253 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.355 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.355 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.355 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.355 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.355 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.355 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.457 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.457 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.457 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.457 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.457 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.457 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.559 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.559 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.559 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.559 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.559 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.559 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.660 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.660 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.660 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.660 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.660 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.660 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.746 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:09:47.746 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:09:47.746 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=rootcoord]
[2025/05/12 00:09:47.746 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.746 +02:00] [INFO] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=192.168.0.100:40000]
[2025/05/12 00:09:47.762 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.762 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.762 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.762 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.762 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.762 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.780 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:09:47.864 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.864 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.864 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.864 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.864 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.864 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:47.966 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:47.966 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:47.966 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:47.966 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:47.966 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:47.966 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.067 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.067 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.067 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.067 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.067 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.067 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.169 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.169 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.169 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.169 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.169 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.169 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.270 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.270 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.270 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.271 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.271 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.271 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.372 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.372 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.372 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.372 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.372 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.372 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.474 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.474 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.474 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.474 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.474 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.474 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.576 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.576 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.576 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.576 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.576 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.576 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.678 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.678 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.678 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.678 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.678 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.678 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.777 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=2000]
[2025/05/12 00:09:48.793 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.794 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.794 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.794 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.794 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.895 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.895 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.895 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.895 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.895 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.895 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:48.997 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:48.997 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:48.997 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:48.997 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:48.997 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:48.997 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.121 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.121 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:49.121 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.121 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:49.121 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.121 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.246 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.246 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:49.246 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.246 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:49.246 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.246 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.349 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.349 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:49.349 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.349 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:49.349 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.349 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.464 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.464 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:49.464 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.464 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:49.464 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.464 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.566 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.566 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:49.566 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.566 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:49.566 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.566 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.668 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.668 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:-1 role:\"IndexCoord\" "]
[2025/05/12 00:09:49.668 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.668 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Abnormal]
[2025/05/12 00:09:49.668 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.668 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.762 +02:00] [INFO] [datanode/service.go:283] ["RootCoord client is ready for DataNode"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [proxy/service.go:548] ["Proxy wait for RootCoord to be healthy done"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [querycoord/service.go:177] ["QueryCoord report RootCoord ready"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [proxy/service.go:551] ["set RootCoord client for Proxy done"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [datanode/service.go:291] ["starting DataCoord client for DataNode"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [proxy/service.go:555] ["create DataCoord client for Proxy"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [indexcoord/service.go:179] ["IndexCoord try to wait for DataCoord ready"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [querycoord/service.go:196] ["QueryCoord try to wait for DataCoord ready"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [proxy/service.go:561] ["create DataCoord client for Proxy done"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [proxy/service.go:564] ["init DataCoord client for Proxy"]
[2025/05/12 00:09:49.762 +02:00] [INFO] [proxy/service.go:569] ["Proxy wait for DataCoord to be healthy"]
[2025/05/12 00:09:49.763 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:09:49.763 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:09:49.763 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:09:49.764 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:09:49.765 +02:00] [INFO] [indexcoord/service.go:88] ["IndexCoord init done ..."]
[2025/05/12 00:09:49.765 +02:00] [INFO] [datanode/service.go:309] ["DataCoord client is ready for DataNode"]
[2025/05/12 00:09:49.765 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=indexcoord] [ServerID=62]
[2025/05/12 00:09:49.766 +02:00] [INFO] [querycoord/service.go:205] ["QueryCoord report DataCoord ready"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [proxy/service.go:574] ["Proxy wait for DataCoord to be healthy done"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [proxy/service.go:577] ["set DataCoord client for Proxy done"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [proxy/service.go:581] ["create IndexCoord client for Proxy"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=30] ["total memory"=12910] ["next GC"=28] ["new GOGC"=30] [gc-pause=0s] [gc-pause-end=1747001389766181800]
[2025/05/12 00:09:49.766 +02:00] [INFO] [datanode/data_node.go:227] ["DataNode server initializing"] [TimeTickChannelName=by-dev-datacoord-timetick-channel]
[2025/05/12 00:09:49.766 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [querycoord/service.go:226] ["QueryCoord try to wait for IndexCoord ready"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [proxy/service.go:587] ["create IndexCoord client for Proxy done"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [proxy/service.go:590] ["init IndexCoord client for Proxy"]
[2025/05/12 00:09:49.766 +02:00] [INFO] [proxy/service.go:595] ["init IndexCoord client for Proxy done"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/indexcoord] [value="{\"ServerID\":62,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=indexcoord] [serverID=62]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/index_coord.go:142] ["IndexCoord Register Finished"]
[2025/05/12 00:09:49.767 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:49.767 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexcoord] [key=indexcoord] [address=192.168.0.100:40003]
[2025/05/12 00:09:49.767 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexcoord] [key=indexcoord] [address=192.168.0.100:40003]
[2025/05/12 00:09:49.767 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess="{\"indexcoord\":{\"ServerID\":62,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess="{\"indexcoord\":{\"ServerID\":62,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/service.go:199] ["IndexCoord registers service successfully"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/index_builder.go:141] ["index builder schedule loop start"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/garbage_collector.go:196] ["IndexCoord garbageCollector recycleUnusedSegIndexes start"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/garbage_collector.go:81] ["IndexCoord garbageCollector recycleUnusedIndexes start"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/flush_segment_watcher.go:145] ["IndexCoord flushedSegmentWatcher internalScheduler start..."]
[2025/05/12 00:09:49.767 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=67]
[2025/05/12 00:09:49.767 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/index_coord.go:290] ["IndexCoord start successfully"] [state=Healthy]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/service.go:204] ["indexCoord started"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/service.go:92] ["IndexCoord start done ..."]
[2025/05/12 00:09:49.768 +02:00] [DEBUG] [components/index_coord.go:55] ["IndexCoord successfully started"]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/garbage_collector.go:215] ["IndexCoord garbageCollector start recycleUnusedIndexFiles loop"]
[2025/05/12 00:09:49.768 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:49.767 +02:00] [INFO] [indexcoord/index_coord.go:1333] ["IndexCoord start watching flushed segments..."]
[2025/05/12 00:09:49.768 +02:00] [INFO] [datanode/data_node.go:240] ["DataNode server init rateCollector done"] ["node ID"=0]
[2025/05/12 00:09:49.768 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=datacoord] [key=datacoord] [address=192.168.0.100:40005]
[2025/05/12 00:09:49.768 +02:00] [INFO] [datanode/data_node.go:252] ["DataNode server init succeeded"] [MsgChannelSubName=by-dev-dataNode]
[2025/05/12 00:09:49.768 +02:00] [INFO] [datanode/service.go:321] ["current DataNode state"] [state=Initializing]
[2025/05/12 00:09:49.768 +02:00] [INFO] [datanode/service.go:195] ["DataNode gRPC services successfully initialized"]
[2025/05/12 00:09:49.768 +02:00] [INFO] [datanode/data_node.go:480] ["start id allocator done"] [role=datanode]
[2025/05/12 00:09:49.768 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.768 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:49.768 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:09:49.769 +02:00] [INFO] [querycoord/service.go:232] ["QueryCoord report IndexCoord is ready"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [proxy/service.go:601] ["Proxy wait for IndexCoord to be healthy done"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [proxy/service.go:604] ["set IndexCoord client for Proxy done"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [proxy/service.go:608] ["create QueryCoord client for Proxy"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [datanode/data_node.go:462] ["DataNode Background GC Start"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=datanode] [ServerID=67]
[2025/05/12 00:09:49.769 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [proxy/service.go:614] ["create QueryCoord client for Proxy done"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [proxy/service.go:617] ["init QueryCoord client for Proxy"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [proxy/service.go:622] ["init QueryCoord client for Proxy done"]
[2025/05/12 00:09:49.769 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:09:49.769 +02:00] [WARN] [grpcclient/client.go:274] ["fail to get grpc client"] [client_role=querycoord] [error="find no available querycoord, check querycoord state"]
[2025/05/12 00:09:49.769 +02:00] [INFO] [querycoordv2/server.go:176] ["QueryCoord start init"] [meta-root-path=by-dev/meta] [address=192.168.0.100:40001]
[2025/05/12 00:09:49.769 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:49.769 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.769 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.769 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:49.769 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:09:49.769 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:09:49.769 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:09:49.769 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:272\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:123\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:624\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:49.769 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="find no available querycoord, check querycoord state"]
[2025/05/12 00:09:49.770 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/datanode-67] [value="{\"ServerID\":67,\"ServerName\":\"datanode\",\"Address\":\"192.168.0.100:40006\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:49.770 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=datanode] [serverID=67]
[2025/05/12 00:09:49.770 +02:00] [INFO] [sessionutil/session_util.go:690] ["watch services"] ["add kv"="key:\"by-dev/meta/session/datanode-67\" create_revision:9049 mod_revision:9049 version:1 value:\"{\\\"ServerID\\\":67,\\\"ServerName\\\":\\\"datanode\\\",\\\"Address\\\":\\\"192.168.0.100:40006\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704566955892 "]
[2025/05/12 00:09:49.770 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionAddEvent]
[2025/05/12 00:09:49.770 +02:00] [INFO] [datacoord/server.go:784] ["received datanode register"] [address=192.168.0.100:40006] [serverID=67]
[2025/05/12 00:09:49.770 +02:00] [INFO] [datacoord/channel_manager.go:341] ["register node with no reassignment"] ["registered node"=67]
[2025/05/12 00:09:49.770 +02:00] [INFO] [datanode/data_node.go:183] ["DataNode Register Finished"]
[2025/05/12 00:09:49.770 +02:00] [WARN] [client/client.go:94] ["QueryCoordClient msess key not existed"] [key=querycoord]
[2025/05/12 00:09:49.770 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:49.770 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available querycoord, check querycoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:123\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:75\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentStates\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:99\ngithub.com/milvus-io/milvus/internal/util/funcutil.WaitForComponentHealthy\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/funcutil/func.go:114\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).init\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:624\ngithub.com/milvus-io/milvus/internal/distributed/proxy.(*Server).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/service.go:369\ngithub.com/milvus-io/milvus/cmd/components.(*Proxy).Run\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/components/proxy.go:51\ngithub.com/milvus-io/milvus/cmd/roles.runComponent[...].func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/cmd/roles/roles.go:123"]
[2025/05/12 00:09:49.770 +02:00] [INFO] [datanode/service.go:200] ["DataNode gRPC services successfully started"]
[2025/05/12 00:09:49.770 +02:00] [DEBUG] [components/data_node.go:56] ["Datanode successfully started"]
[2025/05/12 00:09:49.771 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=68]
[2025/05/12 00:09:49.771 +02:00] [INFO] [querycoordv2/server.go:209] [QueryCoord] [State=Initializing]
[2025/05/12 00:09:49.771 +02:00] [INFO] [querycoordv2/server.go:214] ["query coordinator try to connect etcd success"]
[2025/05/12 00:09:49.771 +02:00] [INFO] [tso/tso.go:121] ["sync and save timestamp"] [last=2025/05/11 23:57:34.655 +02:00] [save=2025/05/12 00:09:52.771 +02:00] [next=2025/05/12 00:09:49.771 +02:00]
[2025/05/12 00:09:49.771 +02:00] [INFO] [querycoordv2/server.go:302] ["init meta"]
[2025/05/12 00:09:49.772 +02:00] [INFO] [querycoordv2/server.go:312] ["recover meta..."]
[2025/05/12 00:09:49.775 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=31] ["total memory"=12910] ["next GC"=30] ["new GOGC"=30] [gc-pause=515.8µs] [gc-pause-end=1747001389775394100]
[2025/05/12 00:09:49.775 +02:00] [INFO] [meta/collection_manager.go:89] ["recover collections and partitions from kv store"] [traceID=1747001389775926800]
[2025/05/12 00:09:49.776 +02:00] [INFO] [meta/replica_manager.go:130] ["recover replica"] [collectionID=457665900034916433] [replicaID=457665907707084801] [nodes="[55]"]
[2025/05/12 00:09:49.776 +02:00] [INFO] [meta/resource_manager.go:672] ["Recover resource group"] [rgName=__default_resource_group] [nodes="[25,3,34,55,18]"] [capacity=1000000]
[2025/05/12 00:09:49.776 +02:00] [INFO] [querycoordv2/server.go:238] ["init session"]
[2025/05/12 00:09:49.776 +02:00] [INFO] [querycoordv2/server.go:242] ["init schedulers"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoordv2/server.go:255] ["init dist controller"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoordv2/server.go:265] ["init all available balancer"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoordv2/server.go:274] ["use config balancer"] [balancer=ScoreBasedBalancer]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoordv2/server.go:281] ["init checker controller"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoordv2/server.go:345] ["init observers"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoordv2/server.go:297] ["QueryCoord init success"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:49.777 +02:00] [INFO] [querycoord/service.go:105] ["QueryCoord init done ..."]
[2025/05/12 00:09:49.777 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=querycoord] [ServerID=68]
[2025/05/12 00:09:49.778 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/querycoord] [value="{\"ServerID\":68,\"ServerName\":\"querycoord\",\"Address\":\"192.168.0.100:40001\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=querycoord] [serverID=68]
[2025/05/12 00:09:49.779 +02:00] [INFO] [querycoordv2/server.go:144] ["QueryCoord Register Finished"]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:690] ["watch services"] ["add kv"="key:\"by-dev/meta/session/querycoord\" create_revision:9052 mod_revision:9052 version:1 value:\"{\\\"ServerID\\\":68,\\\"ServerName\\\":\\\"querycoord\\\",\\\"Address\\\":\\\"192.168.0.100:40001\\\",\\\"Exclusive\\\":true,\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704566955910 "]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionAddEvent]
[2025/05/12 00:09:49.779 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:49.779 +02:00] [INFO] [datacoord/server.go:713] ["there is a new service online"] ["server role"=QueryCoord] ["server ID"=68]
[2025/05/12 00:09:49.779 +02:00] [INFO] [querycoordv2/server.go:388] ["start watcher..."]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:561] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-55] [address=192.168.0.100:40002]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:561] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-63] [address=192.168.0.100:40002]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-55] [address=192.168.0.100:40002]
[2025/05/12 00:09:49.779 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-63] [address=192.168.0.100:40002]
[2025/05/12 00:09:49.779 +02:00] [INFO] [task/scheduler.go:226] ["add executor for new QueryNode"] [nodeID=55]
[2025/05/12 00:09:49.779 +02:00] [INFO] [task/scheduler.go:226] ["add executor for new QueryNode"] [nodeID=63]
[2025/05/12 00:09:49.779 +02:00] [INFO] [meta/resource_manager.go:444] ["HandleNodeUp: node already assign to resource group"] [rgName=__default_resource_group] [node=55]
[2025/05/12 00:09:49.780 +02:00] [INFO] [querycoordv2/server.go:726] ["HandleNodeUp: assign node to resource group"] [nodeID=55] [resourceGroup=__default_resource_group]
[2025/05/12 00:09:49.780 +02:00] [INFO] [dist/dist_handler.go:59] ["start dist handler"] [nodeID=55]
[2025/05/12 00:09:49.780 +02:00] [INFO] [dist/dist_handler.go:59] ["start dist handler"] [nodeID=63]
[2025/05/12 00:09:49.780 +02:00] [INFO] [meta/resource_manager.go:468] ["HandleNodeUp: add node to default resource group"] [rgName=__default_resource_group] [node=63]
[2025/05/12 00:09:49.780 +02:00] [INFO] [querycoordv2/server.go:726] ["HandleNodeUp: assign node to resource group"] [nodeID=63] [resourceGroup=__default_resource_group]
[2025/05/12 00:09:49.780 +02:00] [INFO] [utils/meta.go:183] ["assign node to replica"] [collectionID=457665900034916433] [replicaID=457665907707084801] [nodeID=63]
[2025/05/12 00:09:49.780 +02:00] [INFO] [querycoordv2/server.go:410] ["start recovering dist and target"]
[2025/05/12 00:09:49.781 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:09:49.781 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:09:49.782 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=datanode] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=datanode] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=datanode] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=datanode] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=datanode] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=datanode] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=datanode] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:09:49.783 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=datanode] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:09:49.783 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=7ba80a0b582caa41] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:09:49.784 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=7ba80a0b582caa41] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:09:49.784 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=0): server ID mismatch"]
[2025/05/12 00:09:49.785 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=57a40a93574386d0] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:09:49.785 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=57a40a93574386d0] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:09:49.784 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=fa12015e0ca392f] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:09:49.785 +02:00] [INFO] [rootcoord/root_coord.go:1476] ["received request to show partitions"] [traceID=3f524495387afba9] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=true]
[2025/05/12 00:09:49.785 +02:00] [INFO] [rootcoord/root_coord.go:1507] ["done to show partitions"] [traceID=3f524495387afba9] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=true] [partitions="[_default]"]
[2025/05/12 00:09:49.785 +02:00] [INFO] [datacoord/meta.go:147] ["meta update: add collection"] ["collection ID"=457665900034916433]
[2025/05/12 00:09:49.785 +02:00] [INFO] [datacoord/meta.go:153] ["meta update: add collection - complete"] ["collection ID"=457665900034916433]
[2025/05/12 00:09:49.786 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=indexcoord] [key=indexcoord] [address=192.168.0.100:40003]
[2025/05/12 00:09:49.786 +02:00] [INFO] [client/client.go:108] ["IndexCoordClient GetSessions success"] [key=indexcoord] [msess="{\"indexcoord\":{\"ServerID\":62,\"ServerName\":\"indexcoord\",\"Address\":\"192.168.0.100:40003\",\"Exclusive\":true,\"TriggerKill\":true,\"Version\":\"2.2.16\"}}"]
[2025/05/12 00:09:49.787 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:09:49.787 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965776079159297] [posTime=2025/05/11 23:59:53.759 +02:00]
[2025/05/12 00:09:49.787 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:09:49.787 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:09:49.791 +02:00] [INFO] [config/etcd_source.go:145] ["start refreshing configurations"]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max send size"] [role=querynode] [grpc.clientMaxSendSize=104857600]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init client max recv size"] [role=querynode] [grpc.clientMaxRecvSize=104857600]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init dial timeout"] [role=querynode] [grpc.client.dialTimeout=104857600]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive timeout"] [role=querynode] [grpc.client.keepAliveTimeout=104857600]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init keep alive time"] [role=querynode] [grpc.client.keepAliveTime=104857600]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max attempts"] [role=querynode] [grpc.client.maxMaxAttempts=104857600]
[2025/05/12 00:09:49.796 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init initial back off"] [role=querynode] [grpc.client.initialBackOff=104857600]
[2025/05/12 00:09:49.797 +02:00] [DEBUG] [paramtable/grpc_param.go:263] ["Init max back off"] [role=querynode] [grpc.client.maxBackoff=104857600]
[2025/05/12 00:09:49.798 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:49.801 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=33] ["total memory"=12910] ["next GC"=32] ["new GOGC"=30] [gc-pause=533µs] [gc-pause-end=1747001389800980300]
[2025/05/12 00:09:49.856 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=datanode] [key=by-dev/meta/session/datanode-67]
[2025/05/12 00:09:49.856 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=querycoord] [key=by-dev/meta/session/querycoord]
[2025/05/12 00:09:49.871 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.871 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:49.871 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.871 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:49.871 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.871 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:49.973 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:49.973 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:49.973 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:49.973 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:49.973 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:49.973 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.088 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.088 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.088 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.088 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.088 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.088 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.190 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.190 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.190 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.190 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.190 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.190 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.292 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.292 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.292 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.292 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.292 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.292 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.394 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.394 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.394 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.394 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.394 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.394 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.495 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.495 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.495 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.495 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.495 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.495 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.597 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.597 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.597 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.597 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.597 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.597 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.712 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.712 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.712 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.712 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.712 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.712 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.774 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:09:50.774 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=4000]
[2025/05/12 00:09:50.774 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querycoord] [key=querycoord] [address=192.168.0.100:40001]
[2025/05/12 00:09:50.774 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querycoord] [key=querycoord] [address=192.168.0.100:40001]
[2025/05/12 00:09:50.790 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=fa12015e0ca392f] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:09:50.806 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:50.808 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:50.809 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_controller.go:76 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*ControllerImpl).SyncAll.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:50.809 +02:00] [INFO] [querycoordv2/server.go:423] ["start cluster..."]
[2025/05/12 00:09:50.809 +02:00] [INFO] [querycoordv2/server.go:426] ["start job scheduler..."]
[2025/05/12 00:09:50.810 +02:00] [INFO] [querycoordv2/server.go:429] ["start task scheduler..."]
[2025/05/12 00:09:50.810 +02:00] [INFO] [querycoordv2/server.go:432] ["start checker controller..."]
[2025/05/12 00:09:50.810 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:50.810 +02:00] [INFO] [querycoordv2/server.go:435] ["start observers..."]
[2025/05/12 00:09:50.810 +02:00] [INFO] [observers/target_observer.go:96] ["Start update next target loop"]
[2025/05/12 00:09:50.810 +02:00] [INFO] [observers/replica_observer.go:64] ["Start check replica loop"]
[2025/05/12 00:09:50.810 +02:00] [INFO] [observers/resource_observer.go:61] ["Start check resource group loop"]
[2025/05/12 00:09:50.810 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:50.810 +02:00] [INFO] [querycoordv2/server.go:382] ["QueryCoord started"]
[2025/05/12 00:09:50.810 +02:00] [INFO] [querycoord/service.go:110] ["QueryCoord start done ..."]
[2025/05/12 00:09:50.810 +02:00] [DEBUG] [components/query_coord.go:56] ["QueryCoord successfully started"]
[2025/05/12 00:09:50.814 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.814 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.814 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.814 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.814 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.814 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:50.915 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:50.915 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:50.915 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:50.915 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:50.915 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:50.915 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.017 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.017 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.017 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.017 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.017 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.017 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.118 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.118 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.118 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.118 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.118 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.118 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.219 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.219 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.219 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.219 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.219 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.219 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.322 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.322 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.322 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.322 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.322 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.322 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.423 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.423 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.423 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.423 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.423 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.423 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.525 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.525 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.525 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.525 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.525 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.525 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.627 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.627 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.627 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.627 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.627 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.627 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.729 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.729 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.729 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.729 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.729 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.729 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.816 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:51.815 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:51.816 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:51.816 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:51.817 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:51.817 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=55]
[2025/05/12 00:09:51.818 +02:00] [INFO] [task/scheduler.go:262] ["task added"] [task="[id=1] [type=1] [collectionID=457665900034916433] [replicaID=457665907707084801] [priority=2] [actionsCount=1] [actions={[type=1][node=55]}] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:09:51.831 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.831 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.831 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.831 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.831 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.831 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:51.933 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:51.933 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:51.933 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:51.933 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:51.933 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:51.933 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.048 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.048 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.048 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.048 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.048 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.048 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.150 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.150 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.150 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.150 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.150 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.150 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.251 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.251 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.251 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.251 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.251 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.251 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.285 +02:00] [INFO] [task/scheduler.go:430] ["promoted tasks"] [promotedNum=1] [toRemoveNum=0]
[2025/05/12 00:09:52.285 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:52.285 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:52.285 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:52.285 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:52.353 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.353 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.353 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.353 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.353 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.353 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.455 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.455 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.455 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.455 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.455 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.455 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.556 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.556 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.556 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.556 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.556 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.556 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.658 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.658 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.658 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.658 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.658 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.658 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.760 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.760 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.760 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.760 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.760 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.760 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:52.766 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=6000]
[2025/05/12 00:09:52.782 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:52.782 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:52.782 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:52.782 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:52.782 +02:00] [INFO] [proxy/service.go:628] ["Proxy wait for QueryCoord to be healthy done"]
[2025/05/12 00:09:52.782 +02:00] [INFO] [proxy/service.go:631] ["set QueryCoord client for Proxy done"]
[2025/05/12 00:09:52.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.782 +02:00] [INFO] [proxy/service.go:633] ["update Proxy's state to Initializing"]
[2025/05/12 00:09:52.782 +02:00] [INFO] [proxy/service.go:636] ["init Proxy"]
[2025/05/12 00:09:52.782 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:52.782 +02:00] [INFO] [proxy/proxy.go:184] ["init session for Proxy"]
[2025/05/12 00:09:52.783 +02:00] [INFO] [sessionutil/session_util.go:207] ["Session try to connect to etcd"]
[2025/05/12 00:09:52.783 +02:00] [INFO] [sessionutil/session_util.go:222] ["Session connect to etcd success"]
[2025/05/12 00:09:52.784 +02:00] [INFO] [sessionutil/session_util.go:305] ["Session get serverID success"] [key=id] [ServerId=69]
[2025/05/12 00:09:52.785 +02:00] [WARN] [sessionutil/session_util.go:1044] ["open server info file fail"] [filePath="\\tmp\\milvus\\server_id_23928"] [error="open \\tmp\\milvus\\server_id_23928: The system cannot find the path specified."]
[2025/05/12 00:09:52.785 +02:00] [INFO] [proxy/proxy.go:189] ["init session for Proxy done"]
[2025/05/12 00:09:52.785 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=48753ddbfcd4a592] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:52.787 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=34] ["total memory"=12983] ["next GC"=33] ["new GOGC"=30] [gc-pause=527.8µs] [gc-pause-end=1747001392787745800]
[2025/05/12 00:09:52.785 +02:00] [INFO] [proxy/proxy.go:192] ["init parameters for factory"] [role=proxy] [parametersError="json: unsupported type: func(log.Config)"]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:198] ["Proxy init rateCollector done"] [nodeID=69]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:200] ["create id allocator"] [role=proxy] [ProxyID=69]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:209] ["create id allocator done"] [role=proxy] [ProxyID=69]
[2025/05/12 00:09:52.789 +02:00] [DEBUG] [proxy/proxy.go:211] ["create timestamp allocator"] [role=proxy] [ProxyID=69]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:220] ["create timestamp allocator done"] [role=proxy] [ProxyID=69]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:222] ["create segment id assigner"] [role=proxy] [ProxyID=69]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:232] ["create segment id assigner done"] [role=proxy] [ProxyID=69]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:234] ["create channels manager"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:238] ["create channels manager done"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:240] ["create task scheduler"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:246] ["create task scheduler done"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:249] ["create channels time ticker"] [role=proxy] [syncTimeTickInterval=100ms]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:252] ["create channels time ticker done"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:254] ["create metrics cache manager"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:256] ["create metrics cache manager done"] [role=proxy]
[2025/05/12 00:09:52.789 +02:00] [INFO] [proxy/proxy.go:258] ["init meta cache"] [role=proxy]
[2025/05/12 00:09:52.792 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=fa12015e0ca392f] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:09:52.792 +02:00] [INFO] [proxy/meta_cache.go:200] ["success to init meta cache"] [policy_infos="[\"{\\\"PType\\\":\\\"p\\\",\\\"V0\\\":\\\"public\\\",\\\"V1\\\":\\\"Collection-*.*\\\",\\\"V2\\\":\\\"PrivilegeIndexDetail\\\"}\",\"{\\\"PType\\\":\\\"p\\\",\\\"V0\\\":\\\"public\\\",\\\"V1\\\":\\\"Global-*.*\\\",\\\"V2\\\":\\\"PrivilegeDescribeCollection\\\"}\",\"{\\\"PType\\\":\\\"p\\\",\\\"V0\\\":\\\"public\\\",\\\"V1\\\":\\\"Global-*.*\\\",\\\"V2\\\":\\\"PrivilegeShowCollections\\\"}\"]"]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:263] ["init meta cache done"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/meta_cache.go:840] ["updating shard leader cache every"] [interval=3s]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/service.go:641] ["init Proxy done"]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/service.go:374] ["start Proxy server"]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:352] ["start task scheduler"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:357] ["start task scheduler done"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:359] ["start id allocator"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:364] ["start id allocator done"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:366] ["start segment id assigner"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:371] ["start segment id assigner done"] [role=proxy]
[2025/05/12 00:09:52.793 +02:00] [INFO] [proxy/proxy.go:373] ["start channels time ticker"] [role=proxy]
[2025/05/12 00:09:52.794 +02:00] [INFO] [proxy/proxy.go:378] ["start channels time ticker done"] [role=proxy]
[2025/05/12 00:09:52.794 +02:00] [INFO] [proxy/proxy.go:391] ["update state code"] [role=proxy] [State=Healthy]
[2025/05/12 00:09:52.794 +02:00] [INFO] [sessionutil/session_util.go:368] ["service begin to register to etcd"] [serverName=proxy] [ServerID=69]
[2025/05/12 00:09:52.795 +02:00] [INFO] [sessionutil/session_util.go:405] ["put session key into etcd"] [key=by-dev/meta/session/proxy-69] [value="{\"ServerID\":69,\"ServerName\":\"proxy\",\"Address\":\"192.168.0.100:19529\",\"TriggerKill\":true,\"Version\":\"2.2.16\"}"]
[2025/05/12 00:09:52.795 +02:00] [INFO] [sessionutil/session_util.go:417] ["Service registered successfully"] [ServerName=proxy] [serverID=69]
[2025/05/12 00:09:52.795 +02:00] [INFO] [proxy/proxy.go:135] ["Proxy Register Finished"]
[2025/05/12 00:09:52.795 +02:00] [INFO] [rootcoord/proxy_manager.go:150] ["received proxy put event with session"] [session="Session:<ServerID: 69, ServerName: proxy, Version: 2.2.16>"]
[2025/05/12 00:09:52.795 +02:00] [INFO] [rootcoord/timeticksync.go:226] ["Add session for timeticksync"] [serverID=69]
[2025/05/12 00:09:52.795 +02:00] [WARN] [sessionutil/session_util.go:337] ["fail to get the session key from the etcd"] []
[2025/05/12 00:09:52.795 +02:00] [INFO] [proxy/service.go:660] ["start Proxy http server"]
[2025/05/12 00:09:52.795 +02:00] [INFO] [proxy/service.go:379] ["start Proxy server done"]
[2025/05/12 00:09:52.795 +02:00] [INFO] [components/proxy.go:55] ["Proxy successfully started"]
[2025/05/12 00:09:52.815 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:52.815 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:52.815 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:09:52.815 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:09:52.829 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:52.829 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:52.829 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:52.829 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:52.861 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=proxy] [key=by-dev/meta/session/proxy-69]
[2025/05/12 00:09:52.861 +02:00] [DEBUG] [indexcoord/index_coord.go:400] ["get IndexCoord component states ..."]
[2025/05/12 00:09:52.861 +02:00] [DEBUG] [indexcoord/index_coord.go:420] ["IndexCoord GetComponentStates"] ["IndexCoord component state"="nodeID:62 role:\"IndexCoord\" state_code:Healthy "]
[2025/05/12 00:09:52.861 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:52.861 +02:00] [DEBUG] [datanode/data_node.go:561] ["DataNode current state"] [State=Healthy]
[2025/05/12 00:09:52.861 +02:00] [DEBUG] [indexnode/indexnode.go:287] ["get IndexNode components states ..."]
[2025/05/12 00:09:52.861 +02:00] [DEBUG] [indexnode/indexnode.go:307] ["IndexNode Component states"] [State="nodeID:64 role:\"indexnode\" state_code:Healthy "] [Status=] [SubcomponentStates=null]
[2025/05/12 00:09:53.296 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:53.296 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:53.296 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:53.296 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:53.795 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=48753ddbfcd4a592] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:53.795 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:53.795 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:53.795 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch"]
[2025/05/12 00:09:53.795 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:53.795 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:53.795 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:53.795 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:53.810 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:53.810 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:53.842 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:53.843 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:53.843 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:53.843 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:53.906 +02:00] [INFO] [proxy/impl.go:5577] ["connect received"] [traceID=3d497c931f740c89] [sdk_type=Python] [sdk_version=2.5.8] [local_time="2025-05-12 00:09:53.902616"] [user=] [host=Sai] [db=default]
[2025/05/12 00:09:53.907 +02:00] [INFO] [rootcoord/root_coord.go:908] ["received request to list databases"] [traceID=3d497c931f740c89] [msgID=0]
[2025/05/12 00:09:53.907 +02:00] [INFO] [rootcoord/root_coord.go:936] ["done to list databases"] [traceID=3d497c931f740c89] [msgID=0] ["num of databases"=1]
[2025/05/12 00:09:53.908 +02:00] [INFO] [proxy/client_info.go:45] ["client register"] [traceID=3d497c931f740c89] [sdk_type=Python] [sdk_version=2.5.8] [local_time="2025-05-12 00:09:53.902616"] [user=] [host=Sai] [identifier=457965933395181571] [last_active_time=2025/05/12 00:09:53.908 +02:00] [db=default]
[2025/05/12 00:09:54.292 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:54.292 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:54.292 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:54.292 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:54.774 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=8000]
[2025/05/12 00:09:54.790 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:54.790 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:54.790 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:54.790 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:54.806 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=8000]
[2025/05/12 00:09:54.821 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:54.821 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:54.821 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:09:54.821 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:09:54.852 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:54.854 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:54.855 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:54.855 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:55.288 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:55.288 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:55.288 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:55.288 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:55.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:55.787 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:55.787 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:55.787 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:55.787 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:55.787 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:55.802 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=48753ddbfcd4a592] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:55.802 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:341 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:190 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:189 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/handlers.go:278 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).tryGetNodesMetrics.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:341\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:190\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:189\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).tryGetNodesMetrics.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/handlers.go:278\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:341 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:190 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:189 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/handlers.go:278 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).tryGetNodesMetrics.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:55.802 +02:00] [WARN] [querycoordv2/handlers.go:280] ["failed to get metric from QueryNode"] [nodeID=55]
[2025/05/12 00:09:55.818 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:55.818 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:55.865 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:55.865 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:55.867 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=30] ["heapuse "=35] ["total memory"=9940] ["next GC"=34] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747001395867197700]
[2025/05/12 00:09:55.867 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:55.868 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:56.287 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:56.287 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:56.287 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:56.287 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:56.770 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=10000]
[2025/05/12 00:09:56.786 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:56.786 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:56.786 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:56.786 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:56.801 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:56.801 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=10000]
[2025/05/12 00:09:56.801 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:56.801 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [traceID=fa12015e0ca392f] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:09:56.801 +02:00] [WARN] [querycoordv2/server.go:691] ["unhealthy node exist, node up will be delayed"] [delayedNodeUpEvents=0] [unhealthyNodeNum=1] [unhealthyReason="[\"role querynode[nodeID: 55] is unhealthy, reason: inner error: stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing\"]"]
[2025/05/12 00:09:56.803 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=datanode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059\n  | github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630\n  | github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/interceptor.ClusterValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/cluster_interceptor.go:61\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/logutil.UnaryTraceLoggerInterceptor\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/logutil/grpc_interceptor.go:22\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing.UnaryServerInterceptor.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/tracing/opentracing/server_interceptors.go:38\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:34\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6632\n  | google.golang.org/grpc.(*Server).processUnaryRPC\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1295\n  | google.golang.org/grpc.(*Server).handleStream\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1636\n  | google.golang.org/grpc.(*Server).serveStreams.func1.2\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:932\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:56.805 +02:00] [WARN] [datacoord/metrics_info.go:169] ["invalid metrics of DataNode was found"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82\n  | github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059\n  | github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630\n  | github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/interceptor.ClusterValidationUnaryServerInterceptor.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/cluster_interceptor.go:61\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/milvus-io/milvus/internal/util/logutil.UnaryTraceLoggerInterceptor\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/logutil/grpc_interceptor.go:22\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing.UnaryServerInterceptor.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/tracing/opentracing/server_interceptors.go:38\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:25\n  | github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.3.0/chain.go:34\n  | github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6632\n  | google.golang.org/grpc.(*Server).processUnaryRPC\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1295\n  | google.golang.org/grpc.(*Server).handleStream\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:1636\n  | google.golang.org/grpc.(*Server).serveStreams.func1.2\n  | \tC:/Users/runneradmin/go/pkg/mod/google.golang.org/grpc@v1.48.0/server.go:932\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:205 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:167 github.com/milvus-io/milvus/internal/datacoord.(*Server).getDataNodeMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/metrics_info.go:82 github.com/milvus-io/milvus/internal/datacoord.(*Server).getSystemInfoMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/services.go:1059 github.com/milvus-io/milvus/internal/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/service.go:360 github.com/milvus-io/milvus/internal/distributed/datacoord.(*Server).GetMetrics\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proto/datapb/data_coord.pb.go:6630 github.com/milvus-io/milvus/internal/proto/datapb._DataCoord_GetMetrics_Handler.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/interceptor/server_id_interceptor.go:66 github.com/milvus-io/milvus/internal/util/interceptor.ServerIDValidationUnaryServerInterceptor.func1\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:56.817 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:56.817 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:56.817 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:09:56.817 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:09:56.879 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:56.880 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:56.880 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:56.881 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:57.052 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:09:57.285 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:57.285 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:57.285 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:57.285 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:57.784 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:57.784 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:57.784 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:57.784 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:57.815 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:57.815 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:57.893 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:57.894 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:57.895 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:57.895 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:58.064 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:09:58.283 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:58.283 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:58.283 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:58.283 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:58.782 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=12000]
[2025/05/12 00:09:58.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:09:58.782 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:58.783 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:58.783 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:58.783 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:58.783 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:58.797 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=12000]
[2025/05/12 00:09:58.813 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:58.813 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:58.813 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:09:58.813 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:09:58.906 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:58.906 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:58.906 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:58.906 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:59.295 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:59.295 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:59.295 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:59.295 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:59.795 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:09:59.795 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:59.795 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:59.795 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:09:59.795 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:09:59.795 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:09:59.810 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:09:59.810 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:09:59.922 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:09:59.923 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:59.923 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:09:59.924 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:00.077 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:10:00.292 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:00.292 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:00.292 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:00.292 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:00.780 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=14000]
[2025/05/12 00:10:00.780 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:00.781 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:00.781 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:00.781 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:00.795 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=14000]
[2025/05/12 00:10:00.825 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:00.825 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:00.825 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:00.825 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:00.932 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:00.934 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:00.934 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:00.935 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:01.282 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:01.282 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:01.282 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:01.282 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:01.795 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:01.795 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:01.795 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:01.795 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:01.795 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:01.795 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:01.810 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:01.810 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:01.810 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=proxy] [error="rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch"]
[2025/05/12 00:10:01.811 +02:00] [WARN] [retry/retry.go:41] ["retry func failed"] ["retry time"=4] [error="rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch"]
[2025/05/12 00:10:01.949 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:01.949 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:01.949 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:01.950 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:02.291 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:02.291 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:02.292 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:02.292 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:02.803 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:02.803 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:02.805 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=16000]
[2025/05/12 00:10:02.805 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=16000]
[2025/05/12 00:10:02.806 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:02.806 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:02.806 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:02.806 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:02.819 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:02.819 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:02.819 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:02.819 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:02.958 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:02.958 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:02.959 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:02.972 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:03.290 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:03.290 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:03.290 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:03.290 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:03.794 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:03.794 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:03.794 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:03.794 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:03.824 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:03.824 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:03.978 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:03.979 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:03.980 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:03.980 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:04.086 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:10:04.087 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=datanode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:04.087 +02:00] [INFO] [datacoord/session_manager.go:251] ["Get State failed"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:04.285 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:04.285 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:04.285 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:04.285 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:04.777 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=18000]
[2025/05/12 00:10:04.793 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:04.793 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:04.793 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:04.793 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:04.793 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:04.793 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:04.794 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=18000]
[2025/05/12 00:10:04.824 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:04.824 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:04.824 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:04.824 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:04.995 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:04.996 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:04.997 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:04.997 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:05.289 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:05.289 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:05.289 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:05.289 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:05.783 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:05.783 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:05.783 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:05.783 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:05.798 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:05.798 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:05.798 +02:00] [WARN] [querycoordv2/server.go:691] ["unhealthy node exist, node up will be delayed"] [delayedNodeUpEvents=0] [unhealthyNodeNum=1] [unhealthyReason="[\"role querynode[nodeID: 55] is unhealthy, reason: inner error: stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing\"]"]
[2025/05/12 00:10:05.814 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:05.814 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:06.013 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:06.014 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:06.014 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:06.014 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:06.290 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:06.290 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:06.290 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:06.290 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:06.779 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=20000]
[2025/05/12 00:10:06.794 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=20000]
[2025/05/12 00:10:06.794 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:06.794 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:06.794 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:06.794 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:06.810 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:06.810 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:06.810 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:06.810 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:07.026 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:07.027 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:07.027 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:07.028 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:07.057 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:10:07.287 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:07.287 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:07.287 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:07.287 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:07.793 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:07.793 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:07.793 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:07.793 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:07.793 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:07.793 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:07.824 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:07.824 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:08.039 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:08.039 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:08.039 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:08.040 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:08.069 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:10:08.223 +02:00] [INFO] [sessionutil/session_util.go:706] ["watch services"] ["delete kv"="key:\"by-dev/meta/session/querynode-55\" create_revision:8939 mod_revision:9034 version:2 value:\"{\\\"ServerID\\\":55,\\\"ServerName\\\":\\\"querynode\\\",\\\"Address\\\":\\\"192.168.0.100:40002\\\",\\\"Stopping\\\":true,\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704377997342 "]
[2025/05/12 00:10:08.223 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionDelEvent]
[2025/05/12 00:10:08.223 +02:00] [INFO] [querycoordv2/server.go:659] ["a node down, remove it"] [nodeID=55]
[2025/05/12 00:10:08.223 +02:00] [INFO] [task/merger.go:84] ["Merger stopped"]
[2025/05/12 00:10:08.223 +02:00] [INFO] [sessionutil/session_util.go:706] ["watch services"] ["delete kv"="key:\"by-dev/meta/session/indexnode-56\" create_revision:8938 mod_revision:8938 version:1 value:\"{\\\"ServerID\\\":56,\\\"ServerName\\\":\\\"indexnode\\\",\\\"Address\\\":\\\"192.168.0.100:40004\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704377997334 "]
[2025/05/12 00:10:08.223 +02:00] [INFO] [task/scheduler.go:237] ["remove executor of offline QueryNode"] [nodeID=55]
[2025/05/12 00:10:08.223 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionDelEvent]
[2025/05/12 00:10:08.223 +02:00] [INFO] [sessionutil/session_util.go:706] ["watch services"] ["delete kv"="key:\"by-dev/meta/session/datanode-59\" create_revision:8948 mod_revision:8948 version:1 value:\"{\\\"ServerID\\\":59,\\\"ServerName\\\":\\\"datanode\\\",\\\"Address\\\":\\\"192.168.0.100:40006\\\",\\\"TriggerKill\\\":true,\\\"Version\\\":\\\"2.2.16\\\"}\" lease:7587886704377997427 "]
[2025/05/12 00:10:08.223 +02:00] [INFO] [sessionutil/session_util.go:718] [WatchService] ["event type"=SessionDelEvent]
[2025/05/12 00:10:08.223 +02:00] [INFO] [datacoord/server.go:793] ["received datanode unregister"] [address=192.168.0.100:40006] [serverID=59]
[2025/05/12 00:10:08.224 +02:00] [INFO] [indexcoord/index_coord.go:1205] ["IndexCoord watchNodeLoop SessionDelEvent"] [serverID=56]
[2025/05/12 00:10:08.224 +02:00] [INFO] [indexcoord/node_manager.go:76] [IndexCoord] ["Remove node with ID"=56]
[2025/05/12 00:10:08.224 +02:00] [INFO] [msgstream/msgstream_util.go:29] ["unsubscribe channel"] [subname=by-dev-dataNode-59-by-dev-rootcoord-dml_2_457665900034916433v0] [channels="[by-dev-rootcoord-dml_2]"]
[2025/05/12 00:10:08.225 +02:00] [INFO] [server/rocksmq_impl.go:480] ["Rocksmq create consumer group successfully "] [topic=by-dev-rootcoord-dml_2] [group=by-dev-dataNode-59-by-dev-rootcoord-dml_2_457665900034916433v0] [elapsed=0]
[2025/05/12 00:10:08.225 +02:00] [INFO] [server/rocksmq_impl.go:506] ["Rocksmq register consumer successfully "] [topic=by-dev-rootcoord-dml_2] [elapsed=0]
[2025/05/12 00:10:08.225 +02:00] [DEBUG] [rmq/rmq_client.go:91] ["tr/create consumer"] [msg="create consumer done"] [duration=527.2µs]
[2025/05/12 00:10:08.225 +02:00] [INFO] [msgstream/mq_msgstream.go:170] ["Successfully create consumer"] [channel=by-dev-rootcoord-dml_2] [subname=by-dev-dataNode-59-by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:08.225 +02:00] [INFO] [msgstream/mq_msgstream.go:182] ["start to close mq msg stream"] ["producer num"=0] ["consumer num"=1]
[2025/05/12 00:10:08.225 +02:00] [WARN] [datacoord/channel_manager.go:375] ["deregister node"] ["unregistered node"=59] [updates="[\"{type=Delete,nodeID=59,channels=\\\"[by-dev-rootcoord-dml_2_457665900034916433v0]\\\"}\",\"{type=Add,nodeID=67,channels=\\\"[by-dev-rootcoord-dml_2_457665900034916433v0]\\\"}\"]"]
[2025/05/12 00:10:08.225 +02:00] [INFO] [datacoord/channel_manager.go:393] ["remove timers for channel of the deregistered node"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [nodeID=59]
[2025/05/12 00:10:08.225 +02:00] [INFO] [datacoord/handler.go:63] [GetDataVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:10:08.225 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965776079159297] [posTime=2025/05/11 23:59:53.759 +02:00]
[2025/05/12 00:10:08.225 +02:00] [INFO] [datacoord/channel_checker.go:110] ["timer started"] ["watch state"=ToWatch] [nodeID=67] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0] ["check interval"=2m0s]
[2025/05/12 00:10:08.227 +02:00] [INFO] [datacoord/channel_manager.go:722] ["tickle update, timer delay"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [progress=0]
[2025/05/12 00:10:08.227 +02:00] [INFO] [datanode/data_node.go:357] ["DataNode is handling watchInfo PUT event"] [key=by-dev/meta/channelwatch/67/by-dev-rootcoord-dml_2_457665900034916433v0] ["watch state"=ToWatch]
[2025/05/12 00:10:08.229 +02:00] [INFO] [datanode/data_sync_service.go:189] ["begin to init data sync service"] [collection=457665900034916433] [Chan=by-dev-rootcoord-dml_2_457665900034916433v0] [unflushed="[457665900035116791]"] [flushed="[]"]
[2025/05/12 00:10:08.231 +02:00] [INFO] [datanode/data_sync_service.go:222] ["recover growing segments form checkpoints"] [vChannelName=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentID=457665900035116791] [numRows=40]
[2025/05/12 00:10:08.231 +02:00] [INFO] [datanode/channel_meta.go:212] ["adding segment"] [type=Normal] [segmentID=457665900035116791] [collectionID=457665900034916433] [partitionID=457665900034916434] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [startPosition=<nil>] [endPosition="channel_name:\"by-dev-rootcoord-dml_2_457665900034916433v0\" msgID:\"\\2722\\350\\004\\266\\364Y\\006\" msgGroup:\"by-dev-dataNode-38-by-dev-rootcoord-dml_2_457665900034916433v0\" timestamp:457666085413715971 "] [recoverTs=457965776079159297] [importing=false]
[2025/05/12 00:10:08.231 +02:00] [INFO] [datanode/channel_meta.go:382] ["begin to init pk bloom filter"] [segmentID=457665900035116791] [statsBinLogsLen=1]
[2025/05/12 00:10:08.232 +02:00] [INFO] [datanode/channel_meta.go:434] ["Successfully load pk stats"] [segmentID=457665900035116791] [time=1.0051ms] [size=442]
[2025/05/12 00:10:08.232 +02:00] [INFO] [server/rocksmq_impl.go:480] ["Rocksmq create consumer group successfully "] [topic=by-dev-rootcoord-dml_2] [group=by-dev-dataNode-67-by-dev-rootcoord-dml_2_457665900034916433v0] [elapsed=0]
[2025/05/12 00:10:08.232 +02:00] [INFO] [server/rocksmq_impl.go:506] ["Rocksmq register consumer successfully "] [topic=by-dev-rootcoord-dml_2] [elapsed=0]
[2025/05/12 00:10:08.232 +02:00] [DEBUG] [rmq/rmq_client.go:91] ["tr/create consumer"] [msg="create consumer done"] [duration=0s]
[2025/05/12 00:10:08.232 +02:00] [INFO] [datanode/flow_graph_dmstream_input_node.go:56] ["datanode begin to seek"] ["seek msgID"="1\u0005Xpi\u0005[\u0006"] [pchannel=by-dev-rootcoord-dml_2] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0] [position=2025/05/11 23:59:53.759 +02:00] [tsLag=10m14.4739298s] ["collection ID"=457665900034916433]
[2025/05/12 00:10:08.232 +02:00] [INFO] [msgstream/mq_msgstream.go:882] ["MsgStream begin to seek start msg: "] [channel=by-dev-rootcoord-dml_2] [MessageID="MQVYcGkFWwY="]
[2025/05/12 00:10:08.233 +02:00] [INFO] [server/rocksmq_impl.go:853] ["successfully seek"] [topic=by-dev-rootcoord-dml_2] [group=by-dev-dataNode-67-by-dev-rootcoord-dml_2_457665900034916433v0] [msgId=457965737522758961]
[2025/05/12 00:10:08.233 +02:00] [INFO] [msgstream/mq_msgstream.go:892] ["MsgStream seek finished"] [channel=by-dev-rootcoord-dml_2]
[2025/05/12 00:10:08.233 +02:00] [INFO] [datanode/flow_graph_dmstream_input_node.go:69] ["datanode seek successfully"] ["seek msgID"="1\u0005Xpi\u0005[\u0006"] [pchannel=by-dev-rootcoord-dml_2] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0] [position=2025/05/11 23:59:53.759 +02:00] [tsLag=10m14.4749288s] ["collection ID"=457665900034916433] [elapse=999µs]
[2025/05/12 00:10:08.233 +02:00] [INFO] [datanode/flow_graph_dmstream_input_node.go:81] ["datanode AsConsumer"] ["physical channel"=by-dev-rootcoord-dml_2] [subName=by-dev-dataNode-67-by-dev-rootcoord-dml_2_457665900034916433v0] ["collection ID"=457665900034916433]
[2025/05/12 00:10:08.233 +02:00] [INFO] [datanode/flow_graph_dd_node.go:401] ["ddNode convert vChannel to pChannel"] [vChannelName=by-dev-rootcoord-dml_2_457665900034916433v0] [pChannelName=by-dev-rootcoord-dml_2]
[2025/05/12 00:10:08.233 +02:00] [WARN] [server/rocksmq_impl.go:358] ["rocksmq topic already exists "] [topic=by-dev-rootcoord-delta_2]
[2025/05/12 00:10:08.233 +02:00] [DEBUG] [rmq/rmq_client.go:65] ["tr/create producer"] [msg="create producer done"] [duration=0s]
[2025/05/12 00:10:08.233 +02:00] [INFO] [datanode/flow_graph_dd_node.go:413] ["datanode AsProducer"] [DeltaChannelName=by-dev-rootcoord-delta_2]
[2025/05/12 00:10:08.233 +02:00] [INFO] [datanode/flow_graph_dd_node.go:438] ["ddNode add sealed and growing segments"] [collectionID=457665900034916433] ["No. sealed segments"=0] ["No. growing segments"=1]
[2025/05/12 00:10:08.234 +02:00] [INFO] [datanode/data_sync_service.go:150] ["dataSyncService starting flow graph"] [collectionID=457665900034916433] [vChanName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:08.234 +02:00] [INFO] [datanode/data_node.go:411] ["handle put event: new data sync service success"] [vChanName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:08.235 +02:00] [INFO] [datanode/data_node.go:443] ["handle put event success"] [key=channelwatch/67/by-dev-rootcoord-dml_2_457665900034916433v0] [state=WatchSuccess] [vChanName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:08.235 +02:00] [INFO] [datanode/data_node.go:346] ["DataNode received a PUT event with an end State"] [state=WatchSuccess]
[2025/05/12 00:10:08.235 +02:00] [INFO] [datacoord/channel_checker.go:164] ["stop timer for channel"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [timerCount=0]
[2025/05/12 00:10:08.235 +02:00] [INFO] [datacoord/channel_checker.go:131] ["stop timer before timeout"] ["watch state"=ToWatch] [nodeID=67] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0] ["timeout interval"=2m0s] [runningTimerCount=0]
[2025/05/12 00:10:08.235 +02:00] [INFO] [datacoord/channel_manager.go:627] ["datanode successfully watched channel"] [nodeID=67] ["channel name"=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.238 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457965776132374529] [time=2025/05/11 23:59:53.962 +02:00]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457965776132374529] [cpTime=2025/05/11 23:59:53.962 +02:00]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.239 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457965776144695297] [time=2025/05/11 23:59:54.009 +02:00]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457965776144695297] [cpTime=2025/05/11 23:59:54.009 +02:00]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.240 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.241 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.242 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.243 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:08.282 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:08.282 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:08.282 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:08.282 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:08.775 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=22000]
[2025/05/12 00:10:08.791 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:08.791 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:08.791 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:08.791 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:08.807 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:08.807 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=22000]
[2025/05/12 00:10:08.807 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Canceled desc = grpc: the client connection is closing"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Canceled desc = grpc: the client connection is closing\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220\n  | github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:104 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:221 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:220 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetComponentStates\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/services.go:1000 github.com/milvus-io/milvus/internal/querycoordv2.(*Server).checkNodeHealth.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Canceled desc = grpc: the client connection is closing\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:08.822 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:08.822 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:08.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:08.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:09.054 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querynode] [error="rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"]
[2025/05/12 00:10:09.055 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=querynode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:09.055 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241\n  | github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215\n  | github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querynode/client/client.go:371 github.com/milvus-io/milvus/internal/distributed/querynode/client.(*Client).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:176 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution.func1\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:241 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).send\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/session/cluster.go:171 github.com/milvus-io/milvus/internal/querycoordv2/session.(*QueryCluster).GetDataDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:215 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).getDistribution\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/querycoordv2/dist/dist_handler.go:71 github.com/milvus-io/milvus/internal/querycoordv2/dist.(*distHandler).start\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=55), actual=%!s(int64=63): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:09.055 +02:00] [WARN] [dist/dist_handler.go:90] ["failed to get data distribution"] [error=NodeNotFound(55)]
[2025/05/12 00:10:09.055 +02:00] [INFO] [dist/dist_handler.go:68] ["close dist handelr"] [nodeID=55]
[2025/05/12 00:10:09.057 +02:00] [INFO] [querycoordv2/server.go:757] ["remove node from replica"] [nodeID=55] [collectionID=457665900034916433] [replicaID=457665907707084801]
[2025/05/12 00:10:09.057 +02:00] [INFO] [task/scheduler.go:750] ["task removed"] [taskID=1] [taskStatus=2] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:09.058 +02:00] [INFO] [meta/resource_manager.go:505] ["HandleNodeDown: remove node from resource group"] [rgName=__default_resource_group] [node=55]
[2025/05/12 00:10:09.058 +02:00] [INFO] [querycoordv2/server.go:773] ["HandleNodeDown: remove node from resource group"] [nodeID=55] [resourceGroup=__default_resource_group]
[2025/05/12 00:10:09.820 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:09.820 +02:00] [INFO] [balance/utils.go:98] ["Create Channel task"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [From=-1] [To=63]
[2025/05/12 00:10:09.820 +02:00] [INFO] [task/scheduler.go:262] ["task added"] [task="[id=2] [type=1] [collectionID=457665900034916433] [replicaID=457665907707084801] [priority=2] [actionsCount=1] [actions={[type=1][node=63]}] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.081 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:10:10.281 +02:00] [INFO] [task/scheduler.go:430] ["promoted tasks"] [promotedNum=1] [toRemoveNum=0]
[2025/05/12 00:10:10.281 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:10.281 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=1] ["time cost"=0s]
[2025/05/12 00:10:10.281 +02:00] [INFO] [task/executor.go:105] ["execute the action of task"] [taskID=2] [step=0] [source=1]
[2025/05/12 00:10:10.281 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=1] [failCount=0] [toRemoveNum=0]
[2025/05/12 00:10:10.281 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:10.284 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=3a7221a793e73c7] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:10:10.284 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=3a7221a793e73c7] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:10:10.284 +02:00] [INFO] [rootcoord/root_coord.go:1476] ["received request to show partitions"] [traceID=18bcf11e26013f13] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=false]
[2025/05/12 00:10:10.284 +02:00] [INFO] [rootcoord/root_coord.go:1507] ["done to show partitions"] [traceID=18bcf11e26013f13] [collection=] [collectionID=457665900034916433] [msgID=0] [allowUnavailable=false] [partitions="[_default]"]
[2025/05/12 00:10:10.285 +02:00] [INFO] [indexcoord/index_coord.go:890] ["IndexCoord receive DescribeIndex"] [collectionID=457665900034916433] [indexName=] [timestamp=0]
[2025/05/12 00:10:10.285 +02:00] [INFO] [datacoord/services.go:920] ["received get flushed segments request"] [collectionID=457665900034916433] [partitionID=-1]
[2025/05/12 00:10:10.285 +02:00] [DEBUG] [indexcoord/meta_table.go:736] ["IndexCoord get index states success"] [indexID=457665900035116801] [indexRows=0]
[2025/05/12 00:10:10.287 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:10.287 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=32c8d90948e483ab] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:10:10.287 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=32c8d90948e483ab] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:10:10.288 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:10:10.288 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965776144695297] [posTime=2025/05/11 23:59:54.009 +02:00]
[2025/05/12 00:10:10.288 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:10:10.288 +02:00] [INFO] [indexcoord/meta_table.go:659] ["IndexCoord get index states success"] [indexID=457665900035116801] [total=0] [None=0] [Unissued=0] [InProgress=0] [Finished=0] [Failed=0]
[2025/05/12 00:10:10.288 +02:00] [INFO] [indexcoord/index_coord.go:635] ["IndexCoord completeIndexInfo success"] [collID=457665900034916433] [totalRows=0] [indexRows=0] [state=Finished] [failReason=]
[2025/05/12 00:10:10.288 +02:00] [INFO] [indexcoord/index_coord.go:955] ["IndexCoord DescribeIndex success"] [collectionID=457665900034916433] [indexID=457665900035116801] ["total rows"=0] ["indexed rows"=0] ["pending index rows"=0] ["index state"=Finished] ["check segment num"=0]
[2025/05/12 00:10:10.289 +02:00] [INFO] [task/executor.go:434] ["subscribe channel..."] [taskID=2] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [node=63] [source=1] [checkpoint=457965776079159297] [sinceCheckpoint=10m16.5303554s]
[2025/05/12 00:10:10.290 +02:00] [INFO] [querynode/impl.go:356] ["watchDmChannels init"] [collectionID=457665900034916433] [nodeID=63] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.290 +02:00] [INFO] [querynode/impl.go:359] ["watchDmChannels start "] [collectionID=457665900034916433] [nodeID=63] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [timeInQueue=0s]
[2025/05/12 00:10:10.291 +02:00] [INFO] [querynode/watch_dm_channels_task.go:84] ["Starting WatchDmChannels ..."] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [replicaID=457665907707084801] [loadType=LoadCollection] [collectionName=rag_collection] [metricType=IP]
[2025/05/12 00:10:10.297 +02:00] [INFO] [querynode/collection.go:421] ["create collection"] [collectionID=457665900034916433]
[2025/05/12 00:10:10.297 +02:00] [INFO] [querynode/shard_cluster_service.go:81] ["successfully add shard cluster"] [collectionID=457665900034916433] [replica=457665907707084801] [vchan=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.298 +02:00] [INFO] [querynode/collection.go:91] ["queryNode collection info after add a partition"] [partitionID=457665900034916434] [collectionID=457665900034916433] [partitions="[457665900034916434]"]
[2025/05/12 00:10:10.298 +02:00] [INFO] [querynode/partition.go:114] ["create partition"] [partitionID=457665900034916434]
[2025/05/12 00:10:10.298 +02:00] [INFO] [querynode/watch_dm_channels_task.go:243] ["loading growing segments in WatchDmChannels..."] [collectionID=457665900034916433] [unFlushedSegmentIDs="[457665900035116791]"]
[2025/05/12 00:10:10.298 +02:00] [INFO] [querynode/segment_loader.go:124] ["segmentLoader start loading..."] [collectionID=457665900034916433] [segmentType=Growing] [segmentNum=1] [msgID=2]
[2025/05/12 00:10:10.298 +02:00] [INFO] [querynode/segment_loader.go:909] ["predict memory and disk usage while loading (in MiB)"] [collectionID=457665900034916433] [concurrency=1] [maxSegmentSize=0] [memUsage=10063] [freeMemory=4031] [totalMemory=14095] [predictMemUsage=10063] [predictPeakMemUsage=10064] [diskUsage=0] [predictDiskUsage=0] [totalDisk=348160]
[2025/05/12 00:10:10.299 +02:00] [INFO] [querynode/segment.go:268] ["create segment"] [collectionID=457665900034916433] [partitionID=457665900034916434] [segmentID=457665900035116791] [segmentType=Growing] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.300 +02:00] [INFO] [querynode/segment_loader.go:219] ["start to load segments in parallel"] [collectionID=457665900034916433] [segmentType=Growing] [segmentNum=1] [concurrencyLevel=1]
[2025/05/12 00:10:10.300 +02:00] [INFO] [querynode/segment_loader.go:259] ["start loading segment data into memory"] [collectionID=457665900034916433] [partitionID=457665900034916434] [segmentID=457665900035116791] [segmentType=Growing]
[2025/05/12 00:10:10.364 +02:00] [INFO] [querynode/segment.go:1025] ["load mutil field done"] ["row count"=40] [segmentID=457665900035116791]
[2025/05/12 00:10:10.364 +02:00] [INFO] [querynode/segment_loader.go:326] ["loading bloom filter..."] [segmentID=457665900035116791]
[2025/05/12 00:10:10.365 +02:00] [INFO] [querynode/segment_loader.go:602] ["Successfully load pk stats"] [time=505.4µs] [segment=457665900035116791] [size=442]
[2025/05/12 00:10:10.365 +02:00] [INFO] [querynode/segment_loader.go:334] ["loading delta..."] [segmentID=457665900035116791]
[2025/05/12 00:10:10.365 +02:00] [INFO] [querynode/segment_loader.go:623] ["there are no delta logs saved with segment, skip loading delete record"] [segmentID=457665900035116791]
[2025/05/12 00:10:10.368 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=49] ["total memory"=10062] ["next GC"=90] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747001410367831400]
[2025/05/12 00:10:10.370 +02:00] [DEBUG] [funcutil/parallel.go:51] [loadSegmentFunc] [total=1] ["time cost"=69.609ms]
[2025/05/12 00:10:10.370 +02:00] [INFO] [querynode/partition.go:74] ["add a segment to replica"] [collectionID=457665900034916433] [partitionID=457665900034916434] [segmentID=457665900035116791] [segmentType=Growing]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/meta_replica.go:616] ["new segment added to collection replica"] ["query node ID"=63] ["collection ID"=457665900034916433] ["partition ID"=457665900034916434] ["segment ID"=457665900035116791] ["segment type"=Growing] ["row count"=40] ["segment indexed fields"=0] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/watch_dm_channels_task.go:262] ["successfully load growing segments done in WatchDmChannels"] [collectionID=457665900034916433] [unFlushedSegmentIDs="[457665900035116791]"]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/watch_dm_channels_task.go:286] ["watchDMChannel, group channels done"] [collectionID=457665900034916433]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/watch_dm_channels_task.go:301] ["watchDMChannel, add check points info for unflushed segments done"] [collectionID=457665900034916433] [unflushedSegmentIDs="[457665900035116791]"]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/watch_dm_channels_task.go:326] ["watchDMChannel, add check points info for flushed segments done"] [collectionID=457665900034916433] [flushedSegmentIDs="[]"]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/watch_dm_channels_task.go:353] ["watchDMChannel, add check points info for dropped segments done"] [collectionID=457665900034916433] [droppedSegmentIDs="[]"]
[2025/05/12 00:10:10.371 +02:00] [INFO] [querynode/data_sync_service.go:88] ["add DML flow graph"] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.372 +02:00] [INFO] [querynode/watch_dm_channels_task.go:364] ["Query node add DML flow graphs"] [collectionID=457665900034916433] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.372 +02:00] [INFO] [server/rocksmq_impl.go:480] ["Rocksmq create consumer group successfully "] [topic=by-dev-rootcoord-dml_2] [group=by-dev-queryNode-457665900034916433-63] [elapsed=0]
[2025/05/12 00:10:10.372 +02:00] [INFO] [server/rocksmq_impl.go:506] ["Rocksmq register consumer successfully "] [topic=by-dev-rootcoord-dml_2] [elapsed=0]
[2025/05/12 00:10:10.372 +02:00] [DEBUG] [rmq/rmq_client.go:91] ["tr/create consumer"] [msg="create consumer done"] [duration=0s]
[2025/05/12 00:10:10.372 +02:00] [INFO] [msgstream/mq_msgstream.go:882] ["MsgStream begin to seek start msg: "] [channel=by-dev-rootcoord-dml_2] [MessageID="MQVYcGkFWwY="]
[2025/05/12 00:10:10.372 +02:00] [INFO] [server/rocksmq_impl.go:853] ["successfully seek"] [topic=by-dev-rootcoord-dml_2] [group=by-dev-queryNode-457665900034916433-63] [msgId=457965737522758961]
[2025/05/12 00:10:10.372 +02:00] [INFO] [msgstream/mq_msgstream.go:892] ["MsgStream seek finished"] [channel=by-dev-rootcoord-dml_2]
[2025/05/12 00:10:10.372 +02:00] [INFO] [querynode/flow_graph_query_node.go:266] ["query node flow graph seeks from position"] [collectionID=457665900034916433] [pchannel=by-dev-rootcoord-dml_2] [vchannel=by-dev-rootcoord-dml_2_457665900034916433v0] [checkpointTs=2025/05/11 23:59:53.759 +02:00] [tsLag=10m16.6135764s] [elapse=525.5µs]
[2025/05/12 00:10:10.372 +02:00] [INFO] [querynode/watch_dm_channels_task.go:402] ["watchDMChannel, add flowGraph for dmChannels success"] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.372 +02:00] [INFO] [querynode/watch_dm_channels_task.go:143] ["watchDMChannel, init replica done"] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [replicaID=457665907707084801]
[2025/05/12 00:10:10.372 +02:00] [INFO] [querynode/tsafe_replica.go:139] ["add tSafe done"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.373 +02:00] [INFO] [querynode/query_shard_service.go:103] ["Successfully add new query shard"] [collection=457665900034916433] [replica=457665907707084801] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.373 +02:00] [INFO] [querynode/watch_dm_channels_task.go:162] ["WatchDmChannels done"] [collectionID=457665900034916433] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [replicaID=457665907707084801]
[2025/05/12 00:10:10.373 +02:00] [INFO] [querynode/shard_node_detector.go:71] ["nodeDetector watch"] [collectionID=457665900034916433] [replicaID=457665907707084801] [vchannelName=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.373 +02:00] [INFO] [sessionutil/session_util.go:532] ["SessionUtil GetSessions "] [prefix=querynode] [key=querynode-63] [address=192.168.0.100:40002]
[2025/05/12 00:10:10.373 +02:00] [INFO] [querynode/shard_cluster.go:217] ["ShardCluster add node"] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [replicaID=457665907707084801] [nodeID=63]
[2025/05/12 00:10:10.373 +02:00] [INFO] [querynode/shard_segment_detector.go:76] ["segmentDetector start watch"] [collectionID=457665900034916433] [replicaID=457665907707084801] [vchannelName=by-dev-rootcoord-dml_2_457665900034916433v0] [rootPath=by-dev/meta/queryCoord-segmentMeta/457665900034916433]
[2025/05/12 00:10:10.374 +02:00] [INFO] [querynode/shard_cluster.go:394] ["Shard Cluster update state"] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [replicaID=457665907707084801] ["old state"=2] ["new state"=1] [caller=github.com/milvus-io/milvus/internal/querynode.(*ShardCluster).SetupFirstVersion]
[2025/05/12 00:10:10.374 +02:00] [INFO] [querynode/impl.go:391] ["successfully watchDmChannelsTask"] [collectionID=457665900034916433] [nodeID=63] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.374 +02:00] [INFO] [task/executor.go:449] ["subscribe DmChannel done"] [taskID=2] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [node=63] [source=1] [taskID=2] ["time taken"=90.8767ms]
[2025/05/12 00:10:10.773 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=24000]
[2025/05/12 00:10:10.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:10.789 +02:00] [INFO] [task/scheduler.go:541] ["process tasks related to node"] [nodeID=63] [processingTaskNum=1] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=1]
[2025/05/12 00:10:10.790 +02:00] [DEBUG] [funcutil/parallel.go:51] [process] [total=0] ["time cost"=0s]
[2025/05/12 00:10:10.790 +02:00] [INFO] [task/scheduler.go:750] ["task removed"] [taskID=2] [taskStatus=3] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:10.790 +02:00] [INFO] [task/scheduler.go:576] ["processed tasks"] [nodeID=63] [toProcessNum=0] [failCount=0] [toRemoveNum=1]
[2025/05/12 00:10:10.790 +02:00] [INFO] [task/scheduler.go:582] ["process tasks related to node done"] [nodeID=63] [processingTaskNum=0] [waitingTaskNum=0] [segmentTaskNum=0] [channelTaskNum=0]
[2025/05/12 00:10:10.803 +02:00] [WARN] [rootcoord/timeticksync.go:163] ["session idle for long time"] ["idle list"="[61]"] ["idle time"=24000]
[2025/05/12 00:10:10.819 +02:00] [INFO] [observers/collection_observer.go:177] ["collection targets"] [collectionID=457665900034916433] [segmentTargetNum=0] [channelTargetNum=1] [totalTargetNum=1] [replicaNum=1]
[2025/05/12 00:10:10.819 +02:00] [INFO] [observers/collection_observer.go:204] ["collection load progress"] [collectionID=457665900034916433] [subChannelCount=1] [loadSegmentCount=0]
[2025/05/12 00:10:10.819 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:10:10.819 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:10:10.819 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.819 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:10:10.819 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:10.819 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:10.820 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:10.820 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=5c5eeaf1144883b5] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:10:10.820 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=5c5eeaf1144883b5] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:10:10.821 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:10:10.821 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965776144695297] [posTime=2025/05/11 23:59:54.009 +02:00]
[2025/05/12 00:10:10.821 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:10:10.821 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:10.821 +02:00] [INFO] [observers/collection_observer.go:235] ["collection load status updated"] [collectionID=457665900034916433] [loadPercentage=100] [collectionStatus=2]
[2025/05/12 00:10:10.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:10.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:11.826 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=proxy] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189\n  | github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228\n  | golang.org/x/sync/errgroup.(*Group).Go.func1\n  | \tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\n  | C:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:11.826 +02:00] [INFO] [rootcoord/root_coord.go:661] ["fail to refresh policy info cache"] [error="RefreshPolicyInfoCache failed, proxyID = 61, err = stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/proxy/client/client.go:189 github.com/milvus-io/milvus/internal/distributed/proxy/client.(*Client).RefreshPolicyInfoCache\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/proxy_client_manager.go:228 github.com/milvus-io/milvus/internal/rootcoord.(*proxyClientManager).RefreshPolicyInfoCache.func1\nC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75 golang.org/x/sync/errgroup.(*Group).Go.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=61), actual=%!s(int64=69): server ID mismatch"]
[2025/05/12 00:10:11.826 +02:00] [INFO] [rootcoord/proxy_client_manager.go:110] ["succeed to create proxy client"] [address=192.168.0.100:19529] [serverID=69]
[2025/05/12 00:10:11.826 +02:00] [INFO] [rootcoord/proxy_manager.go:162] ["received proxy delete event with session"] [session="Session:<ServerID: 61, ServerName: proxy, Version: 2.2.16>"]
[2025/05/12 00:10:11.826 +02:00] [INFO] [rootcoord/timeticksync.go:234] ["Remove session from timeticksync"] [serverID=61]
[2025/05/12 00:10:11.826 +02:00] [WARN] [rootcoord/quota_center.go:143] ["quotaCenter sync metrics failed"] [error="GetMetrics failed, proxyID = 69, err = context deadline exceeded"]
[2025/05/12 00:10:11.826 +02:00] [INFO] [rootcoord/proxy_client_manager.go:125] ["remove proxy client"] ["proxy address"=192.168.0.100:19529] ["proxy id"=61]
[2025/05/12 00:10:11.827 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:11.828 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=424a53f82961da2b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:11.828 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457965938061606913] [time=2025/05/12 00:10:11.673 +02:00]
[2025/05/12 00:10:11.828 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457965938061606913] [cpTime=2025/05/12 00:10:11.673 +02:00]
[2025/05/12 00:10:12.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:12.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:12.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:12.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:12.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:12.841 +02:00] [INFO] [proxy/impl.go:5018] [RefreshPrivilegeInfoCache] [req="opType:7 "]
[2025/05/12 00:10:12.856 +02:00] [INFO] [proxy/impl.go:5036] ["RefreshPrivilegeInfoCache success"]
[2025/05/12 00:10:12.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:13.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:13.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:13.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:13.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1aa2109a926a9bdc] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:13.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:13.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:14.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:14.085 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datanode] [error="rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"]
[2025/05/12 00:10:14.086 +02:00] [WARN] [grpcclient/client.go:370] ["ClientBase Call grpc first call get error"] [role=datanode] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:14.086 +02:00] [INFO] [datacoord/session_manager.go:251] ["Get State failed"] [error="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\nD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\nD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch"] [errorVerbose="stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace: rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\n(1) attached stack trace\n  -- stack trace:\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369\n  | github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\n  | github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236\n  | github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | \tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244\n  | runtime.goexit\n  | \tD:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571\nWraps: (2) stack trace: D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/trace/stack_trace.go:51 github.com/milvus-io/milvus/internal/util/trace.StackTrace\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:369 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datanode/client/client.go:236 github.com/milvus-io/milvus/internal/distributed/datanode/client.(*Client).GetCompactionState\n  | D:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datacoord/session_manager.go:244 github.com/milvus-io/milvus/internal/datacoord.(*SessionManager).GetCompactionState.func1\n  | D:/a/_temp/msys64/mingw64/lib/go/src/runtime/asm_amd64.s:1571 runtime.goexit\nWraps: (3) rpc error: code = Unknown desc = expected=%!s(int64=59), actual=%!s(int64=67): server ID mismatch\nError types: (1) *withstack.withStack (2) *errutil.withPrefix (3) *status.Error"]
[2025/05/12 00:10:14.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:14.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:14.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:14.808 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965938846466049] [tSafe_p=2025/05/12 00:10:14.667 +02:00] [tsLag=141.5526ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:14.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:15.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:15.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:15.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:15.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:15.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:16.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:16.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:16.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:16.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:16.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=45c371624fd16243] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:16.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:16.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:17.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:17.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:17.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:17.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:17.810 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:18.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:18.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:18.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:18.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:18.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:19.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:19.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:19.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:19.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:19.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=58fd90f39e78848a] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:19.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:19.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:20.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:20.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:20.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:20.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:20.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:20.816 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:10:20.816 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:10:20.816 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:20.816 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:10:20.816 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:20.816 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:20.816 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:20.816 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=13e3b2b03e6a22cc] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:10:20.816 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=13e3b2b03e6a22cc] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:10:20.817 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:10:20.817 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965938061606913] [posTime=2025/05/12 00:10:11.673 +02:00]
[2025/05/12 00:10:20.817 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:10:20.817 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:21.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:21.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:21.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:21.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:21.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:21.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:22.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:22.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:22.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:22.768 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=103f51bb9b3d6efc] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:22.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:22.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:22.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:23.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:23.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:23.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:23.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:23.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:24.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:24.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:24.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:24.797 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965941469478913] [tSafe_p=2025/05/12 00:10:24.673 +02:00] [tsLag=124.9501ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:24.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:24.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:25.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:25.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:25.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:25.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7764365c18ad3cbd] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:25.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:25.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:26.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:26.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:26.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:26.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:26.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:27.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:27.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:27.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:27.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:27.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:28.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:28.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:28.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:28.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:28.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5bb901303e48084f] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:28.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:28.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:28.813 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=5ee04d0697fa0927] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.814 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=5ee04d0697fa0927] [role=proxy] [MsgID=457965942543745029] [BeginTS=457965942543745029] [EndTS=457965942543745029] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.814 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=5ee04d0697fa0927] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457965942543745029] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:10:28.815 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=5ee04d0697fa0927] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457965942543745029] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:10:28.815 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=5ee04d0697fa0927] [role=proxy] [MsgID=457965942543745029] [BeginTS=457965942543745029] [EndTS=457965942543745029] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.817 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=45b1ea0fa01aa616] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.817 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=45b1ea0fa01aa616] [role=proxy] [MsgID=457965942555803649] [BeginTS=457965942555803649] [EndTS=457965942555803649] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.817 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=45b1ea0fa01aa616] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457965942555803649] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:10:28.817 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=45b1ea0fa01aa616] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457965942555803649] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:10:28.817 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=45b1ea0fa01aa616] [role=proxy] [MsgID=457965942555803649] [BeginTS=457965942555803649] [EndTS=457965942555803649] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.818 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=31017dbd5e62f74a] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:10:28.818 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=31017dbd5e62f74a] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=0] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:10:28.819 +02:00] [INFO] [proxy/impl.go:612] ["LoadCollection received"] [traceID=1428e23ff79c77b5] [role=proxy] [db=default] [collection=rag_collection] [refreshMode=false]
[2025/05/12 00:10:28.820 +02:00] [INFO] [proxy/impl.go:635] ["LoadCollection enqueued"] [traceID=1428e23ff79c77b5] [role=proxy] [MsgID=457965942555803652] [BeginTS=457965942555803652] [EndTS=457965942555803652] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.820 +02:00] [INFO] [proxy/task.go:1377] ["loadCollectionTask PreExecute"] [role=proxy] [msgID=457965942555803652]
[2025/05/12 00:10:28.820 +02:00] [INFO] [proxy/task.go:1396] ["loadCollectionTask Execute"] [role=proxy] [msgID=457965942555803652]
[2025/05/12 00:10:28.820 +02:00] [INFO] [indexcoord/index_coord.go:890] ["IndexCoord receive DescribeIndex"] [collectionID=457665900034916433] [indexName=] [timestamp=0]
[2025/05/12 00:10:28.820 +02:00] [INFO] [datacoord/services.go:920] ["received get flushed segments request"] [collectionID=457665900034916433] [partitionID=-1]
[2025/05/12 00:10:28.821 +02:00] [DEBUG] [indexcoord/meta_table.go:736] ["IndexCoord get index states success"] [indexID=457665900035116801] [indexRows=0]
[2025/05/12 00:10:28.821 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:28.821 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=4c2295a84db5b312] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:10:28.821 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=4c2295a84db5b312] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:10:28.821 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:10:28.821 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965938061606913] [posTime=2025/05/12 00:10:11.673 +02:00]
[2025/05/12 00:10:28.821 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:10:28.821 +02:00] [INFO] [indexcoord/meta_table.go:659] ["IndexCoord get index states success"] [indexID=457665900035116801] [total=0] [None=0] [Unissued=0] [InProgress=0] [Finished=0] [Failed=0]
[2025/05/12 00:10:28.821 +02:00] [INFO] [indexcoord/index_coord.go:635] ["IndexCoord completeIndexInfo success"] [collID=457665900034916433] [totalRows=0] [indexRows=0] [state=Finished] [failReason=]
[2025/05/12 00:10:28.821 +02:00] [INFO] [indexcoord/index_coord.go:955] ["IndexCoord DescribeIndex success"] [collectionID=457665900034916433] [indexID=457665900035116801] ["total rows"=0] ["indexed rows"=0] ["pending index rows"=0] ["index state"=Finished] ["check segment num"=0]
[2025/05/12 00:10:28.822 +02:00] [INFO] [proxy/task.go:1447] ["send LoadCollectionRequest to query coordinator"] [role=proxy] [msgID=457965942555803652] [collectionID=457665900034916433] [schema="name:\"rag_collection\" description:\"RAG document chunks\" fields:<fieldID:100 name:\"id\" is_primary_key:true data_type:Int64 autoID:true > fields:<fieldID:101 name:\"emb\" data_type:FloatVector type_params:<key:\"dim\" value:\"512\" > > fields:<fieldID:102 name:\"source_path\" data_type:VarChar type_params:<key:\"max_length\" value:\"1024\" > > fields:<fieldID:103 name:\"chunk_id\" data_type:Int64 > fields:<fieldID:104 name:\"chunk_text\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > fields:<fieldID:105 name:\"chunk_preview\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > "]
[2025/05/12 00:10:28.822 +02:00] [INFO] [querycoordv2/services.go:233] ["load collection request received"] [msgID=457965942555803652] [collectionID=457665900034916433] [replicaNumber=1] [resourceGroups="[]"] [refreshMode=false] [schema="name:\"rag_collection\" description:\"RAG document chunks\" fields:<fieldID:100 name:\"id\" is_primary_key:true data_type:Int64 autoID:true > fields:<fieldID:101 name:\"emb\" data_type:FloatVector type_params:<key:\"dim\" value:\"512\" > > fields:<fieldID:102 name:\"source_path\" data_type:VarChar type_params:<key:\"max_length\" value:\"1024\" > > fields:<fieldID:103 name:\"chunk_id\" data_type:Int64 > fields:<fieldID:104 name:\"chunk_text\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > fields:<fieldID:105 name:\"chunk_preview\" data_type:VarChar type_params:<key:\"max_length\" value:\"65535\" > > "] [fieldIndexes="[457665900035116801]"]
[2025/05/12 00:10:28.822 +02:00] [INFO] [job/scheduler.go:157] ["start to pre-execute job"] [msgID=457965942555803652] [collectionID=457665900034916433]
[2025/05/12 00:10:28.822 +02:00] [WARN] [job/scheduler.go:160] ["failed to pre-execute job"] [msgID=457965942555803652] [collectionID=457665900034916433] [error=CollectionLoaded]
[2025/05/12 00:10:28.822 +02:00] [INFO] [job/scheduler.go:151] ["start to post-execute job"] [msgID=457965942555803652] [collectionID=457665900034916433]
[2025/05/12 00:10:28.822 +02:00] [INFO] [job/scheduler.go:153] ["job finished"] [msgID=457965942555803652] [collectionID=457665900034916433]
[2025/05/12 00:10:28.822 +02:00] [INFO] [proxy/task.go:1458] ["loadCollectionTask PostExecute"] [role=proxy] [msgID=457965942555803652]
[2025/05/12 00:10:28.822 +02:00] [INFO] [proxy/impl.go:662] ["LoadCollection done"] [traceID=1428e23ff79c77b5] [role=proxy] [MsgID=457965942555803652] [BeginTS=457965942555803652] [EndTS=457965942555803652] [db=default] [collection=rag_collection]
[2025/05/12 00:10:28.823 +02:00] [INFO] [proxy/impl.go:1959] ["GetLoadingProgress received"] [traceID=51f59fbffb1637d2] [request="collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:10:28.825 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:10:28.825 +02:00] [INFO] [proxy/impl.go:2016] ["GetLoadingProgress done"] [traceID=51f59fbffb1637d2] [request="base:<msg_type:ShowCollections sourceID:69 > collection_name:\"rag_collection\" db_name:\"default\" "]
[2025/05/12 00:10:28.829 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=6c6d48833e1d9a9c] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:10:28.829 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=6c6d48833e1d9a9c] [msg="search request enqueue"] [duration=1.0583ms]
[2025/05/12 00:10:28.829 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=6c6d48833e1d9a9c] [role=proxy] [msgID=457965942555803654] [timestamp=457965942555803654] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:10:28.830 +02:00] [INFO] [querycoordv2/services.go:77] ["show collections request received"] [msgID=0] [collections="[457665900034916433]"]
[2025/05/12 00:10:28.830 +02:00] [DEBUG] [proxy/meta_cache.go:330] ["QueryCoord show collections"] [collID=457665900034916433] [collections="[457665900034916433]"] [collectionsInMemoryPercentages="[100]"]
[2025/05/12 00:10:28.830 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] ["output fields"="[source_path,chunk_id,chunk_preview,chunk_text,emb]"]
[2025/05/12 00:10:28.831 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:10:28.832 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:10:28.832 +02:00] [INFO] [rootcoord/root_coord.go:1476] ["received request to show partitions"] [traceID=6c6d48833e1d9a9c] [collection=rag_collection] [collectionID=0] [msgID=0] [allowUnavailable=false]
[2025/05/12 00:10:28.832 +02:00] [INFO] [rootcoord/root_coord.go:1507] ["done to show partitions"] [traceID=6c6d48833e1d9a9c] [collection=rag_collection] [collectionID=0] [msgID=0] [allowUnavailable=false] [partitions="[_default]"]
[2025/05/12 00:10:28.832 +02:00] [DEBUG] [proxy/meta_cache.go:456] [proxy] ["GetPartitions:partitions after update"="status:<> partition_names:\"_default\" partitionIDs:457665900034916434 created_timestamps:457665910207676428 created_utc_timestamps:1745856896239 "] [collectionName=rag_collection]
[2025/05/12 00:10:28.832 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [travel_ts=18446744073709551615] [guarantee_ts=457965941245083654] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:10:28.833 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:10:28.833 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:10:28.835 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457965941245083654] [timeTravel=18446744073709551615]
[2025/05/12 00:10:28.835 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:10:28.835 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:10:28.835 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:10:23.817 +02:00] [serviceTime=2025/05/12 00:10:28.678 +02:00] ["delta milliseconds"=-4861] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457965942555803654]
[2025/05/12 00:10:28.835 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:10:28.838 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=6c6d48833e1d9a9c] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:10:28.838 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:10:28.849 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:10:28.849 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=6c6d48833e1d9a9c] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=6c6d48833e1d9a9c] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=15.9441ms]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=6c6d48833e1d9a9c] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=15.9441ms]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=6c6d48833e1d9a9c] [msg="search done in all shards"] [duration=16.4671ms]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=6c6d48833e1d9a9c]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457965942555803654"] [traceID=6c6d48833e1d9a9c] [msg=done] [duration=18.0583ms]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=6c6d48833e1d9a9c] [sourceID=0] [msgID=457965942555803654]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=6c6d48833e1d9a9c] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=6c6d48833e1d9a9c] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654] ["number of valid search results"=1]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=6c6d48833e1d9a9c] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=6c6d48833e1d9a9c] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=6c6d48833e1d9a9c] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:10:28.851 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=6c6d48833e1d9a9c] [count=0]
[2025/05/12 00:10:28.852 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=6c6d48833e1d9a9c] [msg=done] [duration=528.5µs]
[2025/05/12 00:10:28.852 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803654]
[2025/05/12 00:10:28.852 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=6c6d48833e1d9a9c] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916837, 457665900034916797, 457665900034916833, 457665900034916813, 457665900034916861, 457665900034916827, 457665900034916847, 457665900034916845, 457665900034916805, 457665900034916801, 457665900034916799, 457665900034916825, 457665900034916811, 457665900034916809, 457665900034916815, 457665900034916823, 457665900034916807, 457665900034916841, 457665900034916849, 457665900034916789, 457665900034916851, 457665900034916843, 457665900034916857, 457665900034916853, 457665900034916863, 457665900034916795, 457665900034916865, 457665900034916829, 457665900034916821, 457665900034916835, 457665900034916819, 457665900034916793, 457665900034916803, 457665900034916817, 457665900034916791, 457665900034916859, 457665900034916855, 457665900034916787, 457665900034916839, 457665900034916831 ]"] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:10:28.853 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=6c6d48833e1d9a9c] [msg="query request enqueue"] [duration=534.7µs]
[2025/05/12 00:10:28.853 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=6c6d48833e1d9a9c] [role=proxy] [msgID=457965942555803656] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:10:28.853 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=6c6d48833e1d9a9c] [collectionName=rag_collection] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.853 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=6c6d48833e1d9a9c] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.853 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.860 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=6c6d48833e1d9a9c] [collectionName=rag_collection] [msgID=457965942555803656] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:10:28.860 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=6c6d48833e1d9a9c] [OutputFields="[chunk_id,chunk_preview,chunk_text,emb,id,source_path]"] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.860 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=6c6d48833e1d9a9c] [OutputFieldsID="[103,105,104,101,100,102,1]"] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.860 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [requestType=query] [guarantee_ts=1] [travel_ts=457965942555803656] [timeout_ts=0]
[2025/05/12 00:10:28.862 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457965942555803656] [partitionIDs="[]"]
[2025/05/12 00:10:28.862 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457965942555803656]
[2025/05/12 00:10:28.862 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:10:28.862 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:10:28.678 +02:00] ["delta milliseconds"=-1747001428678] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457965942555803656]
[2025/05/12 00:10:28.862 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:10:28.863 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=6c6d48833e1d9a9c] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:10:28.865 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457965942555803656] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:10:28.866 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=6c6d48833e1d9a9c] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:10:28.866 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=6c6d48833e1d9a9c] [msg="start reduce query result, msgID = 457965942555803656, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=4.3955ms]
[2025/05/12 00:10:28.866 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=6c6d48833e1d9a9c] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:10:28.867 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=6c6d48833e1d9a9c] [msg="do query done, msgID = 457965942555803656, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=5.3978ms]
[2025/05/12 00:10:28.867 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=6c6d48833e1d9a9c] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [nodeID=63] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457965942555803656"] [traceID=6c6d48833e1d9a9c] [msg=done] [duration=8.6183ms]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=6c6d48833e1d9a9c] [sourceID=0] [msgID=457965942555803656]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=6c6d48833e1d9a9c] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:10:28.868 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=6c6d48833e1d9a9c] [len(retrieveResults)=1]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=6c6d48833e1d9a9c] [msgID=457965942555803656] [requestType=query]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=6c6d48833e1d9a9c] [msg=done] [duration=997.4µs]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=6c6d48833e1d9a9c] [msg="wait query result"] [duration=16.8375ms]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=6c6d48833e1d9a9c] [role=proxy] [msgID=457965942555803656] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=6c6d48833e1d9a9c] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=6c6d48833e1d9a9c] [msg=done] [duration=18.4258ms]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=6c6d48833e1d9a9c] [msg="wait search result"] [duration=40.2335ms]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=6c6d48833e1d9a9c] [msg="wait search result"] [duration=0s]
[2025/05/12 00:10:28.869 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=6c6d48833e1d9a9c] [role=proxy] [msgID=457965942555803654] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:10:29.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:29.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:29.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:29.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:29.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:29.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:30.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:30.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:30.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:30.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:30.826 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:30.826 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:30.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:31.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:31.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:31.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:31.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:31.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=240ac99626631fe2] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:31.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:31.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:31.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:32.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:32.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:32.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:32.820 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:33.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:33.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:33.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:33.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:33.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:34.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:34.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:34.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:34.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:34.773 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=67c7fe9096a828e] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:34.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:34.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:34.804 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965944052908034] [tSafe_p=2025/05/12 00:10:34.528 +02:00] [tsLag=276.7497ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:34.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:35.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:35.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:35.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:35.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:35.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:35.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:36.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:36.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:36.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:36.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:36.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:37.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:37.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:37.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:37.773 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=48dc53d1428aaa09] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:37.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:37.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:37.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:38.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:38.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:38.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:38.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:38.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:39.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:39.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:39.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:39.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:39.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:40.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:40.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:40.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:40.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:40.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:40.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=38538a2fd3bec340] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:40.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:40.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:40.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:41.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:41.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:41.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:41.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:42.010 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:42.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:42.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:42.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:42.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:43.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:43.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:43.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:43.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:43.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=610700b75e7bce5] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:43.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:43.800 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:43.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:44.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:44.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:44.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:44.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:44.800 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965946712883201] [tSafe_p=2025/05/12 00:10:44.675 +02:00] [tsLag=125.5798ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:44.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:45.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:45.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:45.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:45.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:45.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:45.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:46.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:46.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:46.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:46.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=61ba07067f4c2c42] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:46.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:46.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:46.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:46.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:47.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:47.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:47.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:47.842 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:47.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:48.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:48.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:48.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:48.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:48.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:49.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:49.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:49.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:49.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=49c3d7b8b7bbf61b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:49.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:49.807 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:49.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:49.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:50.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:50.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:50.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:50.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:50.821 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:10:50.821 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:10:50.821 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:50.821 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:10:50.821 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:50.821 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:50.821 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:10:50.821 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=4e42f03fa7d76062] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:10:50.821 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=4e42f03fa7d76062] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:10:50.822 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:10:50.822 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965938061606913] [posTime=2025/05/12 00:10:11.673 +02:00]
[2025/05/12 00:10:50.822 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:10:50.822 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:10:50.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:10:50.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:10:51.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:51.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:51.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:51.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:51.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:52.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:52.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:52.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:52.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:52.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=83401dc989e5a06] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:52.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:52.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:52.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:53.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:53.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:53.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:53.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:53.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:54.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:54.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:54.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:54.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:54.799 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965949334061057] [tSafe_p=2025/05/12 00:10:54.674 +02:00] [tsLag=125.7407ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:10:54.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:55.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:55.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:55.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:55.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:55.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:55.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=496d2b0a716d451d] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:55.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:55.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:56.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:56.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:56.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:56.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:56.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:57.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:57.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:57.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:57.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:57.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:57.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:58.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:58.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:58.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:58.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=38fab76f0cf78879] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:10:58.791 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:10:58.807 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:10:58.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:58.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:59.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:59.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:59.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:10:59.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:00.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:00.211 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:00.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:00.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:00.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:01.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:01.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:01.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:01.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:01.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=26d9753f13cdb1be] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:01.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:01.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:01.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:02.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:02.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:02.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:02.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:02.878 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:03.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:03.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:03.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:03.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:03.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:04.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:04.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:04.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:04.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:04.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1185e3edca141d0b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:04.786 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:04.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:04.802 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965951956025345] [tSafe_p=2025/05/12 00:11:04.676 +02:00] [tsLag=126.6446ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:11:04.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:05.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:05.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:05.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:05.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:05.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:06.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:06.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:06.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:06.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:06.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:06.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:07.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:07.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:07.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:07.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=445713caa53bc171] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:07.793 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:07.793 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:07.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:07.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:08.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:08.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:08.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:08.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:09.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:09.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:09.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:09.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:09.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:10.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:10.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:10.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:10.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:10.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=9f582cf432455fd] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:10.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:10.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:10.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:10.834 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:11:10.834 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:11:11.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:11.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:11.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:11.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:11.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:11.807 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457965953791819777] [time=2025/05/12 00:11:11.679 +02:00]
[2025/05/12 00:11:11.807 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457965953791819777] [cpTime=2025/05/12 00:11:11.679 +02:00]
[2025/05/12 00:11:12.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:12.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:12.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:12.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:12.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:13.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:13.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:13.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:13.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:13.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4a1f0cdf429e8ca7] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:13.786 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:13.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:13.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:14.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:14.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:14.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:14.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:14.797 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965954551775233] [tSafe_p=2025/05/12 00:11:14.578 +02:00] [tsLag=219.8071ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:11:14.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:14.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:15.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:15.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:15.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:15.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:15.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:16.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:16.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:16.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:16.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4d0040ad4d4c9784] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:16.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:16.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:16.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:17.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:17.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:17.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:17.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:17.823 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:18.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:18.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:18.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:18.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:18.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:19.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:19.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:19.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:19.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:19.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:19.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4250fff047cc70fd] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:19.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:19.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:20.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:20.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:20.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:20.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:20.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:20.810 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:11:20.810 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:11:20.810 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:11:20.810 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:11:20.810 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:11:20.810 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:11:20.810 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:11:20.810 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=3a5f8bf78e162f1c] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:11:20.811 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=3a5f8bf78e162f1c] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:11:20.811 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:11:20.811 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965953791819777] [posTime=2025/05/12 00:11:11.679 +02:00]
[2025/05/12 00:11:20.811 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:11:20.811 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:11:20.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:21.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:21.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:21.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:21.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:21.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:22.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:22.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:22.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:22.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=610c0da6b9cec4f5] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:22.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:22.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:22.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:23.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:23.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:23.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:23.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:23.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:24.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:24.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:24.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:24.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:24.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:24.801 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965957158010882] [tSafe_p=2025/05/12 00:11:24.520 +02:00] [tsLag=281.1388ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:11:25.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:25.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:25.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:25.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:25.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:25.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=70b195ddc1fc4181] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:25.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:25.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:26.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:26.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:26.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:26.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:26.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:26.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:27.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:27.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:27.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:27.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:27.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:28.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:28.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:28.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:28.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3b7c5fc78f767793] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:28.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:28.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:28.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:29.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:29.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:29.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:29.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:29.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:30.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:30.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:30.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:30.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:30.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:30.834 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:11:30.834 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:11:31.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:31.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:31.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:31.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:31.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=982ab7c9d1c274b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:31.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:31.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:31.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:32.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:32.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:32.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:32.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:32.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:32.808 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=79] ["total memory"=10014] ["next GC"=96] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747001492807812000]
[2025/05/12 00:11:33.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:33.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:33.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:33.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:33.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:34.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:34.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:34.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:34.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:34.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2a4d1d2082836c3f] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:34.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:34.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:34.794 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965959782334466] [tSafe_p=2025/05/12 00:11:34.531 +02:00] [tsLag=263.781ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:11:34.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:34.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:35.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:35.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:35.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:35.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:35.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:36.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:36.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:36.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:36.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:36.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:37.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:37.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:37.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:37.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=506a579cbad78e64] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:37.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:37.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:37.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:37.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:38.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:38.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:38.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:38.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:39.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:39.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:39.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:39.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:39.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:40.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:40.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:40.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:40.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:40.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=154b094625bf8c8b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:40.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:40.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:40.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:41.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:41.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:41.411 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:41.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:41.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:42.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:42.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:42.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:42.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:42.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:43.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:43.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:43.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:43.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:43.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:43.783 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=160be69884437f1] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:43.798 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:43.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:44.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:44.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:44.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:44.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:44.796 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965962440474625] [tSafe_p=2025/05/12 00:11:44.671 +02:00] [tsLag=125.9835ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:11:44.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:45.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:45.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:45.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:45.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:45.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:45.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:46.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:46.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:46.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:46.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=13b4423d79cf96a5] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:46.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:46.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:46.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:46.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:47.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:47.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:47.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:47.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:47.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:48.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:48.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:48.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:48.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:48.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:49.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:49.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:49.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:49.777 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1ac3a697e3957355] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:49.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:49.793 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:49.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:50.011 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:50.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:50.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:50.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:50.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:50.822 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:11:50.822 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:11:50.822 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:11:50.822 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:11:50.822 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:11:50.822 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:11:50.822 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:11:50.822 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:11:50.822 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:11:50.822 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=5c3560121ea1fa26] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:11:50.822 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=5c3560121ea1fa26] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:11:50.823 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:11:50.823 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965953791819777] [posTime=2025/05/12 00:11:11.679 +02:00]
[2025/05/12 00:11:50.823 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:11:50.823 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:11:50.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:51.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:51.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:51.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:51.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:52.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:52.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:52.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:52.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:52.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7b0ff474df197eed] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:52.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:52.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:52.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:53.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:53.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:53.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:53.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:53.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:54.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:54.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:54.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:54.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:54.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:54.798 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965965025214465] [tSafe_p=2025/05/12 00:11:54.531 +02:00] [tsLag=267.1573ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:11:55.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:55.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:55.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:55.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:55.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=182003bed7bba57b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:55.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:55.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:55.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:55.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:56.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:56.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:56.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:56.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:56.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:57.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:57.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:57.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:57.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:57.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:58.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:58.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:58.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:58.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1a92534e34cf5473] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:11:58.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:11:58.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:11:58.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:59.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:59.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:59.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:59.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:11:59.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:00.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:00.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:00.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:00.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:00.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:01.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:01.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:01.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:01.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:01.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2582fd8a963a5581] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:01.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:01.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:01.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:02.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:02.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:02.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:02.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:02.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:03.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:03.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:03.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:03.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:03.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:04.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:04.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:04.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:04.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:04.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:04.783 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2787b5a524d57b28] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:04.798 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:04.798 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965967684403201] [tSafe_p=2025/05/12 00:12:04.675 +02:00] [tsLag=123.6391ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:12:04.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:05.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:05.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:05.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:05.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:05.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:06.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:06.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:06.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:06.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:06.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:06.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:07.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:07.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:07.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:07.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6c98a4372d02158e] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:07.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:07.807 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:07.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:07.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:08.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:08.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:08.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:08.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:09.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:09.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:09.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:09.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:09.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:10.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:10.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:10.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:10.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:10.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7407cd6c8dd9988c] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:10.786 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:10.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:10.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:10.833 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:12:10.833 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:12:11.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:11.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:11.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:11.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:11.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:12.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:12.004 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457965969572102145] [time=2025/05/12 00:12:11.876 +02:00]
[2025/05/12 00:12:12.004 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457965969572102145] [cpTime=2025/05/12 00:12:11.876 +02:00]
[2025/05/12 00:12:12.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:12.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:12.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:12.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:12.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:13.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:13.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:13.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:13.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4ca728c2046a1114] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:13.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:13.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:13.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:14.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:14.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:14.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:14.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:14.801 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965970265473025] [tSafe_p=2025/05/12 00:12:14.521 +02:00] [tsLag=280.7757ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:12:14.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:15.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:15.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:15.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:15.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:15.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:16.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:16.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:16.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:16.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:16.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:16.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=243eef4221c072a1] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:16.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:16.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:16.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:17.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:17.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:17.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:17.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:17.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:18.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:18.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:18.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:18.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:19.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:19.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:19.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:19.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:19.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=78b8625554e4beaf] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:19.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:19.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:19.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:20.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:20.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:20.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:20.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:20.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:20.817 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:12:20.817 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:12:20.817 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:12:20.817 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:12:20.817 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:12:20.817 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:12:20.817 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:12:20.817 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=5fb6a43f0c84af96] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:12:20.817 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=5fb6a43f0c84af96] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:12:20.818 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:12:20.818 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965969572102145] [posTime=2025/05/12 00:12:11.876 +02:00]
[2025/05/12 00:12:20.818 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:12:20.818 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:12:21.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:21.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:21.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:21.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:21.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:22.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:22.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:22.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:22.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:22.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:22.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=340385ef9160ca3e] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:22.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:22.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:23.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:23.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:23.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:23.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:23.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:24.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:24.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:24.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:24.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:24.795 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965972901330945] [tSafe_p=2025/05/12 00:12:24.576 +02:00] [tsLag=219.042ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:12:24.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:24.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:25.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:25.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:25.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:25.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4c2703281f49f6c8] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:25.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:25.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:25.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:25.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:26.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:26.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:26.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:26.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:26.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:27.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:27.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:27.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:27.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:28.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:28.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:28.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:28.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:28.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3af60003ce80d578] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:28.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:28.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:28.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:29.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:29.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:29.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:29.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:29.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:30.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:30.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:30.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:30.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:30.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:30.831 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:12:30.831 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:12:31.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:31.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:31.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:31.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:31.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:31.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1847eb6e68acb3a3] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:31.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:31.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:32.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:32.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:32.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:32.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:32.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:33.037 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:33.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:33.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:33.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:33.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:33.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:34.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:34.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:34.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:34.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=772eff58e72ac202] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:34.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:34.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:34.806 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965975550033921] [tSafe_p=2025/05/12 00:12:34.680 +02:00] [tsLag=126.8608ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:12:34.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:35.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:35.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:35.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:35.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:35.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:36.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:36.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:36.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:36.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:36.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:36.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:37.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:37.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:37.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:37.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=358a7c9dd71a348a] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:37.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:37.795 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:37.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:37.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:38.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:38.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:38.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:38.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:38.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:39.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:39.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:39.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:39.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:39.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:40.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:40.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:40.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:40.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=61a07fd40ba8f8a4] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:40.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:40.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:40.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:41.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:41.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:41.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:41.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:41.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:42.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:42.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:42.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:42.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:42.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:43.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:43.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:43.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:43.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:43.768 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4713db25e55c3425] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:43.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:43.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:43.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:44.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:44.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:44.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:44.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:44.795 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965978131890178] [tSafe_p=2025/05/12 00:12:44.529 +02:00] [tsLag=266.127ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:12:44.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:44.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:45.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:45.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:45.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:45.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:45.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:46.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:46.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:46.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:46.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=68db600bdf254b4d] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:46.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:46.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:46.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:47.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:47.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:47.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:47.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:47.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:48.018 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:48.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:48.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:48.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:48.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:49.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:49.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:49.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:49.611 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:49.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:49.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=36bb3413d46d6501] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:49.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:49.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:50.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:50.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:50.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:50.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:50.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:50.825 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:12:50.825 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:12:50.825 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:12:50.825 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:12:50.825 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:12:50.825 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:12:50.825 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:12:50.825 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:12:50.825 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:12:50.826 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=48e2274c678f7532] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:12:50.826 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=48e2274c678f7532] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:12:50.826 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:12:50.826 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965969572102145] [posTime=2025/05/12 00:12:11.876 +02:00]
[2025/05/12 00:12:50.826 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:12:50.827 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:12:50.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:51.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:51.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:51.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:51.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:52.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:52.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:52.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:52.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:52.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:52.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=42788a2ecf836d3f] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:52.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:52.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:52.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:53.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:53.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:53.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:53.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:53.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:54.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:54.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:54.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:54.808 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965980765388801] [tSafe_p=2025/05/12 00:12:54.575 +02:00] [tsLag=233.7637ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:12:54.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:54.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:55.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:55.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:55.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:55.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3c78d0ee6d48d35c] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:55.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:55.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:55.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:56.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:56.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:56.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:56.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:56.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:57.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:57.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:57.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:57.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:57.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:58.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:58.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:58.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:58.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:58.768 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3538d397e6f21eec] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:12:58.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:12:58.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:12:58.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:59.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:59.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:59.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:59.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:12:59.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:00.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:00.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:00.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:00.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:00.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:00.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:01.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:01.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:01.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:01.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=6a06d52fca5de08f] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:01.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:01.808 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:01.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:01.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:02.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:02.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:02.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:02.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:03.070 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:03.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:03.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:03.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:03.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:04.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:04.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:04.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:04.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:04.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=519e20fc23600513] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:04.786 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:04.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:04.802 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965983413567489] [tSafe_p=2025/05/12 00:13:04.677 +02:00] [tsLag=125.7225ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:13:04.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:05.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:05.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:05.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:05.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:05.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:06.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:06.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:06.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:06.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:06.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:07.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:07.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:07.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:07.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:07.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:07.782 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=39bf815173ebf88a] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:07.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:07.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:08.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:08.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:08.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:08.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:08.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:09.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:09.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:09.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:09.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:09.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:10.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:10.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:10.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:10.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:10.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=88ebdfe926d839] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:10.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:10.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:10.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:10.825 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:13:10.825 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:13:10.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:11.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:11.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:11.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:11.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:11.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:12.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:12.202 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457965985352646657] [time=2025/05/12 00:13:12.074 +02:00]
[2025/05/12 00:13:12.202 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457965985352646657] [cpTime=2025/05/12 00:13:12.074 +02:00]
[2025/05/12 00:13:12.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:12.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:12.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:12.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:13.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:13.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:13.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:13.773 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4dce84189f373562] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:13.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:13.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:13.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:13.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:14.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:14.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:14.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:14.805 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965986035793921] [tSafe_p=2025/05/12 00:13:14.680 +02:00] [tsLag=125.9322ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:13:14.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:14.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:15.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:15.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:15.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:15.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:16.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:16.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:16.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:16.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:16.773 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=413cc3acb0244be8] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:16.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:16.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:16.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:17.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:17.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:17.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:17.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:17.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:18.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:18.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:18.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:18.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:18.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:19.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:19.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:19.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:19.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:19.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:19.782 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=52005fc21a466c98] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:19.783 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=94] ["total memory"=10149] ["next GC"=95] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747001599782905200]
[2025/05/12 00:13:19.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:19.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:19.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:20.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:20.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:20.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:20.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:20.811 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:13:20.811 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:13:20.811 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:13:20.811 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:13:20.811 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:13:20.811 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:13:20.811 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:13:20.811 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=70e204a3d3c16674] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:13:20.811 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=70e204a3d3c16674] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:13:20.812 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:13:20.812 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965985352646657] [posTime=2025/05/12 00:13:12.074 +02:00]
[2025/05/12 00:13:20.812 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:13:20.812 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:13:20.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:21.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:21.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:21.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:21.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:22.010 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:22.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:22.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:22.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:22.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=68146d42b9997ca9] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:22.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:22.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:22.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:22.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:23.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:23.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:23.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:23.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:24.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:24.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:24.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:24.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:24.803 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965988615553026] [tSafe_p=2025/05/12 00:13:24.521 +02:00] [tsLag=282.3269ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:13:24.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:25.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:25.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:25.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:25.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:25.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7238bdc990bc4e6f] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:25.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:25.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:25.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:26.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:26.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:26.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:26.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:26.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:27.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:27.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:27.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:27.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:27.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:28.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:28.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:28.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:28.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:28.768 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=581ab0b2db9132e9] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:28.784 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:28.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:28.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:29.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:29.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:29.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:29.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:29.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:30.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:30.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:30.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:30.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:30.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:30.828 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:13:30.828 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:13:31.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:31.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:31.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:31.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:31.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:31.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=13a0866f1cbcdbb1] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:31.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:31.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:31.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:32.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:32.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:32.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:32.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:32.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:33.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:33.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:33.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:33.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:34.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:34.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:34.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:34.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:34.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=218ed30e96216b3e] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:34.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:34.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:34.803 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965991277887489] [tSafe_p=2025/05/12 00:13:34.677 +02:00] [tsLag=126.1345ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:13:34.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:35.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:35.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:35.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:35.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:35.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:36.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:36.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:36.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:36.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:36.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:37.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:37.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:37.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:37.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:37.782 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:37.782 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3a09cfbcd24b0519] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:37.798 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:37.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:38.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:38.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:38.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:38.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:38.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:39.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:39.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:39.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:39.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:39.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:39.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:40.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:40.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:40.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:40.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=29d621c4e73d24b5] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:40.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:40.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:40.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:41.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:41.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:41.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:41.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:41.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:41.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:42.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:42.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:42.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:42.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:42.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:43.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:43.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:43.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:43.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1041c0a7a8971bda] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:43.791 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:43.807 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:43.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:43.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:44.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:44.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:44.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:44.807 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965993900638209] [tSafe_p=2025/05/12 00:13:44.682 +02:00] [tsLag=125.7211ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:13:44.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:45.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:45.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:45.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:45.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:45.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:46.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:46.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:46.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:46.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:46.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5c04056e179a25cc] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:46.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:46.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:46.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:47.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:47.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:47.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:47.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:47.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:48.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:48.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:48.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:48.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:48.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:48.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:49.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:49.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:49.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:49.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2679f2b19152dd93] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:49.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:49.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:49.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:50.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:50.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:50.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:50.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:50.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:50.813 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:13:50.813 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:13:50.813 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:13:50.813 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:13:50.813 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:13:50.813 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:13:50.813 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:13:50.813 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=7f6aa83b473629f5] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:13:50.813 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=7f6aa83b473629f5] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:13:50.814 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:13:50.814 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457965985352646657] [posTime=2025/05/12 00:13:12.074 +02:00]
[2025/05/12 00:13:50.814 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:13:50.814 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:13:50.829 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:13:50.829 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:13:51.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:51.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:51.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:51.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:51.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:51.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:52.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:52.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:52.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:52.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=32a226921700af5b] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:52.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:52.808 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:52.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:52.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:53.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:53.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:53.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:53.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:54.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:54.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:54.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:54.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:54.802 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965996480135170] [tSafe_p=2025/05/12 00:13:54.522 +02:00] [tsLag=280.6245ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:13:54.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:55.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:55.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:55.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:55.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:55.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=17b16010882f57cb] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:55.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:55.800 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:55.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:56.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:56.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:56.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:56.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:56.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:57.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:57.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:57.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:57.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:57.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:57.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:58.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:58.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:58.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:58.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=f03cc748a6c4377] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:13:58.791 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:13:58.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:13:58.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:59.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:59.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:59.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:59.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:13:59.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:00.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:00.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:00.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:00.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:00.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:01.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:01.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:01.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:01.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:01.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:01.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=794c35f6c5d32da2] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:01.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:01.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:02.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:02.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:02.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:02.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:02.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:02.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:03.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:03.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:03.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:03.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:03.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:04.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:04.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:04.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:04.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=358c455df4985b4a] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:04.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:04.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:04.804 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457965999102099457] [tSafe_p=2025/05/12 00:14:04.524 +02:00] [tsLag=280.058ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:14:04.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:05.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:05.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:05.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:05.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:05.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:06.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:06.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:06.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:06.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:06.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:07.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:07.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:07.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:07.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:07.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=33879014e992bb1d] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:07.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:07.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:07.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:08.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:08.211 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:08.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:08.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:08.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:09.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:09.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:09.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:09.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:09.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:10.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:10.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:10.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:10.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:10.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:10.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3c1f0da639b791c8] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:10.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:10.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:10.827 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:14:10.827 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:14:11.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:11.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:11.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:11.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:11.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:11.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:12.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:12.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:12.407 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966001135026177] [time=2025/05/12 00:14:12.279 +02:00]
[2025/05/12 00:14:12.407 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966001135026177] [cpTime=2025/05/12 00:14:12.279 +02:00]
[2025/05/12 00:14:12.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:12.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:12.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:13.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:13.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:13.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:13.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3ad9a19d1233f460] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:13.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:13.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:13.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:14.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:14.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:14.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:14.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:14.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:14.805 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966001723015170] [tSafe_p=2025/05/12 00:14:14.522 +02:00] [tsLag=283.2215ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:14:15.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:15.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:15.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:15.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:15.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:16.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:16.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:16.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:16.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:16.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=13a375addca11ec8] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:16.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:16.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:16.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:17.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:17.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:17.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:17.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:17.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:18.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:18.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:18.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:18.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:18.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:18.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:19.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:19.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:19.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:19.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4b828be698b482fd] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:19.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:19.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:19.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:19.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:20.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:20.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:20.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:20.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:20.824 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:14:20.824 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:14:20.824 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:14:20.824 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:14:20.824 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:14:20.824 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:14:20.824 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:14:20.824 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=23671573e384d385] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:14:20.824 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=23671573e384d385] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:14:20.825 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:14:20.825 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966001135026177] [posTime=2025/05/12 00:14:12.279 +02:00]
[2025/05/12 00:14:20.825 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:14:20.825 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:14:20.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:21.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:21.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:21.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:21.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:22.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:22.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:22.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:22.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:22.773 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=528f418e3dccd150] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:22.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:22.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:22.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:23.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:23.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:23.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:23.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:23.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:24.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:24.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:24.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:24.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:24.796 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966004383776769] [tSafe_p=2025/05/12 00:14:24.672 +02:00] [tsLag=124.8287ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:14:24.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:25.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:25.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:25.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:25.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:25.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=31ab942b9baa253c] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:25.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:25.796 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:25.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:26.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:26.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:26.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:26.611 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:26.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:27.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:27.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:27.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:27.594 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:27.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:27.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:28.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:28.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:28.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:28.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2deefc239d6c8271] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:28.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:28.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:28.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:28.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:29.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:29.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:29.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:29.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:29.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:30.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:30.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:30.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:30.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:30.837 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:14:30.837 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:14:31.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:31.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:31.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:31.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:31.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=70698d68fc98309a] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:31.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:31.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:31.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:32.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:32.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:32.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:32.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:32.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:33.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:33.237 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:33.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:33.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:33.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:34.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:34.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:34.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:34.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:34.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=21060d4a87d6127c] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:34.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:34.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:34.803 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966006965633026] [tSafe_p=2025/05/12 00:14:34.521 +02:00] [tsLag=282.0506ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:14:34.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:35.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:35.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:35.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:35.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:35.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:36.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:36.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:36.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:36.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:36.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:37.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:37.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:37.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:37.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:37.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:37.782 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=46b7899cd709c1d1] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:37.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:37.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:37.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:38.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:38.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:38.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:38.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:38.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:39.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:39.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:39.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:39.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:40.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:40.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:40.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:40.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:40.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4e50072838febc36] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:40.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:40.795 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:40.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:40.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:41.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:41.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:41.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:41.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:42.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:42.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:42.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:42.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:42.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:43.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:43.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:43.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:43.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:43.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7d27b26ef76d8e07] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:43.784 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:43.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:43.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:44.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:44.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:44.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:44.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:44.798 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966009626918913] [tSafe_p=2025/05/12 00:14:44.673 +02:00] [tsLag=125.1771ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:14:44.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:45.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:45.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:45.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:45.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:45.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:45.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:46.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:46.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:46.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:46.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:46.780 +02:00] [INFO] [rootcoord/import_manager.go:178] ["(in cleanupLoop) trying to expire old tasks from memory and Etcd"]
[2025/05/12 00:14:46.780 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=179b640f91b267e7] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:46.780 +02:00] [INFO] [rootcoord/import_manager.go:181] ["(in cleanupLoop) start removing bad import segments"]
[2025/05/12 00:14:46.780 +02:00] [INFO] [rootcoord/import_manager.go:183] ["(in cleanupLoop) start cleaning hanging busy DataNode"]
[2025/05/12 00:14:46.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:46.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:46.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:47.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:47.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:47.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:47.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:48.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:48.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:48.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:48.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:48.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:49.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:49.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:49.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:49.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:49.768 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3b8deb30da158a26] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:49.784 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:49.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:49.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:50.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:50.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:50.411 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:50.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:50.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:50.814 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:14:50.814 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:14:50.814 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:14:50.814 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:14:50.814 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:14:50.814 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:14:50.814 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:14:50.814 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=448da8cb101c18a6] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:14:50.814 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=448da8cb101c18a6] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:14:50.815 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:14:50.815 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966001135026177] [posTime=2025/05/12 00:14:12.279 +02:00]
[2025/05/12 00:14:50.815 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:14:50.815 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:14:50.830 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:14:50.830 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:14:51.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:51.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:51.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:51.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:51.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:51.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:52.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:52.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:52.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:52.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7957a63b267fd92d] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:52.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:52.794 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:52.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:52.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:53.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:53.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:53.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:53.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:54.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:54.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:54.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:54.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:54.803 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966012249931777] [tSafe_p=2025/05/12 00:14:54.679 +02:00] [tsLag=124.031ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:14:54.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:55.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:55.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:55.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:55.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:55.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=36774efbf4633dd7] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:55.786 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:55.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:55.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:56.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:56.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:56.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:56.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:56.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:57.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:57.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:57.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:57.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:57.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:58.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:58.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:58.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:58.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:58.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1bd84183a091f7d2] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:14:58.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:14:58.808 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:14:58.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:58.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:59.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:59.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:59.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:14:59.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:00.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:00.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:00.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:00.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:00.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:01.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:01.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:01.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:01.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:01.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=25f88e95e75034c6] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:01.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:01.798 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:01.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:02.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:02.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:02.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:02.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:02.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:03.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:03.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:03.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:03.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:03.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:03.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:04.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:04.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:04.497 +02:00] [INFO] [gc/gc_tuner.go:84] ["GC Tune done"] ["previous GOGC"=200] ["heapuse "=91] ["total memory"=10239] ["next GC"=94] ["new GOGC"=200] [gc-pause=0s] [gc-pause-end=1747001704497773000]
[2025/05/12 00:15:04.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:04.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=75e60d70179d78] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:04.791 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:04.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:04.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:04.807 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966014831525889] [tSafe_p=2025/05/12 00:15:04.527 +02:00] [tsLag=280.8426ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:15:05.010 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:05.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:05.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:05.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:05.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:05.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:06.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:06.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:06.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:06.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:07.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:07.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:07.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:07.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:07.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=46692a3023ee57f6] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:07.784 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:07.800 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:07.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:08.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:08.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:08.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:08.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:08.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:09.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:09.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:09.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:09.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:09.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:10.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:10.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:10.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:10.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:10.768 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=69c79627851723a5] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:10.784 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:10.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:10.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:10.830 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:15:10.830 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:15:11.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:11.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:11.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:11.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:11.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:11.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:12.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:12.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:12.404 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966016863666177] [time=2025/05/12 00:15:12.279 +02:00]
[2025/05/12 00:15:12.405 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966016863666177] [cpTime=2025/05/12 00:15:12.279 +02:00]
[2025/05/12 00:15:12.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:12.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:12.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:13.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:13.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:13.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:13.777 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=60ee4a013d2d25b3] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:13.793 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:13.793 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:13.810 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:13.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:14.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:14.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:14.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:14.807 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966017452441601] [tSafe_p=2025/05/12 00:15:14.525 +02:00] [tsLag=282.1646ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:15:14.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:14.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:15.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:15.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:15.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:15.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:16.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:16.210 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:16.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:16.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:16.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1ec3b050f6ca7292] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:16.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:16.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:16.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:17.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:17.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:17.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:17.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:17.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:18.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:18.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:18.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:18.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:18.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:18.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:19.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:19.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:19.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:19.777 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4849563399fd7803] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:19.793 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:19.793 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:19.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:19.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:20.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:20.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:20.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:20.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:20.817 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:15:20.817 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:15:20.817 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:15:20.817 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:15:20.817 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:15:20.817 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:15:20.817 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:15:20.817 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=2679330e6e94281] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:15:20.817 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=2679330e6e94281] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:15:20.818 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:15:20.818 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966016863666177] [posTime=2025/05/12 00:15:12.279 +02:00]
[2025/05/12 00:15:20.818 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:15:20.818 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:15:21.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:21.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:21.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:21.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:21.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:21.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:22.202 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:22.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:22.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:22.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=41af4140f6ae46a3] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:22.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:22.808 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:22.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:22.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:23.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:23.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:23.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:23.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:23.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:24.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:24.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:24.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:24.806 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966020114513921] [tSafe_p=2025/05/12 00:15:24.680 +02:00] [tsLag=126.4074ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:15:24.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:25.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:25.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:25.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:25.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:25.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3c28c4ade6fe2064] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:25.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:25.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:25.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:26.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:26.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:26.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:26.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:26.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:27.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:27.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:27.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:27.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:27.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:28.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:28.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:28.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:28.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:28.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=22c9ad2e81445351] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:28.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:28.800 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:28.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:29.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:29.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:29.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:29.610 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:29.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:30.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:30.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:30.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:30.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:30.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:30.825 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:15:30.825 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:15:30.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:31.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:31.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:31.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:31.773 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=ff6d783af2d07] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:31.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:31.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:31.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:32.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:32.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:32.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:32.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:32.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:33.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:33.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:33.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:33.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:33.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:34.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:34.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:34.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:34.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:34.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1f20139f132d6d21] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:34.793 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:34.793 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:34.810 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966022695845889] [tSafe_p=2025/05/12 00:15:34.527 +02:00] [tsLag=283.4636ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:15:34.810 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:34.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:35.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:35.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:35.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:35.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:35.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:36.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:36.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:36.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:36.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:37.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:37.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:37.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:37.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:37.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=7c744b472a2c5c52] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:37.784 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:37.800 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:37.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:38.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:38.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:38.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:38.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:38.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:38.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:39.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:39.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:39.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:39.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:39.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:40.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:40.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:40.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:40.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=23010ea9426131b1] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:40.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:40.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:40.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:41.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:41.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:41.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:41.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:41.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:42.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:42.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:42.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:42.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:42.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:43.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:43.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:43.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:43.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:43.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=703ce50f210445a3] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:43.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:43.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:43.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:44.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:44.194 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:44.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:44.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:44.803 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966025356869633] [tSafe_p=2025/05/12 00:15:44.678 +02:00] [tsLag=125.4218ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:15:44.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:45.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:45.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:45.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:45.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:45.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:46.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:46.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:46.394 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:46.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:46.769 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3da483b0104b44ed] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:46.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:46.800 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:46.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:47.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:47.048 +02:00] [INFO] [datacoord/policy.go:585] ["node channel count is not much larger than average, skip reallocating"] [nodeID=67] [channelCount=1] [channelCountPerNode=1]
[2025/05/12 00:15:47.048 +02:00] [INFO] [datacoord/policy.go:604] ["Channel Balancer got new reAllocations:"] [reAllocations="[]"]
[2025/05/12 00:15:47.049 +02:00] [INFO] [datacoord/channel_manager.go:277] ["channel manager bg check balance"] [toReleases="[]"]
[2025/05/12 00:15:47.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:47.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:47.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:47.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:48.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:48.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:48.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:48.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:48.796 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:48.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:49.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:49.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:49.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:49.779 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=292f653dc614c878] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:49.780 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:49.795 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:49.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:49.998 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:50.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:50.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:50.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:50.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:50.810 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:15:50.810 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:15:50.810 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:15:50.810 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:15:50.810 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:15:50.810 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:15:50.810 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:15:50.810 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=6eb41fad07c9768c] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:15:50.810 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=6eb41fad07c9768c] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:15:50.811 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:15:50.811 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966016863666177] [posTime=2025/05/12 00:15:12.279 +02:00]
[2025/05/12 00:15:50.811 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:15:50.811 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:15:50.826 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:15:50.826 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:15:50.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:51.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:51.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:51.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:51.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:51.994 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:52.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:52.399 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:52.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:52.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4ec0e76bc40c630c] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:52.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:52.805 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:52.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:53.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:53.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:53.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:53.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:53.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:54.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:54.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:54.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:54.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:54.803 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966027978047489] [tSafe_p=2025/05/12 00:15:54.677 +02:00] [tsLag=126.8353ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:15:54.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:55.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:55.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:55.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:55.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:55.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=61a8b3aeded8da39] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:55.786 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:55.802 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:55.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:56.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:56.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:56.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:56.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:56.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:57.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:57.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:57.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:57.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:57.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:58.004 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:58.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:58.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:58.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:58.781 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:15:58.781 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=4abdf84e34f8e557] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:15:58.797 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:15:58.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:59.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:59.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:59.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:59.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:59.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:15:59.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:00.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:00.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:00.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:00.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:01.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:01.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:01.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:01.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:01.771 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5c5cf3b5a24b9761] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:01.787 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:01.803 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:01.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:01.917 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=6e11ac73784f4a5e] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:16:01.918 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=6e11ac73784f4a5e] [role=proxy] [MsgID=457966029875970049] [BeginTS=457966029875970049] [EndTS=457966029875970049] [db=default] [collection=rag_collection]
[2025/05/12 00:16:01.918 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=6e11ac73784f4a5e] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966029875970049] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:16:01.918 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=6e11ac73784f4a5e] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966029875970049] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:16:01.918 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=6e11ac73784f4a5e] [role=proxy] [MsgID=457966029875970049] [BeginTS=457966029875970049] [EndTS=457966029875970049] [db=default] [collection=rag_collection]
[2025/05/12 00:16:01.919 +02:00] [INFO] [proxy/impl.go:791] ["DescribeCollection received"] [traceID=74b6d50bb7ec0476] [role=proxy] [db=default] [collection=rag_collection]
[2025/05/12 00:16:01.919 +02:00] [INFO] [proxy/impl.go:815] ["DescribeCollection enqueued"] [traceID=74b6d50bb7ec0476] [role=proxy] [MsgID=457966029875970051] [BeginTS=457966029875970051] [EndTS=457966029875970051] [db=default] [collection=rag_collection]
[2025/05/12 00:16:01.919 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=74b6d50bb7ec0476] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966029875970051] [ts=18446744073709551615] [allowUnavailable=false]
[2025/05/12 00:16:01.919 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=74b6d50bb7ec0476] ["collection name"=rag_collection] [dbName=default] [id=0] [msgID=457966029875970051] [ts=18446744073709551615] [allowUnavailable=false] [collection_id=457665900034916433]
[2025/05/12 00:16:01.919 +02:00] [INFO] [proxy/impl.go:846] ["DescribeCollection done"] [traceID=74b6d50bb7ec0476] [role=proxy] [MsgID=457966029875970051] [BeginTS=457966029875970051] [EndTS=457966029875970051] [db=default] [collection=rag_collection]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/impl.go:3050] ["Search received"] [traceID=57e8dde2d4ee13c3] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/impl.go:3088] [tr/Search] [traceID=57e8dde2d4ee13c3] [msg="search request enqueue"] [duration=0s]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/impl.go:3090] ["Search enqueued"] [traceID=57e8dde2d4ee13c3] [role=proxy] [msgID=457966029875970053] [timestamp=457966029875970053] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"ignore_growing\",\"value\":\"False\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/task_search.go:265] ["translate output fields"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] ["output fields"="[source_path,chunk_id,chunk_preview,chunk_text,emb]"]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/task_search.go:326] ["create query plan"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [dsl=] ["anns field"=emb] ["query info"="topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 "]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/task_search.go:369] [Proxy::searchTask::PreExecute] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [plan.OutputFieldIds="[]"] [plan="vector_anns:<field_id:101 query_info:<topk:50 metric_type:\"IP\" search_params:\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\" round_decimal:-1 > placeholder_tag:\"$0\" > "]
[2025/05/12 00:16:01.921 +02:00] [DEBUG] [proxy/task_search.go:421] ["search PreExecute done."] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [travel_ts=18446744073709551615] [guarantee_ts=457966028565250053] [use_default_consistency=true] ["consistency level"=Bounded] [timeout_ts=0]
[2025/05/12 00:16:01.921 +02:00] [INFO] [proxy/meta_cache.go:751] ["no shard cache for collection, try to get shard leaders from QueryCoord"] [collectionName=rag_collection]
[2025/05/12 00:16:01.921 +02:00] [INFO] [querycoordv2/services.go:871] ["get shard leaders request received"] [msgID=0] [collectionID=457665900034916433]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/impl.go:772] ["Received SearchRequest"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=457966028565250053] [timeTravel=18446744073709551615]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/impl.go:942] ["start do search"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/shard_cluster.go:723] ["cluster segment distribution"] [len=0] [partitionIDs="[]"]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=2025/05/12 00:15:56.917 +02:00] [serviceTime=2025/05/12 00:16:01.678 +02:00] ["delta milliseconds"=-4761] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966029875970053]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=57e8dde2d4ee13c3] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/segment.go:429] ["start do search on segment"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/segment.go:447] ["do search on segment done"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] [segmentID=457665900035116791] [segmentType=2] [loadIndex=false]
[2025/05/12 00:16:01.922 +02:00] [INFO] [querynode/search.go:100] ["search growing/sealed segments without indexes"] [traceID=57e8dde2d4ee13c3] [segmentIDs="[457665900035116791]"]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/impl.go:1015] [tr/SearchShard] [traceID=57e8dde2d4ee13c3] [msg="do search done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=0s]
[2025/05/12 00:16:01.922 +02:00] [DEBUG] [querynode/impl.go:1024] [tr/SearchShard] [traceID=57e8dde2d4ee13c3] [msg="do reduce done in shard cluster, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=0s]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [querynode/impl.go:844] [tr/Search] [traceID=57e8dde2d4ee13c3] [msg="search done in all shards"] [duration=1.0485ms]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:478] ["Search Execute done"] [traceID=57e8dde2d4ee13c3]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:479] ["tr/proxy execute search 457966029875970053"] [traceID=57e8dde2d4ee13c3] [msg=done] [duration=2.0452ms]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:725] ["all searches are finished or canceled"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:729] ["proxy receives one search result"] [traceID=57e8dde2d4ee13c3] [sourceID=0] [msgID=457966029875970053]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:506] ["tr/searchTask PostExecute"] [traceID=57e8dde2d4ee13c3] [msg=decodeResultStart] [duration=0s]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:788] [tr/decodeSearchResults] [traceID=57e8dde2d4ee13c3] [msg="decodeSearchResults done"] [duration=0s]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:520] ["proxy search post execute reduce"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053] ["number of valid search results"=1]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:521] ["tr/searchTask PostExecute"] [traceID=57e8dde2d4ee13c3] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:850] [reduceSearchResultData] [traceID=57e8dde2d4ee13c3] [len(subSearchResultData)=1] [nq=1] [offset=0] [limit=50] [metricType=IP]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:889] [subSearchResultData] [traceID=57e8dde2d4ee13c3] ["result No."=0] [nq=1] [topk=50] ["length of FieldsData"=0]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:980] ["skip duplicated search result"] [traceID=57e8dde2d4ee13c3] [count=0]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:846] [tr/reduceSearchResultData] [traceID=57e8dde2d4ee13c3] [msg=done] [duration=0s]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/task_search.go:537] ["Search post execute done"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970053]
[2025/05/12 00:16:01.923 +02:00] [DEBUG] [proxy/impl.go:3321] ["Query received"] [traceID=57e8dde2d4ee13c3] [role=proxy] [db=default] [collection=rag_collection] [partitions="[]"] [expr="id in [ 457665900034916845, 457665900034916813, 457665900034916797, 457665900034916805, 457665900034916837, 457665900034916847, 457665900034916861, 457665900034916799, 457665900034916833, 457665900034916827, 457665900034916811, 457665900034916825, 457665900034916841, 457665900034916815, 457665900034916857, 457665900034916801, 457665900034916809, 457665900034916807, 457665900034916789, 457665900034916863, 457665900034916793, 457665900034916823, 457665900034916849, 457665900034916851, 457665900034916795, 457665900034916843, 457665900034916853, 457665900034916819, 457665900034916859, 457665900034916835, 457665900034916865, 457665900034916829, 457665900034916855, 457665900034916791, 457665900034916803, 457665900034916817, 457665900034916787, 457665900034916821, 457665900034916839, 457665900034916831 ]"] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:16:01.925 +02:00] [DEBUG] [proxy/impl.go:3351] [tr/Query] [traceID=57e8dde2d4ee13c3] [msg="query request enqueue"] [duration=1.9995ms]
[2025/05/12 00:16:01.925 +02:00] [DEBUG] [proxy/impl.go:3353] ["Query enqueued"] [traceID=57e8dde2d4ee13c3] [role=proxy] [msgID=457966029875970054] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:16:01.925 +02:00] [DEBUG] [proxy/task_query.go:195] ["Validate collection name."] [traceID=57e8dde2d4ee13c3] [collectionName=rag_collection] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.925 +02:00] [DEBUG] [proxy/task_query.go:206] ["Get collection ID by name"] [traceID=57e8dde2d4ee13c3] [collectionID=457665900034916433] ["collection name"=rag_collection] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.925 +02:00] [DEBUG] [proxy/task_query.go:222] ["Validate partition names."] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [proxy/task_query.go:297] ["Get partitions in collection."] [traceID=57e8dde2d4ee13c3] [collectionName=rag_collection] [msgID=457966029875970054] [requestType=query] [partitionIDs="[]"]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [proxy/task_query.go:304] ["translate output fields"] [traceID=57e8dde2d4ee13c3] [OutputFields="[chunk_text,emb,id,source_path,chunk_id,chunk_preview]"] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [proxy/task_query.go:314] ["translate output fields to field ids"] [traceID=57e8dde2d4ee13c3] [OutputFieldsID="[104,101,100,102,103,105,1]"] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [proxy/task_query.go:363] ["Query PreExecute done."] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [requestType=query] [guarantee_ts=1] [travel_ts=457966029875970054] [timeout_ts=0]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [querynode/impl.go:1190] ["Received QueryRequest"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [collectionID=457665900034916433] [fromShardLeader=false] [vChannels="[by-dev-rootcoord-dml_2_457665900034916433v0]"] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966029875970054] [partitionIDs="[]"]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [querynode/impl.go:1062] ["queryWithDmlChannel receives query request"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"] [guaranteeTimestamp=1] [timeTravel=457966029875970054]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [querynode/impl.go:1080] ["queryWithDmlChannel starts do query"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [collectionID=457665900034916433] [fromShardLeader=false] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [segmentIDs="[]"]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [querynode/task_read.go:190] ["query msg can do"] [collectionID=457665900034916433] [sm.GuaranteeTimestamp=1970/01/01 01:00:00.000 +01:00] [serviceTime=2025/05/12 00:16:01.678 +02:00] ["delta milliseconds"=-1747001761678] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [msgID=457966029875970054]
[2025/05/12 00:16:01.927 +02:00] [DEBUG] [querynode/task_read.go:197] [tr/waitTSafeTimeRecorder] [msg="wait for tsafe done"] [duration=0s]
[2025/05/12 00:16:01.928 +02:00] [DEBUG] [querynode/validate.go:115] ["read target partitions on stream replica"] [traceID=57e8dde2d4ee13c3] [collectionID=457665900034916433] [partitionIDs="[457665900034916434]"]
[2025/05/12 00:16:01.928 +02:00] [DEBUG] [querynode/segment.go:475] ["do retrieve on segment"] [msgID=457966029875970054] [segmentID=457665900035116791] [segmentType=2]
[2025/05/12 00:16:01.929 +02:00] [DEBUG] [querynode/result.go:347] [mergeSegcoreRetrieveResults] [traceID=57e8dde2d4ee13c3] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:16:01.929 +02:00] [DEBUG] [querynode/impl.go:1151] [tr/] [traceID=57e8dde2d4ee13c3] [msg="start reduce query result, msgID = 457966029875970054, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=2.0018ms]
[2025/05/12 00:16:01.929 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=57e8dde2d4ee13c3] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:16:01.929 +02:00] [DEBUG] [querynode/impl.go:1161] [tr/] [traceID=57e8dde2d4ee13c3] [msg="do query done, msgID = 457966029875970054, fromSharedLeader = false, vChannel = by-dev-rootcoord-dml_2_457665900034916433v0, segmentIDs = []"] [duration=2.0018ms]
[2025/05/12 00:16:01.929 +02:00] [DEBUG] [querynode/result.go:273] [mergeInternelRetrieveResults] [traceID=57e8dde2d4ee13c3] [limit=-1] [len(retrieveResults)=1]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:522] ["get query result"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [nodeID=63] [channelIDs="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:415] ["Query Execute done."] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:417] ["tr/proxy execute query 457966029875970054"] [traceID=57e8dde2d4ee13c3] [msg=done] [duration=3.0151ms]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:433] ["all queries are finished or canceled"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:437] ["proxy receives one query result"] [traceID=57e8dde2d4ee13c3] [sourceID=0] [msgID=457966029875970054]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:442] ["tr/queryTask PostExecute"] [traceID=57e8dde2d4ee13c3] [msg=reduceResultStart] [duration=0s]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:544] [reduceInternelRetrieveResults] [traceID=57e8dde2d4ee13c3] [len(retrieveResults)=1]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:489] ["Query PostExecute done"] [traceID=57e8dde2d4ee13c3] [msgID=457966029875970054] [requestType=query]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_query.go:423] ["tr/queryTask PostExecute"] [traceID=57e8dde2d4ee13c3] [msg=done] [duration=0s]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/impl.go:3381] [tr/Query] [traceID=57e8dde2d4ee13c3] [msg="wait query result"] [duration=5.5291ms]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/impl.go:3385] ["Query done"] [traceID=57e8dde2d4ee13c3] [role=proxy] [msgID=457966029875970054] [db=default] [collection=rag_collection] [partitions="[]"]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_search.go:546] ["Search post execute done"] [traceID=57e8dde2d4ee13c3] [collection=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/task_search.go:488] ["tr/searchTask PostExecute"] [traceID=57e8dde2d4ee13c3] [msg=done] [duration=7.5286ms]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/impl.go:3132] [tr/Search] [traceID=57e8dde2d4ee13c3] [msg="wait search result"] [duration=9.5738ms]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/impl.go:3135] [tr/Search] [traceID=57e8dde2d4ee13c3] [msg="wait search result"] [duration=0s]
[2025/05/12 00:16:01.930 +02:00] [DEBUG] [proxy/impl.go:3136] ["Search done"] [traceID=57e8dde2d4ee13c3] [role=proxy] [msgID=457966029875970053] [db=default] [collection=rag_collection] [partitions="[]"] [dsl=] [len(PlaceholderGroup)=2060] [OutputFields="[source_path,chunk_id,chunk_preview,chunk_text,emb]"] [search_params="[{\"key\":\"topk\",\"value\":\"50\"},{\"key\":\"round_decimal\",\"value\":\"-1\"},{\"key\":\"metric_type\",\"value\":\"IP\"},{\"key\":\"anns_field\",\"value\":\"emb\"},{\"key\":\"params\",\"value\":\"{\\\"nprobe\\\":10,\\\"metric_type\\\":\\\"IP\\\"}\"}]"] [travel_timestamp=0] [guarantee_timestamp=1]
[2025/05/12 00:16:02.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:02.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:02.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:02.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:02.800 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:03.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:03.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:03.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:03.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:03.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:03.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:04.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:04.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:04.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:04.776 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=3024acde478b07e] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:04.792 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:04.793 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:04.809 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966030560165889] [tSafe_p=2025/05/12 00:16:04.527 +02:00] [tsLag=282.1346ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:16:04.809 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:04.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:05.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:05.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:05.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:05.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:06.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:06.196 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:06.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:06.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:06.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:07.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:07.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:07.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:07.598 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:07.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:07.783 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=5e7092d984ae8b43] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:07.798 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:07.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:08.002 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:08.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:08.405 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:08.607 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:08.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:08.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:09.199 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:09.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:09.604 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:09.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:10.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:10.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:10.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:10.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:10.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=13161c4e529c0b4a] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:10.789 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:10.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:10.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:10.835 +02:00] [DEBUG] [checkers/balance_checker.go:105] ["ScoreBasedBalancer has balanced collection, skip balancing in this round"] [collectionID=457665900034916433]
[2025/05/12 00:16:10.835 +02:00] [DEBUG] [checkers/balance_checker.go:119] ["ScoreBasedBalancer has balanced all collections in one round, clear collectionIDs for this round"]
[2025/05/12 00:16:11.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:11.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:11.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:11.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:11.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:12.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:12.208 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:12.395 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:12.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:12.600 +02:00] [DEBUG] [datacoord/meta.go:1249] ["UpdateChannelCheckpoint done"] [vChannel=by-dev-rootcoord-dml_2_457665900034916433v0] [ts=457966032602267649] [time=2025/05/12 00:16:12.317 +02:00]
[2025/05/12 00:16:12.600 +02:00] [INFO] [datanode/flow_graph_time_tick_node.go:144] ["UpdateChannelCheckpoint success"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [cpTs=457966032602267649] [cpTime=2025/05/12 00:16:12.317 +02:00]
[2025/05/12 00:16:12.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:13.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:13.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:13.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:13.596 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:13.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:13.783 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=f8dde632cef43ab] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:13.799 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:13.799 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:14.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:14.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:14.406 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:14.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:14.795 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966033182654465] [tSafe_p=2025/05/12 00:16:14.531 +02:00] [tsLag=264.5739ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:16:14.795 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:14.999 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:15.201 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:15.404 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:15.608 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:15.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:15.997 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:16.200 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:16.403 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:16.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:16.774 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=259613b34df9083c] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:16.790 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:16.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:16.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:17.009 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:17.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:17.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:17.602 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:17.805 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:18.007 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:18.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:18.396 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:18.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:18.802 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:19.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:19.205 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:19.409 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:19.595 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:19.783 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:19.783 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=1638877ae6c7f8c7] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:19.798 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:19.798 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:20.001 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:20.204 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:20.408 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:20.611 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:20.797 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:20.812 +02:00] [INFO] [observers/target_observer.go:279] ["observer trigger update current target"] [collectionID=457665900034916433]
[2025/05/12 00:16:20.812 +02:00] [DEBUG] [meta/target_manager.go:72] ["start to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"]
[2025/05/12 00:16:20.812 +02:00] [DEBUG] [meta/target_manager.go:82] ["finish to update current target for collection"] [collectionID=457665900034916433] [PartitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:16:20.812 +02:00] [INFO] [observers/target_observer.go:230] ["observer trigger update next target"] [collectionID=457665900034916433]
[2025/05/12 00:16:20.812 +02:00] [DEBUG] [meta/target_manager.go:125] ["start to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:16:20.812 +02:00] [DEBUG] [meta/target_manager.go:195] ["start to pull next targets for partition"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:16:20.812 +02:00] [INFO] [datacoord/services.go:793] ["get recovery info request received"] [collectionID=457665900034916433] [partitionIDs="[]"]
[2025/05/12 00:16:20.812 +02:00] [INFO] [rootcoord/root_coord.go:1155] ["received request to describe collection"] [traceID=19472df36dad6b05] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true]
[2025/05/12 00:16:20.812 +02:00] [INFO] [rootcoord/root_coord.go:1188] ["done to describe collection"] [traceID=19472df36dad6b05] ["collection name"=] [dbName=] [id=457665900034916433] [msgID=0] [ts=18446744073709551615] [allowUnavailable=true] [collection_id=457665900034916433]
[2025/05/12 00:16:20.813 +02:00] [INFO] [datacoord/handler.go:121] [GetQueryVChanPositions] [collectionID=457665900034916433] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [numOfSegments=1]
[2025/05/12 00:16:20.813 +02:00] [INFO] [datacoord/handler.go:290] ["channel seek position set from channel checkpoint meta"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] [posTs=457966032602267649] [posTime=2025/05/12 00:16:12.317 +02:00]
[2025/05/12 00:16:20.813 +02:00] [INFO] [datacoord/services.go:829] ["datacoord append channelInfo in GetRecoveryInfo"] [collectionID=457665900034916433] [partitionIDs="[]"] [channel=by-dev-rootcoord-dml_2_457665900034916433v0] ["# of unflushed segments"=1] ["# of flushed segments"=0] ["# of dropped segments"=0]
[2025/05/12 00:16:20.814 +02:00] [DEBUG] [meta/target_manager.go:135] ["finish to update next targets for collection"] [collectionID=457665900034916433] [partitionIDs="[]"] [segments="[]"] [channels="[by-dev-rootcoord-dml_2_457665900034916433v0]"]
[2025/05/12 00:16:21.000 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:21.203 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:21.407 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:21.609 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:21.794 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:21.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:22.197 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:22.400 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:22.603 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:22.775 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=26c3a7314e385231] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:22.791 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:22.806 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:22.806 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:22.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:23.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:23.402 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:23.605 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:23.808 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:23.996 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:24.198 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:24.401 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:24.606 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:24.807 +02:00] [DEBUG] [querynode/flow_graph_service_time_node.go:76] ["update tSafe:"] [collectionID=457665900034916433] [tSafe=457966035839746049] [tSafe_p=2025/05/12 00:16:24.667 +02:00] [tsLag=140.569ms] [channel=by-dev-rootcoord-dml_2_457665900034916433v0]
[2025/05/12 00:16:24.807 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:24.995 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:25.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:25.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:25.601 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:25.772 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=56a15708e74ff9b5] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:25.788 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:25.804 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:25.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:26.008 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:26.195 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:26.398 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:26.600 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:26.804 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:27.006 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:27.209 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:27.397 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:27.599 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:27.803 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:28.005 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:28.207 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:28.410 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:28.597 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:28.770 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=2541ebb03add42cf] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:28.785 +02:00] [DEBUG] [querynode/impl.go:112] ["Get QueryNode component state done"] [stateCode=Healthy]
[2025/05/12 00:16:28.801 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:28.801 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:29.003 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:29.206 +02:00] [DEBUG] [datanode/channel_meta.go:777] ["getChannelCheckpoint for segment"] [segmentID=457665900035116791] [isCurIBEmpty=true] [isCurDBEmpty=true] [len(hisIB)=0] [len(hisDB)=0] [newChannelCpTs=18446744073709551615]
[2025/05/12 00:16:29.373 +02:00] [WARN] [roles/roles.go:266] ["Get signal to exit"] [signal=terminated]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/service.go:314] ["Rootcoord stop"] [Address=192.168.0.100:40000]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/service.go:324] ["Rootcoord begin to stop grpc server"]
[2025/05/12 00:16:29.374 +02:00] [DEBUG] [utils/util.go:20] ["try to graceful stop grpc server..."]
[2025/05/12 00:16:29.374 +02:00] [WARN] [rootcoord/proxy_manager.go:108] ["stop watching etcd loop"]
[2025/05/12 00:16:29.374 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/root_coord.go:254] ["rootcoord's ts loop quit!"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/timeticksync.go:264] ["rootcoord context done"] [error="context canceled"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/import_manager.go:175] ["(in cleanupLoop) import manager context done, exit cleanupLoop"]
[2025/05/12 00:16:29.374 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/root_coord.go:229] ["rootcoord's timetick loop quit!"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/import_manager.go:133] ["import manager context done, exit check sendOutTasksLoop"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/import_manager.go:151] ["import manager context done, exit check flipTaskStateLoop"]
[2025/05/12 00:16:29.374 +02:00] [WARN] [timerecord/time_recorder.go:128] ["long term checker [rootTtChecker] shutdown"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/root_coord.go:173] ["update rootcoord state"] [state=Abnormal]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/root_coord.go:706] ["stop rootcoord executor"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/root_coord.go:713] ["stop rootcoord scheduler"]
[2025/05/12 00:16:29.374 +02:00] [INFO] [rootcoord/root_coord.go:720] ["cancel rootcoord goroutines"]
[2025/05/12 00:16:29.375 +02:00] [INFO] [rootcoord/root_coord.go:728] ["revoke rootcoord session"]
[2025/05/12 00:16:29.375 +02:00] [INFO] [datacoord/service.go:233] ["Datacoord stop"] [Address=192.168.0.100:40005]
[2025/05/12 00:16:29.375 +02:00] [DEBUG] [utils/util.go:20] ["try to graceful stop grpc server..."]
[2025/05/12 00:16:29.375 +02:00] [INFO] [datacoord/channel_manager.go:269] ["background checking channels loop quit"]
[2025/05/12 00:16:29.375 +02:00] [INFO] [datacoord/server.go:821] ["flush loop shutdown"]
[2025/05/12 00:16:29.375 +02:00] [INFO] [datacoord/channel_manager.go:676] ["watch etcd loop quit"]
[2025/05/12 00:16:29.375 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:16:29.375 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:16:29.375 +02:00] [INFO] [datacoord/server.go:737] ["watch service shutdown"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [datacoord/server.go:904] ["server shutdown"]
[2025/05/12 00:16:29.376 +02:00] [WARN] [datacoord/garbage_collector.go:107] ["garbage collector quit"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [datacoord/compaction_trigger.go:150] ["global compaction loop exit"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [datacoord/compaction_trigger.go:119] ["compaction trigger quit"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [datacoord/compaction.go:134] ["compaction handler quit"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/service.go:210] ["Indexcoord stop"] [Address=192.168.0.100:40003]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/index_coord.go:328] ["cancel the loop of IndexCoord"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/index_coord.go:333] ["close the task scheduler of IndexCoord"]
[2025/05/12 00:16:29.376 +02:00] [WARN] [indexcoord/index_builder.go:148] ["index builder ctx done"]
[2025/05/12 00:16:29.376 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/garbage_collector.go:204] ["IndexCoord garbageCollector recycleUnusedMetaLoop context has done"]
[2025/05/12 00:16:29.376 +02:00] [WARN] [indexcoord/flush_segment_watcher.go:154] ["IndexCoord flushedSegmentWatcher context done"]
[2025/05/12 00:16:29.376 +02:00] [WARN] [indexcoord/index_coord.go:1340] ["IndexCoord context done, exit..."]
[2025/05/12 00:16:29.376 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/garbage_collector.go:88] ["IndexCoord garbageCollector recycleUnusedMetaLoop context has done"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/index_coord.go:339] ["stop the index builder of IndexCoord"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/index_coord.go:343] ["stop the garbage collector of IndexCoord"]
[2025/05/12 00:16:29.376 +02:00] [INFO] [indexcoord/index_coord.go:347] ["stop the flushed segment watcher"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [indexcoord/service.go:224] ["Graceful stop grpc server..."]
[2025/05/12 00:16:29.377 +02:00] [INFO] [indexcoord/service.go:373] ["IndexCoord grpcServer loop exit"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [querycoord/service.go:312] ["QueryCoord stop"] [Address=192.168.0.100:40001]
[2025/05/12 00:16:29.377 +02:00] [DEBUG] [utils/util.go:20] ["try to graceful stop grpc server..."]
[2025/05/12 00:16:29.377 +02:00] [INFO] [checkers/controller.go:89] ["CheckerController stopped due to context canceled"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [querycoordv2/server.go:616] ["stop watching nodes, QueryCoord stopped"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [observers/target_observer.go:102] ["Close target observer due to context canceled"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [observers/leader_observer.go:59] ["stop leader observer due to ctx done"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [querycoordv2/server.go:676] ["close check node health due to context done"]
[2025/05/12 00:16:29.377 +02:00] [WARN] [sessionutil/session_util.go:436] ["keep alive"] [error="context done"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [observers/collection_observer.go:75] ["CollectionObserver stopped due to context canceled"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [job/scheduler.go:77] ["JobManager stopped due to context canceled"]
[2025/05/12 00:16:29.377 +02:00] [WARN] [sessionutil/session_util.go:785] ["liveness exits due to context done"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [observers/resource_observer.go:67] ["Close resource group observer due to context canceled"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [task/merger.go:79] ["Merger stopped due to context canceled"]
[2025/05/12 00:16:29.377 +02:00] [INFO] [dist/dist_handler.go:65] ["close dist handler due to context done"] [nodeID=63]
[2025/05/12 00:16:29.377 +02:00] [INFO] [observers/replica_observer.go:70] ["Close replica observer due to context canceled"]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:450] ["stop cluster..."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [session/cluster.go:99] ["cluster closed"]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:455] ["stop dist controller..."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:460] ["stop checker controller..."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:465] ["stop task scheduler..."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:470] ["stop job scheduler..."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:474] ["stop observers..."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querycoordv2/server.go:492] ["QueryCoord stop successfully"]
[2025/05/12 00:16:29.379 +02:00] [INFO] [roles/roles.go:382] ["All coordinators have stopped"]
[2025/05/12 00:16:29.379 +02:00] [INFO] [querynode/service.go:246] ["QueryNode stop"] [Address=192.168.0.100:40002]
[2025/05/12 00:16:29.379 +02:00] [WARN] [querynode/query_node.go:422] ["Query node stop.."]
[2025/05/12 00:16:29.379 +02:00] [INFO] [sessionutil/session_util.go:814] ["register session success"] [role=querynode] [key=by-dev/meta/session/querynode-63]
[2025/05/12 00:16:29.608 +02:00] [WARN] [grpclog/grpclog.go:46] ["[core][Channel #40 SubChannel #44] grpc: addrConn.createTransport failed to connect to {\n  \"Addr\": \"192.168.0.100:40000\",\n  \"ServerName\": \"192.168.0.100:40000\",\n  \"Attributes\": null,\n  \"BalancerAttributes\": null,\n  \"Type\": 0,\n  \"Metadata\": null\n}. Err: connection error: desc = \"transport: error while dialing: dial tcp 192.168.0.100:40000: i/o timeout\""]
[2025/05/12 00:16:29.610 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:16:29.610 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).AllocTimestamp\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:424\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).alloc\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:61\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).AllocOne\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:83\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:94\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tickLoop\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:166"]
[2025/05/12 00:16:29.610 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:16:29.610 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).UpdateChannelTimeTick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:462\ngithub.com/milvus-io/milvus/internal/proxy.(*Proxy).sendChannelsTimeTickLoop.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/proxy.go:334"]
[2025/05/12 00:16:29.984 +02:00] [WARN] [grpclog/grpclog.go:46] ["[core][Channel #61 SubChannel #62] grpc: addrConn.createTransport failed to connect to {\n  \"Addr\": \"192.168.0.100:40005\",\n  \"ServerName\": \"192.168.0.100:40005\",\n  \"Attributes\": null,\n  \"BalancerAttributes\": null,\n  \"Type\": 0,\n  \"Metadata\": null\n}. Err: connection error: desc = \"transport: error while dialing: dial tcp 192.168.0.100:40005: i/o timeout\""]
[2025/05/12 00:16:29.984 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datacoord] [error="rpc error: code = Unavailable desc = connection error: desc = \"transport: error while dialing: dial tcp 192.168.0.100:40005: i/o timeout\""]
[2025/05/12 00:16:29.986 +02:00] [WARN] [client/client.go:98] ["DataCoordClient, not existed in msess "] [key=datacoord] ["len of msess"=0]
[2025/05/12 00:16:29.986 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available datacoord, check datacoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).ReportDataNodeTtMsgs\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:868\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:166\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:164\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).start\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:69"]
[2025/05/12 00:16:29.987 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="find no available datacoord, check datacoord state"]
[2025/05/12 00:16:30.624 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:16:30.624 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).AllocTimestamp\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:424\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).alloc\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:61\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).AllocOne\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:83\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:94\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tickLoop\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:166"]
[2025/05/12 00:16:30.624 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:16:30.624 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).UpdateChannelTimeTick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:462\ngithub.com/milvus-io/milvus/internal/proxy.(*Proxy).sendChannelsTimeTickLoop.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/proxy.go:334"]
[2025/05/12 00:16:31.000 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=datacoord]
[2025/05/12 00:16:31.000 +02:00] [WARN] [client/client.go:98] ["DataCoordClient, not existed in msess "] [key=datacoord] ["len of msess"=0]
[2025/05/12 00:16:31.000 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available datacoord, check datacoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).ReportDataNodeTtMsgs\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:868\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:166\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:164\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).start\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:69"]
[2025/05/12 00:16:31.001 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="find no available datacoord, check datacoord state"]
[2025/05/12 00:16:31.778 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=datacoord] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:16:31.778 +02:00] [WARN] [grpcclient/client.go:298] ["start to reset connection because of specific reasons"] [client_role=querycoord] [error="rpc error: code = Canceled desc = grpc: the client connection is closing"]
[2025/05/12 00:16:31.778 +02:00] [WARN] [client/client.go:93] ["DataCoordClient, getSessions failed"] [key=datacoord] [error="context canceled"]
[2025/05/12 00:16:31.778 +02:00] [WARN] [client/client.go:89] ["QueryCoordClient GetSessions failed"] [error="context canceled"]
[2025/05/12 00:16:31.778 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:16:31.778 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="context canceled"]
[2025/05/12 00:16:31.778 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:299\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:529\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:213\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:16:31.778 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="context canceled"]
[2025/05/12 00:16:31.778 +02:00] [DEBUG] [proxy/impl.go:4217] [Proxy.GetProxyMetrics] [traceID=24578242503c876d] [nodeID=69] [req="{\"metric_type\":\"system_info\"}"] [metricType=system_info]
[2025/05/12 00:16:31.794 +02:00] [INFO] [proxy/meta_cache.go:852] ["expire all shard leader cache"] [database=default] [collections="[rag_collection]"]
[2025/05/12 00:16:32.635 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:16:32.635 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).UpdateChannelTimeTick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:462\ngithub.com/milvus-io/milvus/internal/proxy.(*Proxy).sendChannelsTimeTickLoop.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/proxy.go:334"]
[2025/05/12 00:16:32.635 +02:00] [WARN] [client/client.go:106] ["RootCoordClient mess key not exist"] [key=rootcoord]
[2025/05/12 00:16:32.635 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available rootcoord, check rootcoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).AllocTimestamp\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/rootcoord/client/client.go:424\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).alloc\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:61\ngithub.com/milvus-io/milvus/internal/proxy.(*timestampAllocator).AllocOne\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/timestamp.go:83\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tick\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:94\ngithub.com/milvus-io/milvus/internal/proxy.(*channelsTimeTickerImpl).tickLoop\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/proxy/channels_time_ticker.go:166"]
[2025/05/12 00:16:32.792 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=querycoord]
[2025/05/12 00:16:32.792 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=datacoord]
[2025/05/12 00:16:32.792 +02:00] [WARN] [client/client.go:89] ["QueryCoordClient GetSessions failed"] [error="context canceled"]
[2025/05/12 00:16:32.792 +02:00] [WARN] [client/client.go:93] ["DataCoordClient, getSessions failed"] [key=datacoord] [error="context canceled"]
[2025/05/12 00:16:32.792 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/querycoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/querycoord/client/client.go:361\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:188\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:16:32.792 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=querycoord] [error="context canceled"]
[2025/05/12 00:16:32.792 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="context canceled"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).GetMetrics\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:529\ngithub.com/milvus-io/milvus/internal/rootcoord.(*QuotaCenter).syncMetrics.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/rootcoord/quota_center.go:213\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tC:/Users/runneradmin/go/pkg/mod/golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75"]
[2025/05/12 00:16:32.792 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="context canceled"]
[2025/05/12 00:16:33.011 +02:00] [WARN] [grpcclient/client.go:290] ["grpc client is nil, maybe fail to get client in the retry state"] [client_role=datacoord]
[2025/05/12 00:16:33.011 +02:00] [WARN] [client/client.go:98] ["DataCoordClient, not existed in msess "] [key=datacoord] ["len of msess"=0]
[2025/05/12 00:16:33.011 +02:00] [ERROR] [grpcclient/client.go:161] ["failed to get client address"] [error="find no available datacoord, check datacoord state"] [stack="github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).connect\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:161\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).GetGrpcClient\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:134\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:279\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call.func2\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:291\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:287\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).Call\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:367\ngithub.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/grpcclient/client.go:382\ngithub.com/milvus-io/milvus/internal/distributed/datacoord/client.(*Client).ReportDataNodeTtMsgs\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/distributed/datacoord/client/client.go:868\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport.func1\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:166\ngithub.com/milvus-io/milvus/internal/util/retry.Do\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/util/retry/retry.go:39\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).sendReport\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:164\ngithub.com/milvus-io/milvus/internal/datanode.(*timeTickSender).start\n\tD:/a/milvus-lite/milvus-lite/milvus_binary/milvus/internal/datanode/timetick_sender.go:69"]
[2025/05/12 00:16:33.011 +02:00] [WARN] [grpcclient/client.go:281] ["fail to get grpc client in the retry state"] [client_role=datacoord] [error="find no available datacoord, check datacoord state"]
